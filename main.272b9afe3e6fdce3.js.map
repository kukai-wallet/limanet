{"version":3,"file":"main.272b9afe3e6fdce3.js","mappings":"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","sources":["./src/app/components/modals/modal.component.ts","./src/app/components/modals/qr-scanner/qr-scanner.component.html","./src/app/components/modals/qr-scanner/qr-scanner.component.ts","./src/app/components/ui/asset/asset.component.html","./src/app/components/ui/asset/asset.component.ts","./src/app/components/ui/button/toggle/toggle.component.ts","./src/app/components/ui/button/toggle/advanced/advanced.component.ts","./src/app/components/ui/button/toggle/advanced/advanced.component.html","./src/app/components/ui/chart/chart.component.html","./src/app/components/ui/chart/chart.component.ts","./src/app/components/ui/dropdown/dropdown.component.ts","./src/app/components/ui/generic/list.component.ts","./src/app/components/views/logged-in/account-view/activity/event/event.component.html","./src/app/components/views/logged-in/account-view/activity/event/event.component.ts","./src/app/components/views/logged-in/account-view/activity/activity.component.html","./src/app/components/views/logged-in/account-view/activity/activity.component.ts","./src/app/components/views/logged-in/account-view/nfts/token/token.component.html","./src/app/components/views/logged-in/account-view/nfts/token/token.component.ts","./src/app/components/ui/search/search.component.html","./src/app/components/ui/search/search.component.ts","./src/app/components/views/logged-in/account-view/nfts/body/body.component.html","./src/app/components/views/logged-in/account-view/nfts/body/body.component.ts","./src/app/components/views/logged-in/account-view/nfts/nfts.component.html","./src/app/components/views/logged-in/account-view/nfts/nfts.component.ts","./src/app/components/ui/button/basic/basic.component.ts","./src/app/components/ui/button/basic/send/send-button.component.html","./src/app/components/ui/button/basic/send/send-button.component.ts","./src/app/components/views/logged-in/account-view/balances/token/balance-token.component.html","./src/app/components/views/logged-in/account-view/balances/token/balance-token.component.ts","./src/app/components/views/logged-in/account-view/balances/balances.component.html","./src/app/components/views/logged-in/account-view/balances/balances.component.ts","./src/app/components/modals/send/detail/token-detail.component.html","./src/app/components/modals/send/detail/token-detail.component.ts","./src/app/components/views/logged-in/account-view/account-view.component.html","./src/app/components/views/logged-in/account-view/account-view.component.ts","./src/app/components/views/logged-in/settings/settings.component.html","./src/app/components/views/logged-in/settings/settings.component.ts","./src/app/components/views/logged-in/delegate-page/delegate-page.component.html","./src/app/components/views/logged-in/logged-in-routing.module.ts","./src/app/components/views/logged-in/delegate-page/delegate-page.component.ts","./src/app/components/views/logged-in/logged-in.module.ts","./src/app/components/views/start/activate/activate.component.html","./src/app/components/views/start/activate/activate.component.ts","./src/app/interfaces.ts","./src/app/pipes/error-handling.pipe.ts","./src/app/pipes/remove-comma.pipe.ts","./src/app/pipes/time-ago.pipe.ts","./src/app/services/activity/activity.service.ts","./src/app/services/balance/balance.service.ts","./src/app/services/beacon/beacon.service.ts","./src/app/services/chart/chart.service.ts","./src/app/services/indexer/signal/signal.service.ts","./src/app/services/coordinator/coordinator.service.ts","./src/app/services/deeplink/deeplink.service.ts","./src/app/services/delegate/delegate.service.ts","./src/app/services/encryption/encryption.service.ts","./src/app/services/estimate/estimate.service.ts","./src/app/services/indexer/dipdup/dipdup.service.ts","./src/app/services/indexer/indexer.service.ts","./src/app/services/indexer/tzkt/tzkt.service.ts","./src/app/services/input-validation/input-validation.service.ts","./src/app/services/lookup/lookup.service.ts","./src/app/services/message/message.service.ts","./src/app/services/operation/operation.service.ts","./src/app/services/subject/subject.service.ts","./src/app/services/swap-liquidity/classes/Amount.ts","./src/app/services/swap-liquidity/swap-liquidity.service.ts","./src/app/services/tezos-domains/tezos-domains.service.ts","./src/app/services/token-balances/token-balances.service.ts","./src/app/services/indexer/objkt/objkt.service.ts","./src/app/services/token/token.service.ts","./src/app/services/torus/torus.service.ts","./src/app/services/tzrate/tzrate.service.ts","./src/app/services/unlockable/unlockable.service.ts","./src/app/services/wallet/wallet.service.ts","./src/app/services/wallet/wallet.ts","./src/environments/environment.limanet.ts","./src/environments/environment.ts","./src/app/services/import/import.service.ts","./src/app/components/views/start/start.component.html","./src/app/components/views/start/start.component.ts","./src/app/services/export/export.service.ts","./src/app/components/views/start/login-types/new-wallet/new-wallet.component.html","./src/app/components/views/start/login-types/new-wallet/new-wallet.component.ts","./src/app/components/views/start/login-types/mnemonic-import/mnemonic-import.component.html","./src/app/components/views/start/login-types/mnemonic-import/mnemonic-import.component.ts","./src/app/services/ledger/ledger.service.ts","./src/app/components/views/start/login-types/connect-ledger/connect-ledger.component.ts","./src/app/components/views/start/login-types/connect-ledger/connect-ledger.component.html","./src/app/components/views/error/404.component.ts","./src/app/components/views/error/404.component.html","./src/app/components/views/error/500.component.ts","./src/app/components/views/error/500.component.html","./src/app/components/views/start/agreement/privacy-policy/privacy-policy.component.ts","./src/app/components/views/start/agreement/privacy-policy/privacy-policy.component.html","./src/app/components/views/start/agreement/terms-of-use/terms-of-use.component.ts","./src/app/components/views/start/agreement/terms-of-use/terms-of-use.component.html","./src/app/services/embedded-auth/embedded-auth.service.ts","./src/app/components/misc/send/interfaces.ts","./src/app/components/modals/swap-liquidity/swap-liquidity.component.html","./src/app/components/modals/swap-liquidity/swap-liquidity.component.ts","./src/app/components/modals/send/confirm/send-confirmation.component.html","./src/app/components/modals/send/confirm/send-confirmation.component.ts","./src/app/components/ui/dropdown/prepare-send/prepare-send-dropdown.component.html","./src/app/components/ui/dropdown/prepare-send/prepare-send-dropdown.component.ts","./src/app/components/modals/send/prepare/prepare-send.component.html","./src/app/components/modals/send/prepare/prepare-send.component.ts","./src/app/components/views/embedded/confirm-send/confirm-send.component.html","./src/app/components/views/embedded/confirm-send/confirm-send.component.ts","./src/app/components/modals/swap-liquidity/swap-liquidity-confirm.component.html","./src/app/components/modals/swap-liquidity/swap-liquidity-confirm.component.ts","./src/app/components/misc/send/send.component.html","./src/app/components/misc/send/send.component.ts","./src/app/components/views/embedded/sign-expr/template/template.component.html","./src/app/components/views/embedded/sign-expr/template/template.component.ts","./src/app/components/views/embedded/sign-expr/sign-expr.component.html","./src/app/components/views/embedded/sign-expr/sign-expr.component.ts","./src/app/components/views/embedded/queue/queue.component.html","./src/app/components/views/embedded/queue/queue.component.ts","./src/app/components/views/embedded/signin/signin.component.html","./src/app/components/views/embedded/signin/signin.component.ts","./src/app/components/views/embedded/card/card.component.ts","./src/app/components/views/embedded/card/card.component.html","./src/app/components/views/embedded/embedded.component.html","./src/app/components/views/embedded/embedded.component.ts","./src/app/components/modals/receive/receive.component.html","./src/app/components/modals/receive/receive.component.ts","./src/app/components/modals/new-implicit/new-implicit.component.html","./src/app/components/modals/new-implicit/new-implicit.component.ts","./src/app/components/ui/dropdown/permission-request/permission-request.component.html","./src/app/components/ui/dropdown/permission-request/permission-request.component.ts","./src/app/components/modals/permission-request/permission-request.component.html","./src/app/components/modals/permission-request/permission-request.component.ts","./src/app/components/modals/sign-expr/sign-expr.component.html","./src/app/components/modals/sign-expr/sign-expr.component.ts","./src/app/components/modals/originate/originate.component.html","./src/app/components/modals/originate/originate.component.ts","./src/app/components/modals/delegate/delegate.component.html","./src/app/components/modals/delegate/delegate.component.ts","./src/app/components/modals/account-list/body/body.component.html","./src/app/components/modals/account-list/body/body.component.ts","./src/app/components/modals/account-list/list.component.ts","./src/app/components/modals/account-list/list.component.html","./src/app/components/modals/export-mnemonic/export-mnemonic.component.html","./src/app/components/modals/export-mnemonic/export-mnemonic.component.ts","./src/app/components/misc/uri-handler/uri-handler.component.ts","./src/app/components/misc/uri-handler/uri-handler.component.html","./src/app/components/views/logged-in/account-view/buy/buy.component.html","./src/app/components/views/logged-in/account-view/buy/buy.component.ts","./src/app/components/modals/buy/buy.component.html","./src/app/components/modals/buy/buy.component.ts","./src/app/app-routing.module.ts","./src/app/components/views/logged-in/logged-in.component.ts","./src/app/components/views/logged-in/logged-in.component.html","./src/app/components/modals/info/info.component.html","./src/app/components/modals/info/info.component.ts","./src/app/components/modals/alert/alert.component.html","./src/app/components/modals/alert/alert.component.ts","./src/app/components/ui/messages/messages.component.html","./src/app/components/ui/messages/messages.component.ts","./src/app/components/ui/dropdown/account/account-dropdown.component.html","./src/app/components/ui/dropdown/account/account-dropdown.component.ts","./src/app/components/ui/dropdown/mobile-menu/mobile-menu.component.html","./src/app/components/ui/dropdown/mobile-menu/mobile-menu.component.ts","./src/app/components/views/layouts/header/header.component.html","./src/app/components/views/layouts/header/header.component.ts","./src/app/components/views/layouts/footer/footer.component.html","./src/app/components/views/layouts/footer/footer.component.ts","./src/app/components/ui/spinner/new/spinner-new.component.ts","./src/app/components/ui/spinner/new/spinner-new.component.html","./src/app/components/ui/spinner/spinner.component.html","./src/app/components/ui/spinner/spinner.component.ts","./src/app/components/views/start/agreement/agreement.component.html","./src/app/components/views/start/agreement/agreement.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/pipes/truncate.pipe.ts","./src/app/app.module.ts","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { Component, OnInit, Optional, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface ModalPayload {\n  name: string | null;\n  data: any;\n  forceClose?: boolean;\n}\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html'\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  public isOpen = false;\n  name = '';\n  static currentModel = new BehaviorSubject<ModalPayload>({\n    name: '',\n    data: null\n  });\n  private modalSub: Subscription = new Subscription();\n  constructor(@Optional() public cd?: ChangeDetectorRef) {\n    this.cd = cd;\n    this.modalSub = ModalComponent.currentModel.subscribe((load) => {\n      load.forceClose = load.forceClose === undefined ? true : load.forceClose;\n      if (!!load.name && load.name === this.name) {\n        if (!this.isOpen) {\n          this.willOpen();\n          this.open(load.data);\n        }\n      } else {\n        if (this.isOpen && load.forceClose) {\n          this.close();\n          if (this.cd) {\n            this.cd.detectChanges();\n          }\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.modalSub.unsubscribe();\n  }\n\n  willOpen(): void {}\n\n  open(data?: any): void {\n    if (window.innerHeight < document.body.scrollHeight) {\n      document.body.style.marginRight = '0.5rem !important';\n      document.body.style.overflowY = 'hidden !important';\n    }\n    const isMobile = Number(document.documentElement.style.getPropertyValue('--is-mobile'));\n    if (isMobile) {\n      setTimeout(() => {\n        window.scrollTo({ top: 0 });\n      }, 0);\n    }\n    this.isOpen = true;\n  }\n\n  close(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n    this.isOpen = false;\n  }\n}\n","<button *ngIf=\"!override\" class=\"scan\" (click)=\"openModal()\">Scan QR code</button>\n<img *ngIf=\"override\" class=\"scan override\" (click)=\"openModal()\" src=\"assets/img/qr.svg\" />\n<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <form autocomplete=\"off\">\n    <div class=\"content\">\n      <div class=\"flex-row top\">\n        <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n            src=\"../../../assets/img/close-btn-x.png\" /></div>\n        <h1 class=\"title\">QR-Scanner</h1>\n      </div>\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column qr-scanner\">\n        <div class=\"video-container\">\n          <video #videoPlayer>\n            Browser not supported\n          </video>\n          <p class=\"no-cam\" *ngIf=\"!qrScanner\">No camera detected</p>\n          <p class=\"no-cam\" *ngIf=\"!!errorMessage\">{{ errorMessage }}</p>\n          <p class=\"no-cam\" *ngIf=\"!!errorMessage\">Please check site permissions</p>\n        </div>\n        <input *ngIf=\"!override\" name=\"none\" type=\"text\" [(ngModel)]=\"manualInput\" class=\"text\" (paste)=\"handlePaste($event)\"\n          placeholder=\"...or paste pairing string here\">\n      </div>\n    </div>\n  </form>\n</div>","import { Component, ViewChild, ElementRef, Input, EventEmitter, Output } from '@angular/core';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport QrScanner from 'qr-scanner';\nimport { DeeplinkService } from '../../../services/deeplink/deeplink.service';\nimport { CONSTANTS as _CONSTANTS, environment } from '../../../../environments/environment';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n  selector: 'app-qr-scanner',\n  templateUrl: './qr-scanner.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class QrScannerComponent extends ModalComponent {\n  readonly CONSTANTS = _CONSTANTS;\n  readonly env = environment;\n  constructor(private beaconService: BeaconService, private deeplinkService: DeeplinkService, private messageService: MessageService) {\n    super();\n  }\n  @Output('scanResponse') scanResponse = new EventEmitter();\n  @ViewChild('videoPlayer') videoplayer: ElementRef;\n  @Input() override = false;\n  qrScanner: QrScanner;\n  manualInput = '';\n  name = 'qr-scanner';\n  loadingCam = false;\n  errorMessage = '';\n  openModal(): void {\n    if (!this.override) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n    } else {\n      super.open();\n    }\n    this.scan();\n  }\n  async scan(): Promise<void> {\n    this.loadingCam = true;\n    const hasCamera = await QrScanner.hasCamera();\n    if (hasCamera && this.videoplayer?.nativeElement) {\n      this.errorMessage = '';\n      try {\n        this.qrScanner = new QrScanner(this.videoplayer?.nativeElement, (result: QrScanner.ScanResult) => this.handleQrCode(result), {});\n        await this.qrScanner.start();\n        if (!this.isOpen) {\n          this.qrScanner.stop();\n          this.qrScanner.destroy();\n          this.qrScanner = null;\n        }\n      } catch (e) {\n        this.errorMessage = e;\n      }\n    } else {\n      console.warn('no camera found');\n    }\n    this.loadingCam = false;\n  }\n  handleQrCode(scanResult: QrScanner.ScanResult): void {\n    const qrString = scanResult.data;\n    console.log('QR Code', qrString);\n    try {\n      const pairingInfo = this.deeplinkService.QRtoPairingJson(qrString);\n      if (pairingInfo && !this.override) {\n        this.beaconService.preNotifyPairing(pairingInfo);\n        this.beaconService.addPeer(pairingInfo);\n      } else if (qrString && this.override) {\n        this.scanResponse.emit({ pkh: qrString });\n      }\n      this.closeModal();\n    } catch (e) {\n      if (!this.override) {\n        this.messageService.addError('Invalid Base58 checksum!');\n      }\n    }\n  }\n  handlePaste(ev: ClipboardEvent): void {\n    try {\n      const clipboardString = ev?.clipboardData?.getData('text');\n      const pairingInfo = clipboardString ? this.deeplinkService.QRtoPairingJson(clipboardString) : '';\n      if (!this.override && pairingInfo) {\n        this.beaconService.preNotifyPairing(pairingInfo);\n        this.beaconService.addPeer(pairingInfo);\n      } else if (clipboardString && this.override) {\n        this.scanResponse.emit({ pkh: clipboardString });\n      }\n      this.closeModal();\n    } catch (e) {\n      if (!this.override) {\n        this.messageService.addError('Invalid Base58 checksum!');\n      }\n    }\n  }\n  closeModal(): void {\n    // restore body scrollbar\n    if (this.qrScanner && !this.loadingCam) {\n      this.qrScanner.stop();\n      this.qrScanner.destroy();\n      this.qrScanner = null;\n    }\n    if (!this.override) {\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      super.close();\n    }\n    this.manualInput = '';\n  }\n}\n","<ng-container *ngIf=\"this.display === Display.image || (this.display === Display.audio && !!poster)\">\n  <!-- Need crossorigin anonymous here to leverage caching from first GET (check mime type) -->\n  <img crossorigin=\"anonymous\" #postImage [src]=\"postSrc\" id=\"postImage\" [style.objectFit]=\"postSrc?.indexOf(loaderUrl) > -1 ? 'scale-down' : ''\" (error)=\"onError($event)\" (load)=\"onLoad($event)\" />\n  <img crossorigin=\"anonymous\" #preImage [src]=\"preSrc\" id=\"preImage\" (error)=\"onError($event)\" (load)=\"onLoad($event)\" />\n</ng-container>\n<audio crossorigin=\"anonymous\" #audio *ngIf=\"this.display === Display.audio\" preload=\"metadata\" [controls]=\"controls\" [controlsList]=\"controlsList\" id=\"audio\" (error)=\"onError($event)\" (loadeddata)=\"onLoadData($event)\">\n  <source crossorigin=\"anonymous\" [src]=\"dataSrc\" [type]=\"mimeType\" />\n</audio>\n<video crossorigin=\"anonymous\" #video *ngIf=\"this.display === Display.video\" preload=\"metadata\" id=\"video\" [controls]=\"controls\" [playsinline]=\"playsinline\" [muted]=\"muted\" [loop]=\"loop\" [autoplay]=\"autoplay\" (error)=\"onError($event)\" (loadeddata)=\"onLoadData($event)\">\n  <source crossorigin=\"anonymous\" [src]=\"dataSrc\" [type]=\"mimeType\" />\n  <img crossorigin=\"anonymous\" [src]=\"loaderUrl\" class=\"spinner\" />\n</video>\n<div *ngIf=\"this.display === Display.threeD\" class=\"model-wrapper\">\n  <model-viewer crossorigin=\"anonymous\" #model id=\"modelCanvas\" auto-rotate rotation-per-second=\"30deg\"\n    [src]=\"dataSrc\" alt=\"postSrc\" (load)=\"onLoad($event)\" (error)=\"onError($event)\"\n    camera-controls ar ar-modes=\"webxr scene-viewer quick-look\"></model-viewer>\n</div>","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, Sanitizer, SimpleChanges, ViewChild } from '@angular/core';\nimport { Asset, CachedAsset, TokenService } from '../../../services/token/token.service';\nimport { CONSTANTS, MODEL_3D_WHITELIST } from '../../../../environments/environment';\n\nenum Display {\n  'none',\n  'audio',\n  'image',\n  'video',\n  'threeD'\n}\n\nenum Size {\n  'icon' = 'icon',\n  'small' = 'small',\n  'medium' = 'medium',\n  'gallery' = 'gallery',\n  'raw' = 'raw'\n}\n\nconst MIMETYPE_OVERLOADS = ['unknown', 'image/gif'];\n\n@Component({\n  selector: 'app-asset',\n  templateUrl: './asset.component.html',\n  styleUrls: ['../../../../scss/components/ui/asset/asset.component.scss']\n})\nexport class AssetComponent implements OnInit, AfterViewInit {\n  Display = Display;\n  display = Display.image;\n  @ViewChild('preImage') preImage;\n  @ViewChild('postImage') postImage;\n  @ViewChild('audio') audio;\n  @ViewChild('video') video;\n  @ViewChild('model') model;\n  @Input() assets: any;\n  @Input() size = Size.medium;\n  @Input() priorityList = ['displayAsset', 'thumbnailAsset'];\n  @Input() controlsList = 'nofullscreen nodownload noremoteplayback noplaybackrate';\n  @Input() poster: CachedAsset;\n  @Input() controls = false;\n  @Input() requires = ['all'];\n  @Input() hideSpinner = false;\n  @Input() muted = false;\n  @Input() autoplay = false;\n  @Input() loop = false;\n  @Input() playsinline = false;\n  @Output() inView = new EventEmitter(null);\n  @Output() load = new EventEmitter(null);\n  readonly loaderUrl = 'assets/img/loader.svg';\n  readonly unknownUrl = 'assets/img/unknown-token-grayscale.svg';\n  dataSrc = undefined;\n  preSrc = this.loaderUrl;\n  postSrc = this.loaderUrl;\n  mimeType = 'image/*';\n  errors = 0;\n  obs: IntersectionObserver;\n\n  constructor(private elRef: ElementRef, private tokenService: TokenService) {}\n\n  ngOnInit(): void {\n    if (this.hideSpinner) {\n      this.display = Display.none;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes?.assets?.previousValue &&\n      changes?.assets?.currentValue &&\n      JSON.stringify(changes?.assets?.previousValue) !== JSON.stringify(changes?.assets?.currentValue)\n    ) {\n      const p0 = this.assetToUrl(this.pickAsset(changes?.assets?.previousValue));\n      const p1 = this.assetToUrl(this.pickAsset(changes?.assets?.currentValue));\n      if (p0 !== p1) {\n        console.log('reload asset', { from: p0, to: p1 });\n        this.reload();\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.lazyLoad();\n  }\n  private reload() {\n    this.display = Display.none;\n    this.dataSrc = undefined;\n    this.preSrc = this.loaderUrl;\n    this.postSrc = this.loaderUrl;\n    this.mimeType = 'image/*';\n    this.updateDisplay();\n    this.lazyLoad();\n  }\n  updateDisplay(): void {\n    if (this.isImage() && (this.requires.includes('image') || this.requires.includes('all'))) {\n      this.display = Display.image;\n    } else if (this.isAudio() && (this.requires.includes('audio') || this.requires.includes('all'))) {\n      this.display = Display.audio;\n    } else if (this.isVideo() && (this.requires.includes('video') || this.requires.includes('all'))) {\n      this.display = Display.video;\n    } else if (this.is3D() && (this.requires.includes('model') || this.requires.includes('all'))) {\n      this.display = Display.threeD;\n    } else {\n      this.display = Display.none;\n    }\n  }\n\n  isImage(): boolean {\n    return this.mimeType?.startsWith('image/') || this.mimeType?.startsWith('application/');\n  }\n\n  isVideo(): boolean {\n    return this.mimeType?.startsWith('video/');\n  }\n\n  isAudio(): boolean {\n    return this.mimeType?.startsWith('audio/');\n  }\n\n  is3D(): boolean {\n    return this.mimeType?.startsWith('model/');\n  }\n\n  onLoad(e): void {\n    if (e?.target?.id === 'preImage') {\n      this.postSrc = this.preSrc;\n      this.updateDisplay();\n    }\n  }\n\n  onLoadData(e): void {\n    if (this.isAudio()) {\n      if (this.audio.nativeElement.muted) {\n        this.audio.nativeElement.volume = 1.0;\n      }\n    }\n  }\n\n  onError(e): void {\n    if ((e?.target?.id === 'postImage' || e?.target?.id === 'preImage') && this.isImage()) {\n      this.errors++;\n      if (this.errors <= 2) {\n        console.log('retry lazyload', this.preSrc);\n        this.reload();\n      } else {\n        console.log('failed to load asset', this.preSrc);\n        this.evaluateInvalid();\n      }\n    }\n  }\n\n  evaluateInvalid(): void {\n    this.mimeType = 'image/*';\n    this.updateDisplay();\n    this.preSrc = this.unknownUrl;\n  }\n  pickAsset(assets): Asset {\n    for (let type of this.priorityList) {\n      if (assets && assets[type] && !(typeof assets[type] === 'object' && !assets[type]?.uri)) {\n        return assets[type];\n      }\n    }\n    return null;\n  }\n\n  async evaluate(assets): Promise<void> {\n    if (this.poster) {\n      this.preSrc = this.assetToUrl(this.poster);\n    }\n    let asset = this.pickAsset(assets);\n    if (asset) {\n      try {\n        await this.determineMime(asset);\n      } catch (e) {\n        console.error(e);\n        this.evaluateInvalid();\n        return;\n      }\n      this.setSrc(asset);\n    } else {\n      this.evaluateInvalid();\n    }\n  }\n\n  lazyLoad(): void {\n    this.obs = new IntersectionObserver((entries, _) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this.evaluate(this.assets);\n          this.obs.unobserve(this.elRef?.nativeElement);\n        }\n        this.inView.emit();\n      });\n    });\n    if (this.elRef?.nativeElement) {\n      this.obs.observe(this.elRef?.nativeElement);\n    }\n  }\n\n  async determineMime(asset: Asset) {\n    const url = this.assetToUrl(asset);\n    if (!url) {\n      throw new Error('InvalidUrl');\n    }\n    if (url?.startsWith('data:image')) {\n      this.mimeType = 'image/*';\n      return (this.preSrc = url);\n    }\n    // Ignore MIME type provided in metadata for now. Way too unreliable. Exception for nfts in 3d wl. (media proxy don't return the correct mime type)\n    if (\n      typeof asset !== 'string' &&\n      !(asset?.mimeType?.startsWith('model/') && (MODEL_3D_WHITELIST as Array<any>).includes(this.tokenService.getContractAddressFromAsset(asset?.uri)))\n    ) {\n      let response;\n      for (let i = 0; i < 3 && !response?.ok; i++) {\n        response = await fetch(url, { method: 'GET' });\n      }\n      if (!response?.ok) {\n        throw new Error('Failed to fetch asset');\n      }\n      this.mimeType = response.headers.get('content-type');\n    } else if (typeof asset === 'string') {\n      this.mimeType = 'image/*';\n    } else {\n      this.mimeType = asset.mimeType;\n    }\n  }\n\n  setSrc(asset): void {\n    this.updateDisplay();\n    if (this.isAudio() || this.isVideo() || this.is3D()) {\n      this.isAudio() ? this.load.emit() : undefined;\n      if (this.is3D()) {\n        const contractAddress = this.tokenService.getContractAddressFromAsset(asset?.uri);\n        if (!(MODEL_3D_WHITELIST as Array<any>).includes(contractAddress)) {\n          console.warn('Content blocked');\n          this.evaluateInvalid();\n          return;\n        }\n      }\n      this.dataSrc = this.assetToUrl(asset);\n    } else if (this.isImage()) {\n      this.preSrc = this.assetToUrl(asset);\n    } else {\n      console.warn(`Unrecognized MIME type: ${this.mimeType}`, '\\n', 'Assuming: image/*');\n      this.mimeType = 'image/*';\n      this.updateDisplay();\n      this.preSrc = this.assetToUrl(asset);\n    }\n  }\n  assetToUrl(asset: Asset): string {\n    let url = '';\n    const uri = typeof asset === 'string' ? asset : asset?.uri;\n    if (uri.startsWith('ipfs://')) {\n      const mediaAndSize = this.size === Size.raw ? '' : `media/${this.size}/`;\n      url = `https://static.tcinfra.net/${mediaAndSize}ipfs/${uri.slice(7)}`;\n    } else if (uri.startsWith('https://')) {\n      url = `https://static.tcinfra.net/media/${this.size}/web/${uri.slice(8)}`;\n    } else if (!CONSTANTS.MAINNET && (uri.startsWith('http://localhost') || uri.startsWith('http://127.0.0.1'))) {\n      url = uri.slice(16);\n    } else if (typeof asset === 'string') {\n      url = uri;\n    } else {\n      console.warn('failed to parse asset', asset);\n      url = uri;\n    }\n    return url ?? '';\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-ui-toggle',\n  templateUrl: './toggle.component.html'\n})\nexport class ToggleComponent implements OnInit {\n  @Input() state: boolean;\n  @Input() text = 'Advanced:';\n  @Input() default: boolean = false;\n  @Output() stateChange = new EventEmitter<boolean>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.state = this.default;\n  }\n\n  toggle(): void {\n    this.state = !this.state;\n    this.stateChange.emit(this.state);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ToggleComponent } from '../toggle.component';\n\n@Component({\n  selector: 'app-ui-toggle-advanced',\n  templateUrl: './advanced.component.html',\n  styleUrls: ['../../../../../../scss/components/ui/button/toggle.component.scss']\n})\nexport class AdvancedToggleComponent extends ToggleComponent implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"flex-row advanced\">\n  <div class=\"flex-row switch-container\">\n    <span class=\"value\">{{ text }}&nbsp;&nbsp;&nbsp;&nbsp;</span>\n    <label class=\"flex-row switch\">\n      <span class=\"key\" [class]=\"state ? 'active' : ''\">{{ state ? ' ON' : 'OFF' }}</span>\n      <span class=\"slider\" [class]=\"state ? 'active' : ''\" (click)=\"toggle()\">\n        <span class=\"round\"></span>\n      </span>\n    </label>\n  </div>\n</div>","<div class=\"title-dropdown\" [class.expanded]=\"ddExpanded\">\n  <ng-container *ngFor=\"let value of ddSets\">\n    <p [class.active]=\"set === value?.name\" (click)=\"toggleSet(value?.name);ddExpanded = !ddExpanded\">{{ value?.name ||\n      '' }}</p>\n  </ng-container>\n</div>\n<div *ngIf=\"sets?.length\" class=\"flex-row mode\">\n  <div class=\"flex-column left\">\n    <span class=\"title\" (click)=\"ddExpanded = !ddExpanded\">{{ set }}<img [class.expanded]=\"ddExpanded\"\n        src=\"assets/img/chevron-down.svg\" /></span>\n    <span class=\"tooltip value\">{{ tooltipValue }}\n      <span class=\"unit\">{{ units }}</span>\n    </span>\n  </div>\n  <div class=\"right\">\n    <div class=\"attributes\">\n      <ng-container *ngFor=\"let key of Object.keys(attributes)\">\n        <span>{{ attributes[key] }}</span>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<svg *ngIf=\"!sets?.length\" class=\"spinner\" viewBox=\"0 0 50 50\">\n  <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle>\n</svg>\n<span *ngIf=\"!sets?.length\" class=\"loading-text\">Loading Chart...</span>\n<div class=\"expand\" (click)=\"toggleChartExpand(); ddExpanded = false; toggleSet(set)\">{{ !chartExpanded ? 'Expand' : 'Collapse' }}\n</div>\n<ng-container *ngIf=\"design === 'default'\">\n  <div class=\"flex-column canvas-wrapper\">\n    <canvas #chart [class.loaded]=\"sets?.length\"></canvas>\n    <div *ngIf=\"sets?.length\" class=\"flex-row time\" [class.expanded]=\"chartExpanded\">\n      <span *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'day'\" (click)=\"toggleSeries('day')\">24H</span><span\n      *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'week'\" (click)=\"toggleSeries('week')\">1W</span>\n      <span [class.active]=\"series === 'month'\" (click)=\"toggleSeries('month')\">1M</span><span\n      *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'year'\" (click)=\"toggleSeries('year')\">1Y</span>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"design === 'mini'\">\n  <div class=\"canvas-wrapper\">\n    <canvas #chart [class.loaded]=\"sets?.length\"></canvas>\n    <div *ngIf=\"sets?.length\" class=\"flex-row time\" [class.expanded]=\"chartExpanded\">\n      <span *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'day'\"\n        (click)=\"toggleSeries('day')\">24H</span><span *ngIf=\"set !== 'Total Value Locked'\"\n        [class.active]=\"series === 'week'\" (click)=\"toggleSeries('week')\">1W</span>\n      <span [class.active]=\"series === 'month'\" (click)=\"toggleSeries('month')\">1M</span><span\n        *ngIf=\"set !== 'Total Value Locked'\" [class.active]=\"series === 'year'\" (click)=\"toggleSeries('year')\">1Y</span>\n    </div>\n  </div>\n</ng-container>","import { Component, ElementRef, EventEmitter, Input, Output, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\nimport { Chart, ChartOptions, ChartTypeRegistry, registerables } from 'chart.js';\nimport { ChartTitle } from '../../../services/chart/chart.service';\n\nChart.register(...registerables);\n\nlet width, height, gradient;\nfunction getGradientBackground(ctx, chartArea) {\n  const style = getComputedStyle(document.body);\n  const theme = style.getPropertyValue('--theme').replace(/[ \\\"]/g, '');\n  const chartWidth = chartArea.right - chartArea.left;\n  const chartHeight = chartArea.bottom - chartArea.top;\n  if (gradient === null || width !== chartWidth || height !== chartHeight) {\n    width = chartWidth;\n    height = chartHeight;\n    gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n    // gradient.addColorStop(1, '#5963ff88');\n    // gradient.addColorStop(0.5, '#5963ff33');\n    // gradient.addColorStop(0, '#5963ff19');\n    if (theme === 'dark') {\n      gradient.addColorStop(1, '#383d7d');\n      gradient.addColorStop(0.5, '#2e304f');\n      gradient.addColorStop(0, '#2a2c3f');\n    } else {\n      gradient.addColorStop(1, '#c2c5fc');\n      gradient.addColorStop(0.5, '#e0e1fb');\n      gradient.addColorStop(0, '#e8eafb');\n    }\n  }\n\n  return gradient;\n}\n\nexport enum ChartSeries {\n  'day' = 'day',\n  'week' = 'week',\n  'month' = 'month',\n  'year' = 'year'\n}\n@Component({\n  selector: 'app-ui-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['../../../../scss/components/ui/chart/chart.component.scss']\n})\nexport class ChartComponent {\n  Object = Object;\n  @Input() attributes: any = {};\n  @Input() type: keyof ChartTypeRegistry = 'line';\n  @Input() data = { datasets: [], labels: [] };\n  @Input() datas = {};\n  @Input() options: ChartOptions = {};\n  @Input() design: string;\n  @Input() ddSets = [];\n  @Input() sets = [];\n  @Input() set = '';\n  @Input() units = {};\n  @Input() layout = 'default';\n  tooltipValue: string = '';\n  @ViewChild('chart') chartRef: ElementRef;\n  @Output('drawn') drawn = new EventEmitter();\n\n  chart = null;\n  series: ChartSeries = ChartSeries.day;\n  ddExpanded = false;\n  chartExpanded = false;\n\n  constructor() {\n    Chart.register({\n      id: 'my-plugin',\n      afterTooltipDraw: (chart, args, options) => {\n        if (chart) {\n          let x = chart.tooltip.dataPoints[0].element.x;\n          let yAxis = chart.scales.y;\n          let ctx = chart.ctx;\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(x, yAxis.bottom + 60);\n          ctx.lineTo(x, yAxis.top + 60);\n          ctx.lineWidth = 2;\n          ctx.setLineDash([3, 1]);\n          ctx.strokeStyle = 'rgba(0, 0, 255, 0.3)';\n          ctx.stroke();\n          ctx.setLineDash([0, 0]);\n          ctx.textAlign = 'center';\n          if (x >= chart.chartArea.right + -30) {\n            ctx.textAlign = 'right';\n          } else if (x <= chart.chartArea.left + 30) {\n            ctx.textAlign = 'left';\n          }\n          ctx.font = '14px sans-serif';\n          ctx.fillStyle = getComputedStyle(document.documentElement).getPropertyValue('--base-font-color-secondary');\n          ctx.fillText(chart.tooltip.title[0], x, yAxis.top + 45);\n          ctx.restore();\n        }\n      }\n    });\n  }\n\n  toggleChartExpand() {\n    this.chartExpanded = !this.chartExpanded;\n    (this.chartRef.nativeElement as HTMLCanvasElement).parentElement.parentElement.classList.toggle('expanded');\n  }\n\n  refreshDDSets(): void {\n    this.ddSets = this.sets?.sort(function (a, b) {\n      const nameA = a.name.toLowerCase(),\n        nameB = b.name.toLowerCase();\n      if (nameA > nameB) return -1;\n      if (nameA < nameB) return 1;\n      return 0;\n    });\n  }\n\n  draw(): void {\n    if (this.set === ChartTitle.totalValueLocked) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.totalValueLocked).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(parseFloat(data[data.length - 1].toString()).toFixed(2)).toLocaleString();\n    } else if (this.set === ChartTitle.XTZtzBTC) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.XTZtzBTC).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(data[data.length - 1].toString()).toFixed(8);\n    } else if (this.set === ChartTitle.tzBTCXTZ) {\n      const data = this.datas[this.series]?.datasets?.find((ds) => ds.label === ChartTitle.tzBTCXTZ).data;\n      if (!data) {\n        return;\n      }\n      this.tooltipValue = parseFloat(parseFloat(data[data.length - 1].toString()).toFixed(6)).toLocaleString();\n    }\n\n    if (this.chartRef?.nativeElement && this.datas[this.series]?.datasets) {\n      const ctx = this.chartRef.nativeElement.getContext('2d');\n      this.chart?.destroy();\n      this.sets = this.data?.datasets.map((set) => ({ name: set.label }));\n      this.chart = new Chart(ctx, {\n        type: this.type,\n        data: this.data,\n        options: this.options,\n        plugins: []\n      });\n      this.drawn.emit(null);\n    }\n  }\n  toggleSeries(series): void {\n    this.series = series;\n    this.data = this.datas[series];\n    this.overrideDatasetConfig();\n    this.options = this.getChartOptions();\n    this.draw();\n  }\n  toggleSet(set): void {\n    this.reset();\n    this.overrideDatasetConfig();\n    for (let key of Object.keys(this.datas)) {\n      for (let i = 0; i < this.datas[key].datasets.length; ++i) {\n        if (this.datas[key].datasets[i].label === set) {\n          this.datas[key].datasets[i].hidden = false;\n          if (set === ChartTitle.XTZtzBTC) {\n            this.units = 'tzBTC';\n          } else if (set === ChartTitle.tzBTCXTZ) {\n            this.units = 'XTZ';\n          } else {\n            this.toggleSeries(ChartSeries['month']);\n            this.units = 'usd';\n          }\n        } else {\n          this.datas[key].datasets[i].hidden = true;\n        }\n      }\n    }\n    this.data = this.datas[this.series];\n    this.sets = this.data?.datasets.map((set) => ({ name: set.label }));\n    this.set = set ?? this.sets[0].name;\n    this.refreshDDSets();\n    this.options = this.getChartOptions();\n    this.draw();\n  }\n  reset(): void {\n    this.ddSets = [];\n    this.sets = [];\n    this.set = '';\n    this.data = null;\n  }\n  overrideDatasetConfig(): void {\n    for (let i = 0; i < this.datas[this.series]?.datasets.length; ++i) {\n      this.datas[this.series].datasets[i].pointHoverBorderWidth = this.design === 'mini' && !this.chartExpanded ? 0 : 6;\n      this.datas[this.series].datasets[i].pointHitRadius = this.design === 'mini' && !this.chartExpanded ? 0 : 6;\n      this.datas[this.series].datasets[i].pointHoverBackgroundColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].pointHoverBorderColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].pointBackgroundColor = this.design === 'mini' && !this.chartExpanded ? '#00000000' : '#5963ff88';\n      this.datas[this.series].datasets[i].backgroundColor = function (context) {\n        const chart = context.chart;\n        const { ctx, chartArea } = chart;\n\n        if (!chartArea) {\n          return null;\n        }\n        return getGradientBackground(ctx, chartArea);\n      };\n    }\n  }\n  getChartOptions(): any {\n    let yTickPadding = -102;\n    if (this.set === ChartTitle.tzBTCXTZ) {\n      yTickPadding = -71;\n    } else if (this.set === ChartTitle.totalValueLocked) {\n      yTickPadding = -95;\n    }\n    return {\n      layout: {\n        padding: 0\n      },\n      scales: {\n        y: {\n          beginAtZero: false,\n          position: 'right',\n          ticks: {\n            maxTicksLimit: 5,\n            display: this.design === 'mini' && this.chartExpanded === false ? false : true,\n            padding: yTickPadding,\n            align: 'start',\n            font: {\n              size: 14,\n              weight: 500,\n              family: 'Roboto'\n            },\n            textStrokeColor: '#333',\n            z: 1,\n            callback: (label, index, ticks) => {\n              if (index >= 1 && index < 4) {\n                return label < 1 ? label.toFixed(8) : Number(label.toFixed(8).replace(/(\\.0+|0+)$/, '')).toLocaleString();\n              } else {\n                return '';\n              }\n            }\n          },\n          grid: {\n            drawBorder: false,\n            lineWidth: 0\n          }\n        },\n        x: {\n          ticks: {\n            maxTicksLimit: 0,\n            display: false\n          },\n          grid: {\n            drawBorder: false,\n            lineWidth: 0\n          }\n        }\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      hover: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false\n      },\n      tooltips: {\n        mode: 'index',\n        axis: 'x',\n        intersect: false\n      },\n      interaction: {\n        intersect: false,\n        mode: 'index',\n        axis: 'x'\n      },\n      elements: {\n        line: {\n          tension: 0.0\n        },\n        point: {\n          radius: 0\n        }\n      },\n      plugins: {\n        tooltip: {\n          enabled: this.design === 'mini' && !this.chartExpanded ? false : true,\n          mode: 'nearest',\n          intersect: false,\n          backgroundColor: 'rgba(0, 0, 0, 0.0)',\n          titleColor: 'rgba(0, 0, 0, 0.0)',\n          bodyColor: 'rgba(0, 0, 0, 0.0)',\n          footerColor: 'rgba(0, 0, 0, 0.0)',\n          displayColors: false,\n          callbacks: {\n            label: (item, a, b) => {\n              this.tooltipValue =\n                item.dataset.data[item.dataIndex] < 1\n                  ? item.dataset.data[item.dataIndex].toFixed(8).toLocaleString()\n                  : parseFloat(item.dataset.data[item.dataIndex].toFixed(2).replace(/(\\.0+|0+)$/, '')).toLocaleString() ?? '';\n              return parseFloat(item.dataset.data[item.dataIndex].toFixed(8)).toLocaleString();\n            }\n          }\n        },\n        legend: { display: false }\n      }\n    };\n  }\n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { ListComponent } from '../generic/list.component';\n\n@Component({\n  selector: 'app-ui-dropdown',\n  templateUrl: './dropdown.component.html'\n})\nexport class DropdownComponent extends ListComponent implements OnInit {\n  @Output() dropdownResponse = new EventEmitter();\n  @Input() options: any[];\n  selection: any;\n  ecmpId = this.constructor['ɵcmp'].id;\n  isOpen = false;\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  @HostListener('document:click', ['$event'])\n  @HostListener('document:touchend', ['$event'])\n  closeDropdown(e): void {\n    if (!e.target.closest('#' + this.ecmpId) && this.isOpen) {\n      this.isOpen = false;\n    }\n  }\n\n  toggleDropdown(): void {\n    this.isOpen = !this.isOpen;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html'\n})\nexport class ListComponent implements OnInit {\n  @Input() current;\n  @Input() list: any[];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"flex-column\" [class]=\"getType().replace('undelegated', 'delegated')\"\n  [class.unconfirmed]=\"activity.status === OpStatus.UNCONFIRMED\" [class.half_confirmed]=\"activity.status === OpStatus.HALF_CONFIRMED\"\n  [class.confirmed]=\"activity.status === OpStatus.CONFIRMED\" [class.new]=\"fresh && activity.status === OpStatus.CONFIRMED\"\n  [class.failed]=\"activity.status === OpStatus.FAILED\">\n  <div class=\"flex-row top\">\n    <div class=\"flex-row title\">\n      <ng-container *ngIf=\"!activity.entrypoint; else callEntrypoint\">\n        <ng-container [ngSwitch]=\"getType()?.replace('undelegated', 'delegated')\">\n          <img *ngSwitchCase=\"'sent'\" [src]=\"activity.status === OpStatus.FAILED ? '../../../../assets/img/up-arrow-red.svg' : '../../../../assets/img/up-arrow-black.svg'\"\n            style=\"transform: rotate(45deg)\" />\n          <img *ngSwitchCase=\"'received'\" [src]=\"activity.status === OpStatus.FAILED ? '../../../../assets/img/up-arrow-red.svg' : '../../../../assets/img/up-arrow.svg'\" style=\"transform: rotate(135deg)\" />\n          <div *ngSwitchDefault class=\"blank\"></div>\n        </ng-container>{{ printAmount() }}\n      </ng-container>\n      <ng-template #callEntrypoint>\n        <ng-container *ngIf=\"zeroSent(activity); else notZero\">\n          <div class=\"blank\"></div>\n        </ng-container>\n        <ng-template #notZero>\n          <img src=\"../../../../assets/img/up-arrow-black.svg\" style=\"transform: rotate(45deg)\" />\n        </ng-template>\n        {{ sentKind(activity) }}\n      </ng-template>\n    </div>\n    <span class=\"failed\" *ngIf=\"activity.status === OpStatus.FAILED\">Error</span>\n    <div class=\"updating-balances\" *ngIf=\"activity.status === OpStatus.HALF_CONFIRMED\">\n      <img class=\"spinner\" src=\"../../../../../assets/img/feeLoader.gif\">\n      <span>Updating balances</span>\n    </div>\n  </div>\n  <div class=\"flex-row bottom\">\n    <div class=\"flex-row address\"><img\n        *ngIf=\"!!getCounterparty(activity)?.lookupType && getCounterparty(activity)?.lookupType !== 5\"\n        [src]=\"getEventIcon()\" class=\"event-icon\" />\n      <div class=\"flex-row value\">{{ getAddressPrefix(getType()) }}&nbsp;{{getCounterparty(activity)?.name ||\n        getCounterparty(activity)?.address || ''}}</div>\n      <img class=\"copy\" src=\"../../../../assets/img/copy-icon.svg\"\n          (click)=\"copy(getCounterparty(activity)?.address)\" />\n    </div>\n    <span class=\"flex-row time\">\n      <img [src]=\"getEventStatusIcon()\" />\n      <a class=\"status\" *ngIf=\"activity.status !== OpStatus.UNCONFIRMED\" href=\"{{ explorerURL(activity.hash) }}\" target=\"_blank\">\n        <ng-container *ngIf=\"activity.status !== OpStatus.HALF_CONFIRMED; else halfConfirmed\">\n          {{ activity.timestamp | timeAgo:trigger }}\n        </ng-container>\n        <ng-template #halfConfirmed>\n          Confirmed\n        </ng-template>\n      </a>\n      <div class=\"status\" *ngIf=\"activity.status === OpStatus.UNCONFIRMED\">Unconfirmed</div>\n    </span>\n  </div>\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Account, Activity, OpStatus } from '../../../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { ActivityService } from '../../../../../../services/activity/activity.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { LookupType } from '../../../../../../services/lookup/lookup.service';\nimport copy from 'copy-to-clipboard';\nimport { SubjectService } from '../../../../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/activity/event.component.scss']\n})\nexport class EventComponent implements OnInit, OnChanges, OnDestroy {\n  public OpStatus = OpStatus;\n  public LookupType = LookupType;\n  public fresh = undefined;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public timeAgoPipe: TimeAgoPipe,\n    private activityService: ActivityService,\n    public tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  trigger = true;\n  @Input() activity: Activity;\n  @Input() account: Account;\n  ngOnInit(): void {\n    setInterval(() => {\n      this.trigger = !this.trigger;\n    }, 1000);\n    this.subscriptions.add(\n      this.subjectService.confirmedOp.subscribe((opHash) => {\n        if (opHash === this.activity.hash && this.fresh === undefined) {\n          this.fresh = true;\n          setTimeout(() => {\n            this.fresh = false;\n          }, 20000);\n        }\n      })\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  getType(): string {\n    if (this.activity.type !== 'transaction') {\n      if (this.activity.type === 'delegation') {\n        if (this.activity.destination.address) {\n          return 'delegated';\n        } else {\n          return 'undelegated';\n        }\n      } else {\n        return this.activity.type;\n      }\n    } else {\n      let operationType = '';\n      if (this.activity.source.address === this.account.address) {\n        operationType = 'sent';\n      } else {\n        operationType = 'received';\n      }\n      return operationType;\n    }\n  }\n\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n  getCounterparty(transaction): any {\n    const c = this.activityService.getCounterparty(transaction, this.account);\n    if (!c.name) {\n      c.name = c.address ? `${c.address.slice(0, 7)}...${c.address.slice(-4)}` : '—';\n    }\n    c.name.trim();\n    return c;\n  }\n  getEventIcon(): string {\n    return `../../../../assets/img/${LookupType[this.getCounterparty(this.activity)?.lookupType].toLowerCase().replace('tezosdomains', 'domain')}-logo.svg`;\n  }\n  getEventStatusIcon(): string {\n    return this.fresh && this.activity.status === OpStatus.CONFIRMED\n      ? '../../../../assets/img/event-new.png'\n      : this.activity.status === OpStatus.CONFIRMED\n      ? '../../../../assets/img/event-confirmed.png'\n      : this.activity.status === OpStatus.UNCONFIRMED\n      ? '../../../../assets/img/event-unconfirmed.png'\n      : this.activity.status === OpStatus.FAILED\n      ? '../../../../assets/img/event-error.png'\n      : this.activity.status === OpStatus.HALF_CONFIRMED\n      ? '../../../../../assets/img/event-half-confirmed.png'\n      : '../../../../assets/img/event-unconfirmed.png';\n  }\n  printAmount(): string {\n    switch (this.getType()) {\n      case 'sent':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      case 'received':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      case 'delegated':\n        return 'Staked';\n      case 'undelegated':\n        return 'Unstaked';\n      case 'origination':\n        return this.tokenService.formatAmount(this.activity.tokenId, this.activity.amount.toString());\n      default:\n        return '';\n    }\n  }\n  sentKind(activity): string {\n    if (activity.entrypoint) {\n      if (activity.amount !== '0') {\n        return `${this.printAmount()}, Call ${activity.entrypoint}`;\n      }\n      return `Call ${activity.entrypoint}`;\n    }\n    return '0';\n  }\n  zeroSent(activity): boolean {\n    return this.sentKind(activity).length > 4 && activity.amount === '0';\n  }\n  receivedKind(activity): string {\n    return activity.tokenId && activity.source.address && activity.tokenId.split(':')[0] === activity.source.address ? 'Minted' : 'Received';\n  }\n  getAddressPrefix(type: string) {\n    switch (type.toLowerCase()) {\n      case 'sent':\n        return 'Sent to:';\n      case 'received':\n        return this.receivedKind(this.activity) + ' from:';\n      case 'delegated':\n        return 'To:';\n      case 'undelegated':\n        return 'To:';\n      case 'origination':\n        return 'Originated contract:';\n    }\n  }\n  copy(address: string): void {\n    copy(address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(address + ' ' + copyToClipboard, 5);\n  }\n}\n","<div class=\"selectable main-container\">\n  <div class=\"top-container-activity\">\n    <h1>Recent Activity</h1>\n    <div class=\"right\">\n      <a class=\"view-all\" href=\"{{ explorerURL(account.address) }}\" target=\"_blank\">View in Explorer</a>\n      <!-- <img class=\"button icon\" src=\"../../../../assets/img/info.svg\" /> -->\n    </div>\n  </div>\n  <div class=\"selectable\" id=\"operations-container\" *ngIf=\"this.translate.store.translations.en\">\n    <ng-container *ngIf=\"account.activities; else loading\">\n      <ng-container *ngIf=\"!account.activities.length\">\n        <div class=\"line\"><span>No activity yet</span></div>\n      </ng-container>\n      <ng-container *ngFor=\"let activity of account.activities | slice:0:10; trackBy: trackEvent\">\n        <app-event [activity]=\"activity\" [account]=\"account\"></app-event>\n      </ng-container>\n    </ng-container>\n    <ng-template #loading>Loading activity...</ng-template>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenService } from '../../../../../services/token/token.service';\n\n@Component({\n  selector: 'app-activity',\n  templateUrl: './activity.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/activity/activity.component.scss']\n})\nexport class ActivityComponent implements OnInit {\n  public currTimeStamp: number;\n  constructor(public translate: TranslateService, public messageService: MessageService, public timeAgoPipe: TimeAgoPipe, public tokenService: TokenService) {}\n  trigger = true;\n  @Input() activity: any;\n  @Input() account: Account;\n  ngOnInit(): void {}\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n\n  trackEvent(index: number, activity: any): string {\n    return activity.block + activity.hash;\n  }\n}\n","<div class=\"flex-row token\" (click)=\"viewToken(token)\">\n  <div class=\"dot\"></div>\n  <div class=\"wrapper\">\n    <app-asset class=\"asset\" (inView)=\"balanceChangeTimer()\" [assets]=\"token\" [size]=\"'small'\" [muted]=\"true\" [autoplay]=\"true\" [playsinline]=\"true\" [loop]=\"true\" [priorityList]=\"['thumbnailAsset', 'displayAsset']\"></app-asset>\n    <div *ngIf=\"Number.parseInt(token?.balance) > 1\" class=\"balance\">x{{\n      formatBalance(token) }}</div>\n  </div>\n  <div class=\"flex-column right\">\n    <div class=\"title\">\n      {{token?.name}}\n    </div>\n    <div *ngIf=\"token?.series\" class=\"series\">\n      {{ token?.series }}\n    </div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { ModalComponent } from '../../../../../modals/modal.component';\nimport { TokenBalancesService } from '../../../../../../services/token-balances/token-balances.service';\nimport { DisplayLinkOption } from '../../../../../../interfaces';\nimport Big from 'big.js';\n\n@Component({\n  selector: 'app-nfts-token',\n  templateUrl: './token.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/nfts/token.component.scss']\n})\nexport class NftsTokenComponent implements OnInit, OnChanges {\n  DisplayLinkOption = DisplayLinkOption;\n  Number = Number;\n  @Input() token;\n  isNew = false;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService\n  ) {}\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes.token.previousValue?.balance > -1 &&\n      changes.token.currentValue?.balance > -1 &&\n      changes.token.currentValue?.balance != changes.token.previousValue?.balance\n    ) {\n      this.isNew = true;\n    }\n  }\n  viewToken(token): void {\n    ModalComponent.currentModel.next({ name: 'token-detail', data: token });\n  }\n  balanceChangeTimer(): void {\n    setTimeout(() => {\n      this.isNew = false;\n    }, 5000);\n  }\n  formatBalance(token): string {\n    return Big(token.balance)\n      .div(10 ** parseInt(token.decimals))\n      .toFixed();\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-row\" [id]=\"ecmpId\">\n    <div class=\"flex-row search-bar\" [class.active]=\"isActive\" [class.has-value]=\"hasValue\">\n      <img class=\"search-button\" src=\"assets/img/search.svg\" (click)=\"searchButtonClicked()\" />\n      <input #input name=\"none\" type=\"text\" [(ngModel)]=\"searchText\" [placeholder]=\"placeholderText\" (focus)=\"onFocus()\"\n        (keydown)=\"onKeydown($event)\" />\n      <div *ngIf=\"isActive && hasValue\" class=\"flex-row match-count\"><span>{{ matchCount + ' matches' }}</span></div>\n    </div>\n    <div *ngIf=\"!hasValue\" class=\"flex-row item-count\"><span>{{ '(' + itemCount + ')' }}</span></div>\n  </div>\n</form>","import { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { DropdownComponent } from '../dropdown/dropdown.component';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search.component.html',\n  styleUrls: ['../../../../scss/components/ui/search-bar/search.component.scss']\n})\nexport class SearchBarComponent extends DropdownComponent implements OnInit, OnDestroy {\n  @ViewChild('input') input: ElementRef;\n  @Output() onInput = new EventEmitter();\n  @Input() itemCount = 0;\n  @Input() matchCount = 0;\n  inputUpdated = new Subject<any>();\n  filter = '.*';\n  isActive = false;\n  hasValue = false;\n  @Input() placeholder = '';\n  placeholderText = '';\n  searchText = '';\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(private subjectService: SubjectService) {\n    super();\n    this.subscriptions.add(\n      this.inputUpdated.pipe(debounceTime(150)).subscribe((e) => {\n        this.filter = !!e?.target.value ? `${e.target.value.replace(/(\\W)/g, '\\\\$1')}` : '';\n        if (!!e) {\n          this.onInput.emit(this.filter);\n        }\n        this.hasValue = !!this.filter;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((_) => {\n        this.reset();\n      })\n    );\n  }\n  ngOnInit(): void {\n    this.placeholderText = this.placeholder;\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  onKeydown(e): void {\n    this.inputUpdated.next(e);\n  }\n  onFocus(): void {\n    this.isActive = true;\n    this.onInput.emit(this.filter);\n  }\n  searchButtonClicked(): void {\n    if (!this.isActive) {\n      this.input.nativeElement.focus();\n    }\n  }\n  @HostListener('document:click', ['$event'])\n  @HostListener('document:touchend', ['$event'])\n  onBlur(e): void {\n    if (!e.target.closest('#' + this.ecmpId) && this.isActive && !this.hasValue) {\n      this.isActive = false;\n      this.onInput.emit('');\n    }\n  }\n  reset(): void {\n    this.isActive = false;\n    this.filter = '';\n    this.searchText = '';\n    this.hasValue = false;\n    this.onInput.emit(this.filter);\n  }\n}\n","<app-search-bar *ngIf=\"tokens?.length > 12 && searchable\" [placeholder]=\"'Search'\"\n  [matchCount]=\"tokensToDisplay?.filtered.length || 0\" [itemCount]=\"tokensToDisplay?.raw.length || 0\"\n  (onInput)=\"updateFilter($event)\"></app-search-bar>\n<div class=\"scroll-wrapper\">\n  <div #body [style.display]=\"!isDisplaying ? 'none' : ''\" class=\"body\">\n    <ng-container *ngFor=\"let token of tokensToDisplay.loaded; trackBy:trackToken\">\n      <app-nfts-token class=\"token\" [token]=\"token\"></app-nfts-token>\n    </ng-container>\n    <ng-container *ngIf=\"filter !== '.*' && !tokensToDisplay.filtered.length\">\n      No Matches Found\n    </ng-container>\n  </div>\n</div>","import { AfterViewInit, Component, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../../services/token-balances/token-balances.service';\nimport { DisplayLinkOption } from '../../../../../../interfaces';\nimport { Subject } from 'rxjs';\nimport { Token } from '../../../../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-nfts-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/nfts/body.component.scss']\n})\nexport class NftsBodyComponent implements OnInit, OnChanges, AfterViewInit {\n  DisplayLinkOption = DisplayLinkOption;\n  @ViewChild('body') body;\n  @Input() isDisplaying;\n  @Input() tokens;\n  @Input() searchable = false;\n  tokensToDisplay = { loaded: [], filtered: [], raw: [] };\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  readonly chunkSize = 24;\n  sliceEnd = this.chunkSize;\n  inputUpdated = new Subject<any>();\n  filter = '.*';\n\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService\n  ) {}\n  ngOnInit(): void {\n    this.refresh();\n  }\n  ngOnChanges(): void {\n    if (this.isDisplaying) {\n      this.refresh();\n    }\n  }\n  refresh(): void {\n    this.tokensToDisplay.raw = this.tokens;\n    this.tokensToDisplay.filtered = this.search(this.tokens);\n    this.tokensToDisplay.loaded = this.tokensToDisplay.filtered.slice(0, this.sliceEnd);\n  }\n  ngAfterViewInit(): void {\n    const cb = (e) => {\n      if (\n        this.body?.nativeElement?.scrollTop >= this.body?.nativeElement?.scrollHeight - this.body?.nativeElement?.clientHeight - 15 &&\n        (this.sliceEnd < this.tokensToDisplay.raw?.length ?? 0)\n      ) {\n        this.sliceEnd += this.chunkSize;\n        this.refresh();\n      }\n    };\n    this.body?.nativeElement.addEventListener('scroll', cb);\n    this.body?.nativeElement.addEventListener('touchmove', cb);\n  }\n  search(tokens): Token[] {\n    if (this.filter.length > 0 && this.filter !== '.*') {\n      return tokens.filter(\n        (t: any) =>\n          t.name.match(new RegExp(`.*${this.filter}.*`, 'i')) ||\n          (!isNaN(Number(this.filter)) && t.id.toString().match(new RegExp(`.*${parseInt(this.filter)}.*`, 'g')))\n      );\n    }\n    return tokens;\n  }\n  updateFilter(filter: string): void {\n    const prevFilter = this.filter;\n    this.filter = filter || '.*';\n    if (prevFilter !== this.filter) {\n      this.sliceEnd = this.chunkSize;\n      this.refresh();\n      this.body.nativeElement.scrollTo(0, 0);\n    }\n  }\n  trackToken(index: number, token: any): string | number {\n    return token?.contractAddress ? token?.contractAddress + ':' + token?.id : index;\n  }\n}\n","<div class=\"main-container\" *ngIf=\"displayTokenCard()\">\n  <div class=\"flex-row top-container-nfts\">\n    <div class=\"flex-row toggle\">\n      <h1 class=\"flex-row\" [class.selected]=\"!isDiscover\" (click)=\"isDiscover = false\">NFT<span> / Collectibles</span>\n      </h1>\n      <h1 class=\"flex-row\" [class.selected]=\"isDiscover\" (click)=\"isDiscover = true\">{{ 'Discover' }}</h1>\n    </div>\n    <div class=\"flex-row right\">\n      <ng-container *ngIf=\"this.nfts && Object.keys(this.nfts).length > 0 && !isDiscover\">\n        <span class=\"flex-row button icon-grey\" [class.selected]=\"filter === 'ALL'\" (click)=\"filter = 'ALL';\">ALL</span>\n        <span class=\"flex-row button icon-grey\" [class.selected]=\"filter !== 'ALL'\" (click)=\"filter = '';\">APP</span>\n      </ng-container>\n      <!-- <img class=\"button icon\" src=\"../../../../assets/img/filter.svg\" />\n      <img class=\"button icon\" src=\"../../../../assets/img/info.svg\" /> -->\n    </div>\n  </div>\n  <div class=\"flex-row-wrap nfts\" [class.d]=\"isDiscover\">\n    <!-- loop through contracts -->\n    <ng-container *ngIf=\"!nftsArray?.length && !isDiscover\"><span>There are no NFTs in this account</span>\n    </ng-container>\n    <ng-container *ngFor=\"let contract of nftsArray; trackBy:trackContract\">\n      <div class=\"flex-column collection\" [class.expanded]=\"filter === sanitizeKey(contract?.key)\"\n        [id]=\"sanitizeKey(contract?.key)\" [style.display]=\"!isDiscover && filter !== 'ALL' ? '' : 'none'\">\n        <div class=\"flex-row head\" (click)=\"toggleDropdown(sanitizeKey(contract?.key))\">\n          <div class=\"flex-row left\">\n            <app-asset class=\"nfts-head-thumbnail\" [assets]=\"{ thumbnailAsset:contract?.thumbnailUrl}\"></app-asset>\n            <div class=\"title\">\n              {{ contract?.name }}\n            </div>\n          </div>\n          <div class=\"flex-row right\">\n            <div class=\"count\">({{ contract?.tokens?.length }})</div>\n            <div class=\"flex-row button toggle\"><img src=\"../../../../assets/img/caret-left.svg\" /></div>\n          </div>\n        </div>\n        <div class=\"flex-column scroll\">\n          <app-nfts-body [isDisplaying]=\"filter === sanitizeKey(contract?.key)\" [tokens]=\"contract?.tokens\">\n          </app-nfts-body>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"flex-column collection scroll all\" [style.display]=\"!isDiscover && filter === 'ALL' ? '' : 'none'\">\n      <app-nfts-body class=\"all\" [isDisplaying]=\"!isDiscover && filter === 'ALL'\" [tokens]=\"tokens\" [searchable]=\"true\">\n      </app-nfts-body>\n    </div>\n    <ng-container *ngIf=\"isDiscover\">\n      <ng-container *ngFor=\"let contractAlias of contractAliases\">\n        <ng-container *ngIf=\"shouldDisplayLink(contractAlias?.shouldDisplayLink)\">\n          <a class=\"flex-column discover\" rel=\"noreferrer\" [href]=\"contractAlias?.link || '/'\" target=\"_blank\"\n            [style.display]=\"isDiscover ? '' : 'none'\">\n            <div class=\"flex-row top\">{{ getContractAlias(contractAlias?.category) || '' }}</div>\n            <div class=\"flex-column middle\" [class.zoom]=\"contractAlias?.zoomDiscoverImg\"\n              [style.backgroundColor]=\"contractAlias?.backgroundColor\">\n              <app-asset class=\"discover\" [class.zoom]=\"contractAlias?.zoomDiscoverImg\" [size]=\"'raw'\"\n                [assets]=\"{displayAsset: contractAlias.discoverUrl, thumbnailAsset: contractAlias.thumbnailUrl}\">\n              </app-asset>\n            </div>\n            <div class=\"flex-row bottom\">\n              <div class=\"flex-column left\">\n                <div class=\"title\">{{ contractAlias?.name || key }}</div>\n                <div class=\"description\">{{ contractAlias?.description }}</div>\n              </div>\n              <div class=\"flex-column right\">\n                <a class=\"link-to-app\">\n                  <button class=\"flex-row button\">GO <img src=\"assets/img/discover-right-angle.svg\" /></button>\n                </a>\n              </div>\n            </div>\n          </a>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { TorusWallet } from '../../../../../services/wallet/wallet';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { TokenService } from '../../../../../services/token/token.service';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { DisplayLinkOption } from '../../../../../interfaces';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-nfts',\n  templateUrl: './nfts.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/nfts/nfts.component.scss']\n})\nexport class NftsComponent implements OnInit, OnDestroy {\n  DisplayLinkOption = DisplayLinkOption;\n  Object = Object;\n  nfts = undefined;\n  nftsArray = [];\n  tokens = [];\n  isDiscover: boolean = false;\n  isInitLoad: boolean = true;\n  filter: string = 'APP';\n  contractAliases = Object.keys(CONSTANTS.CONTRACT_ALIASES).map((key: any) => ({ key, ...CONSTANTS.CONTRACT_ALIASES[key] }));\n  activeAddress: string = '';\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public tokenService: TokenService,\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private walletService: WalletService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        const activeAddress = this.subjectService.activeAccount.getValue()?.address;\n        if (activeAddress !== this.activeAddress) {\n          this.activeAddress = activeAddress;\n          this.reset();\n        }\n        if (this.isInitLoad) {\n          if (!p?.nfts || !Object.keys(p.nfts)?.length) {\n            this.isDiscover = true;\n          } else {\n            this.isInitLoad = false;\n            this.isDiscover = false;\n          }\n        }\n        this.nfts = p?.nfts;\n        this.nftsArray = p?.nfts ? Object.keys(p.nfts).map((key: any) => ({ key, ...p.nfts[key] })) : [];\n        this.tokens = p?.nfts\n          ? Object.keys(p.nfts)\n              .map((key: any) => p.nfts[key]?.tokens)\n              .flat()\n          : [];\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.logout.subscribe((o) => {\n        if (o) {\n          this.reset();\n          this.activeAddress = '';\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        const activeAddress = activeAccount?.address;\n        if (activeAddress !== this.activeAddress) {\n          this.activeAddress = activeAddress;\n          this.reset();\n        }\n      })\n    );\n  }\n  @Input() activity: any;\n  @Input() account;\n  ngOnInit(): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  displayTokenCard(): boolean {\n    return this.nfts !== undefined;\n  }\n  toggleDropdown(sel): void {\n    if (this.filter === sel) {\n      this.filter = '';\n    } else {\n      this.filter = sel;\n      const c = document.querySelector('#' + sel) as HTMLElement;\n      if (window.innerWidth < 1024) {\n        setTimeout(() => {\n          document.body.scroll(0, c.offsetTop - 25);\n        }, 25);\n      }\n    }\n  }\n  shouldDisplayLink(option: DisplayLinkOption): boolean {\n    if (option === 0 || (option === 1 && this.walletService.wallet instanceof TorusWallet)) {\n      return true;\n    }\n    return false;\n  }\n  sanitizeKey(key: string): string {\n    return 'ku' + key?.replace(/ /g, '');\n  }\n\n  trackContract(index: number, contract: any): string | number {\n    return contract?.key ? contract.key : index;\n  }\n\n  getContractAlias(category): string {\n    return category?.join(' · ');\n  }\n  reset(): void {\n    this.nfts = undefined;\n    this.isDiscover = false;\n    this.tokens = [];\n    this.nftsArray = [];\n    this.isInitLoad = true;\n    this.filter = 'APP';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-basic-button',\n  templateUrl: './basic.component.html'\n})\nexport class BasicButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<button *ngIf=\"symbol && !override; else detailButton\" class=\"flex-row button button-primary with-image\"\n  [class]=\"symbol === 'tez' ? 'tez' : ''\" (click)=\"prepareTransaction()\">\n  <svg *ngIf=\"symbol === 'tez'\" width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\">\n    <path id=\"svg_1\"\n      d=\"m16.4439,9.50064c-0.764,0.764 -2.003,0.764 -2.767,0l-2.66,-2.659l0,9.231c0,1.105 -0.895,2 -2,2c-1.104,0 -2,-0.895 -2,-2l0,-9.254l-2.679,2.68c-0.767,0.767 -2.01,0.767 -2.777,0c-0.767,-0.767 -0.767,-2.01 0,-2.776l5.936,-5.936c0.037,-0.044 0.052,-0.099 0.093,-0.14c0.203,-0.203 0.558,-0.344 0.693,-0.439c0.716,-0.307 1.575,-0.176 2.16,0.409c0.101,0.101 0.152,0.227 0.227,0.342l5.774,5.774c0.765,0.764 0.765,2.004 0,2.768z\"\n      fill=\"rgb(255, 255, 255)\" fill-rule=\"evenodd\" />\n  </svg>\n  <img *ngIf=\"symbol !== 'tez'\" [src]=\"'../../../../assets/img/up-arrow.svg'\" />\n  <div class=\"tooltip\">\n    <div class=\"description\">Send {{ symbol }}</div>\n  </div>\n</button>\n<ng-template #detailButton>\n  <button class=\"button button-primary detail\" (click)=\"prepareTransaction()\">SEND</button>\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { TokenService } from '../../../../../services/token/token.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { BasicButtonComponent } from '../basic.component';\n\n@Component({\n  selector: 'app-send-button',\n  templateUrl: './send-button.component.html',\n  styleUrls: ['../../../../../../scss/components/ui/button/send.component.scss']\n})\nexport class SendButtonComponent extends BasicButtonComponent implements OnInit {\n  @Input() activeAccount: Account;\n  @Input() tokenTransfer: string;\n  @Input() symbol: string;\n  @Input() override = false;\n  asset = null;\n  constructor(public tokenService: TokenService, private subjectService: SubjectService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.asset = this.tokenService.getAsset(this.tokenTransfer);\n  }\n  prepareTransaction(): void {\n    this.subjectService.prepareTokenTransfer.next({\n      account: this.activeAccount,\n      tokenTransfer: this.tokenTransfer,\n      symbol: this.symbol\n    });\n  }\n}\n","<div class=\"flex-row balance\">\n  <div class=\"flex-row left\">\n    <app-asset class=\"asset\" [priorityList]=\"['thumbnailAsset', 'displayAsset', 'fallback']\" [assets]=\"token\" [class.sd]=\"token.name === 'tezos'\"\n      (click)=\"viewToken()\">\n    </app-asset>\n    <div class=\"flex-row title\" (click)=\"viewToken()\">{{token.name === 'tezos' ? 'Tezos' : token.symbol}}</div>\n    <div class=\"flex-column prices\">\n      <div class=\"price\">{{ token.name === 'tezos' ? (getBalance() | number: '1.0-' + (token?.decimals || 6) | removeComma) || '—' :\n        getBalance() }}</div>\n      <div class=\"price-usd\">{{ getBalanceFiat() ? '$' + (getBalanceFiat() | number:'1.2-2' | removeComma) : '—' }}\n      </div>\n    </div>\n  </div>\n  <div class=\"flex-row right\">\n    <ng-container *ngIf=\"token?.name === 'tezos'\">\n      <button *ngIf=\"this.account?.balanceXTZ\" class=\"flex-row button button-primary with-image buy\" (click)=\"buy()\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 5.00024V19.0002\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M5 12H19\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        <div class=\"tooltip\">\n          <div class=\"description\">Get tez</div>\n        </div>\n      </button>\n      <button *ngIf=\"this.account?.balanceXTZ === 0\" class=\"flex-row button button-primary with-image buy tez\" (click)=\"buy()\">\n        <span style=\"text-transform: none;\">GET</span>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 5.00024V19.0002\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M5 12H19\" stroke=\"#ffffff\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        <div class=\"tooltip\" style=\"right: 0%;\">\n          <div class=\"description\">Get tez</div>\n        </div>\n      </button>\n    </ng-container>\n    <app-send-button *ngIf=\"token && this.account?.balanceXTZ !== 0\" [activeAccount]=\"account\"\n      [tokenTransfer]=\"token?.name === 'tezos' ? null : token?.contractAddress + ':' + token?.id\"\n      [symbol]=\"token?.name === 'tezos' ? 'tez' : token?.symbol\"></app-send-button>\n  </div>\n</div>","import { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../../../../modals/modal.component';\nimport { CONSTANTS } from '../../../../../../../environments/environment';\nimport { Big } from 'big.js';\nimport { RemoveCommaPipe } from '../../../../../../pipes/remove-comma.pipe';\nimport { SubjectService } from '../../../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-balance-token',\n  templateUrl: './balance-token.component.html',\n  styleUrls: ['../../../../../../../scss/components/views/logged-in/account-view/cards/balances/balance-token.component.scss']\n})\nexport class BalanceTokenComponent implements OnInit {\n  @Input() token = null;\n  @Input() account;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n\n  constructor(public removeCommaPipe: RemoveCommaPipe, private subjectService: SubjectService) {}\n  ngOnInit(): void {}\n\n  getBalance(): number | string {\n    return this.token?.name === 'tezos'\n      ? this.account?.balanceXTZ !== null\n        ? Big(this.account?.balanceXTZ).div(1000000).toFixed()\n        : undefined\n      : this.token?.balance;\n  }\n\n  getBalanceFiat(): number | undefined {\n    return this.token.name === 'tezos' ? this.account?.balanceUSD || undefined : this.token?.price && this.token.price >= 0.005 ? this.token.price : undefined;\n  }\n  viewToken(): void {\n    if (this.token?.name !== 'tezos') {\n      ModalComponent.currentModel.next({\n        name: 'token-detail',\n        data: this.token\n      });\n    }\n  }\n\n  buy() {\n    ModalComponent.currentModel.next({\n      name: 'buy',\n      data: undefined\n    });\n  }\n}\n","<div class=\"main-container\">\n  <div class=\"flex-row top-container-balances\">\n    <h1>Balances</h1>\n    <div class=\"flex-row button right\">\n      <button *ngIf=\"account?.isImplicit()\" class=\"swap-liquidity\" (click)=\"openSwap()\">Liquidity Baking</button>\n    </div>\n  </div>\n  <div class=\"scroll-wrapper\">\n    <app-balance-token [account]=\"account\" [token]=\"{name: 'tezos', fallback: 'assets/img/tezos-xtz-logo.svg'}\" class=\"tez no-box\"></app-balance-token>\n    <div *ngIf=\"!!this.tokenBalancesService?.balances?.length\" class=\"flex-column balances\">\n      <ng-container *ngFor=\"let balance of balances; let i = index; trackBy: trackToken\">\n        <app-balance-token [account]=\"account\" [token]=\"balance\" [class.first]=\"i === 0\"></app-balance-token>\n      </ng-container>\n    </div>\n    <div class=\"flex-row total-balances no-box\">\n      <div class=\"flex-row left\">\n        <h3>TOTAL VALUE:</h3>\n        <h1>{{ !!totalBalances && isFiat ? '$' + (totalBalances | number: '1.2-2' | removeComma) : '' }}{{ !!totalBalances && !isFiat ? (totalBalances | number: '1.0-6' | removeComma) + ' tez' : '' }}{{ !totalBalances ? '—' : '' }}</h1>\n      </div>\n      <div class=\"flex-row\" (click)=\"toggleTotalBalances()\">\n        <span class=\"fiat\" [class.selected]=\"isFiat\">\n          {{ 'usd' }}\n        </span>\n        <span class=\"sep\">&nbsp;{{ '|' }}&nbsp;</span>\n        <span class=\"tez\" [class.selected]=\"!isFiat\">\n          {{ 'tez' }}\n        </span>\n      </div>\n    </div>\n  </div>\n</div>","import { AfterViewChecked, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { CONSTANTS } from '../../../../../../environments/environment';\nimport { TokenBalancesService } from '../../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../../services/subject/subject.service';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Big } from 'big.js';\nimport { RemoveCommaPipe } from '../../../../../pipes/remove-comma.pipe';\nimport { ModalComponent } from '../../../../../components/modals/modal.component';\nimport { MessageService } from '../../../../../services/message/message.service';\n\n@Component({\n  selector: 'app-balances',\n  templateUrl: './balances.component.html',\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/cards/balances/balances.component.scss']\n})\nexport class BalancesComponent implements OnInit, AfterViewChecked, OnDestroy {\n  Object = Object;\n  @Input() account: Account;\n  contractAliases = CONSTANTS.CONTRACT_ALIASES;\n  totalBalances: string | number = 0;\n  balances: any[];\n  isFiat = false;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private walletService: WalletService,\n    public removeCommaPipe: RemoveCommaPipe,\n    private messageService: MessageService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.pipe(filter((account: Account) => account?.address !== this.account?.address)).subscribe((account) => {\n        this.account = account;\n        this.balances = this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.balances = p?.balances ?? this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.balances = this.tokenBalancesService?.balances;\n        this.calcTotalBalances();\n      })\n    );\n  }\n  e(wrap) {\n    if (!!wrap) {\n      if (wrap.scrollTop < 1 || this.tokenBalancesService?.balances?.length <= 5) {\n        document.querySelector('.scroll-wrapper .tez').classList.add('no-box');\n        document.querySelector('.total-balances').classList.add('no-box');\n      } else {\n        document.querySelector('.scroll-wrapper .tez').classList.remove('no-box');\n        document.querySelector('.total-balances').classList.remove('no-box');\n      }\n\n      if (this.tokenBalancesService?.balances?.length > 4) {\n        wrap.style.overflowY = 'auto';\n        wrap.style.width = 'calc(100% - 2.675rem)';\n        wrap.style.padding = '0 0 0 2rem';\n      } else {\n        wrap.style.overflowY = '';\n        wrap.style.width = '';\n        wrap.style.padding = '';\n      }\n    }\n  }\n  ngOnInit(): void {\n    this.balances = this.tokenBalancesService?.balances;\n    this.calcTotalBalances();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  ngAfterViewChecked(): void {\n    const wrap = document.querySelector('.scroll-wrapper .balances') as HTMLElement;\n    this.e(wrap);\n  }\n  trackToken(index: number, token: any): string | number {\n    return token?.contractAddress ? token.contractAddress + ':' + token?.id + ':' + token?.balance + ':' + token?.thumbnailAsset : index;\n  }\n\n  toggleTotalBalances(): void {\n    this.isFiat = !this.isFiat;\n    this.calcTotalBalances();\n  }\n  calcTotalBalances(): void {\n    this.totalBalances = this.isFiat\n      ? this.balances.reduce((prev, balance) => prev + parseFloat(balance?.price ?? 0), 0) + this.account?.balanceUSD\n      : this.balances.reduce((prev, balance) => prev + parseFloat(balance?.price ?? 0), 0) / this.walletService.wallet.XTZrate +\n        parseFloat(\n          Big(this.account?.balanceXTZ ?? 0)\n            .div(1000000)\n            .toFixed()\n        );\n  }\n  openSwap() {\n    this.messageService.startSpinner();\n    ModalComponent.currentModel.next({ name: 'swap-liquidity', data: null });\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">Token Info</h1>\n    </div>\n    <div class=\"flex-column token-info\">\n      <div class=\"flex-row-wrap data\">\n        <div class=\"flex-column wrapper\" [class]=\"imageExpanded ? 'expanded' : ''\">\n          <app-asset [style.display]=\"imageExpanded ? 'none' : ''\" class=\"flex-row button sd-only\"\n            [priorityList]=\"['displayAsset', 'thumbnailAsset']\"\n            [assets]=\"{thumbnailAsset: token?.thumbnailAsset, displayAsset: token?.displayAsset}\" [size]=\"'small'\"\n            (click)=\"expandImage()\" (loaded)=\"assetLoaded = true\" [autoplay]=\"true\" [muted]=\"true\" [loop]=\"true\" [playsinline]=\"true\"></app-asset>\n          <app-asset [style.display]=\"!imageExpanded ? 'none' : ''\" class=\"flex-row button sd-only\"\n            [priorityList]=\"['artifactAsset', 'displayAsset', 'thumbnailAsset']\"\n            [assets]=\"{thumbnailAsset: token?.thumbnailAsset, displayAsset: token?.displayAsset, artifactAsset: token?.artifactAsset}\"\n            [size]=\"'raw'\" [poster]=\"token?.displayAsset\" [controls]=\"true\"></app-asset>\n          <img *ngIf=\"imageExpanded\" class=\"flex-row button close\" (click)=\"expandImage()\"\n            src=\"../../../../../assets/img/close-btn-x.png\" />\n          <img *ngIf=\"!imageExpanded && assetLoaded && !token.displayAsset?.mimeType?.startsWith('model/')\"\n            class=\"expand\" src=\"../../../../../assets/img/expand.png\" (click)=\"expandImage()\" />\n          <b *ngIf=\"!imageExpanded && token.artifactAsset?.mimeType?.startsWith('model/')\" class=\"expand icon-threed\"\n            (click)=\"expandImage()\">3D</b>\n        </div>\n        <div class=\"flex-column meta\">\n          <div class=\"flex-column top\">\n            <div *ngIf=\"token?.name\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                name\n              </div>\n              <div class=\"value\">\n                {{ token?.name }}\n              </div>\n            </div>\n            <div *ngIf=\"!isNFT && token?.symbol\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                symbol\n              </div>\n              <div class=\"value\">\n                {{ token?.symbol }}\n              </div>\n            </div>\n            <div *ngIf=\"!isNFT && !!token?.decimals\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                decimals\n              </div>\n              <div class=\"value\">\n                {{ token?.decimals }}\n              </div>\n            </div>\n            <div *ngIf=\"token?.description\" class=\"flex-column key-value desc\">\n              <div class=\"key\">\n                description\n              </div>\n              <div class=\"value\" style=\"white-space: pre-line\">\n                {{token?.description}}\n              </div>\n            </div>\n            <div *ngIf=\"token?.creator\" class=\"flex-column key-value\">\n              <div class=\"key\">\n                creator\n              </div>\n              <div class=\"value\">\n                {{ token?.creator }}\n              </div>\n            </div>\n          </div>\n        </div>\n        <app-asset [style.height]=\"isAudio ? '' : '0px'\" class=\"flex-row audio minimal-controls\" [requires]=\"['audio']\"\n          [assets]=\"token\" [priorityList]=\"['artifactAsset']\" [size]=\"'raw'\" [autoplay]=\"true\" [muted]=\"true\"\n          [hideSpinner]=\"true\" [controls]=\"true\" (load)=\"isAudio = true\"></app-asset>\n      </div>\n      <ng-container *ngFor=\"let type of Object.keys(CONSTANTS.FEATURE_CONTRACTS)\">\n        <ng-container *ngFor=\"let feat of Object.keys(CONSTANTS.FEATURE_CONTRACTS[type])\">\n          <app-ui-toggle-advanced\n            *ngIf=\"CONSTANTS.FEATURE_CONTRACTS[type][feat]?.includes(token?.contractAddress + ':' + token?.id)\"\n            [class]=\"'feat ' + feat\" style=\"width: 100%\" (stateChange)=\"toggleFeature(type, feat)\"\n            [text]=\"(feat + ' Mode').toUpperCase()\" [state]=\"theme === feat\" [default]=\"theme === feat\">\n          </app-ui-toggle-advanced>\n        </ng-container>\n      </ng-container>\n      <div *ngIf=\"!!token\" class=\"flex-row button more-info\" [class]=\"moreInfo ? 'open' : ''\" (click)=\"expand()\">\n        <span>{{ moreInfo ? 'LESS' : 'MORE' }} INFO</span><img src=\"../../../assets/img/chevron-down.svg\" />\n      </div>\n      <div *ngIf=\"!!token\" [style.maxHeight]=\"moreInfo ? (3.25 * Object.keys(tokenFiltered).length) + 'rem' : ''\"\n        [style.overflowY]=\"autoOverflow ? 'auto' : ''\" class=\"flex-column meta-more\">\n        <ng-container *ngFor=\"let key of Object.keys(tokenFiltered)\">\n          <div *ngIf=\"key === 'contractAddress'\" class=\"flex-column key-value\">\n            <div class=\"key\">\n              {{ 'CONTRACT (ID)' }}\n            </div>\n            <div class=\"value\">\n              {{ token[key] + ' ' + '(' + token['id'] + ')' }}\n            </div>\n          </div>\n          <div *ngIf=\"key !== 'contractAddress' && key !== 'description' && key !== 'id' && !!token[key]\"\n            class=\"flex-column key-value\">\n            <div class=\"key\">\n              {{key}}\n            </div>\n            <div class=\"value\">\n              {{ token[key] }}\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div *ngIf=\"!token?.isUnknownToken\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <app-send-button class=\"send\" [override]=\"true\" [activeAccount]=\"activeAccount\"\n          [tokenTransfer]=\"!token ? null : token['contractAddress']+':'+token['id']\"\n          [symbol]=\"!token ? 'tez' : token?.symbol\">\n        </app-send-button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../modal.component';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\n\n@Component({\n  selector: 'app-token-detail',\n  templateUrl: './token-detail.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class TokenDetail extends ModalComponent implements OnInit, OnDestroy {\n  Object = Object;\n  CONSTANTS = CONSTANTS;\n  token = null;\n  tokenFiltered = {};\n  activeAccount = null;\n  moreInfo = false;\n  imageExpanded = false;\n  autoOverflow = false;\n  descOverflow = false;\n  isNFT = false;\n  assetLoaded = false;\n  isAudio = false;\n  name = 'token-detail';\n  readonly blacklistMeta = [\n    'name',\n    'kind',\n    'artifactAsset',\n    'displayAsset',\n    'thumbnailAsset',\n    'rawUrl',\n    'isTransferable',\n    'isBooleanAmount',\n    'balance',\n    'category',\n    'symbol',\n    'decimals',\n    'status',\n    'shouldPreferSymbol',\n    'price',\n    'formats',\n    'isUnknownToken'\n  ];\n\n  theme = '';\n\n  private subscriptions: Subscription = new Subscription();\n  constructor(private subjectService: SubjectService, private tokenBalancesService: TokenBalancesService, private unlockableService: UnlockableService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n    for (let type of Object.keys(CONSTANTS.FEATURE_CONTRACTS)) {\n      for (let feat of Object.keys(CONSTANTS.FEATURE_CONTRACTS[type])) {\n        if (document.documentElement.classList.contains(feat)) {\n          this.theme = feat;\n        }\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  open(data): void {\n    !!data\n      ? Object.keys(data)\n          .filter((key) => !this.blacklistMeta.includes(key))\n          .forEach((key) => (this.tokenFiltered[key] = data[key]))\n      : undefined;\n    this.token = data;\n    this.isNFT = this.tokenBalancesService.isNFT(this.token);\n    this.descOverflow = this.token?.description && this.token?.description.length > 250 ? true : false;\n    super.open();\n  }\n\n  close(): void {\n    this.reset();\n    super.close();\n  }\n\n  expand(): void {\n    this.moreInfo = !this.moreInfo;\n    if (!this.autoOverflow) {\n      setTimeout(() => {\n        this.autoOverflow = !this.autoOverflow;\n      }, 160);\n    } else {\n      this.autoOverflow = !this.autoOverflow;\n    }\n  }\n\n  expandImage(): void {\n    this.imageExpanded = !this.imageExpanded;\n  }\n\n  async toggleFeature(type, feat): Promise<void> {\n    this.theme = this.unlockableService.toggleFeature(type, feat) ? feat : '';\n  }\n\n  reset(): void {\n    this.moreInfo = false;\n    this.imageExpanded = false;\n    this.descOverflow = false;\n    this.assetLoaded = false;\n    this.isAudio = false;\n  }\n}\n","<div class=\"flex-column wrapper\" *ngIf=\"account\">\n  <div class=\"grid\" [class.more-than-15]=\"moreThan15\">\n    <app-balances [account]=\"account\"></app-balances>\n    <app-nfts [account]=\"account\"></app-nfts>\n    <app-activity [account]=\"account\"></app-activity>\n  </div>\n</div>\n<app-token-detail></app-token-detail>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Account, Activity, ImplicitAccount } from '../../../../services/wallet/wallet';\nimport { TimeAgoPipe } from '../../../../pipes/time-ago.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../../../../services/message/message.service';\nimport * as copy from 'copy-to-clipboard';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { ActivityService } from '../../../../services/activity/activity.service';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-account-view',\n  templateUrl: './account-view.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/account-view/account-view.component.scss']\n})\nexport class AccountViewComponent implements OnInit, OnDestroy {\n  account: Account;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public timeAgoPipe: TimeAgoPipe,\n    private activityService: ActivityService,\n    public tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  trigger = true;\n  @Input() activity: any;\n  moreThan15 = false;\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.account = activeAccount;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.moreThan15 = Object.keys(p?.nfts ?? {})?.length > 15 ? true : false;\n      })\n    );\n    setInterval(() => (this.trigger = !this.trigger), 1000);\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  getType(transaction: Activity): string {\n    if (transaction.type !== 'transaction') {\n      if (transaction.type === 'delegation') {\n        if (transaction.destination.address) {\n          return 'delegated';\n        } else {\n          return 'undelegated';\n        }\n      } else {\n        return transaction.type;\n      }\n    } else {\n      let operationType = '';\n      if (transaction.source.address === this.account.address) {\n        operationType = 'sent';\n      } else {\n        operationType = 'received';\n      }\n      return operationType;\n    }\n  }\n\n  getCounterparty(transaction: any): string {\n    return this.activityService.getCounterparty(transaction, this.account);\n  }\n  copy(account: Account): void {\n    copy(account.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(account.address + ' ' + copyToClipboard, 5);\n  }\n  explorerURL(hash: string): string {\n    const baseURL = CONSTANTS.BLOCK_EXPLORER_URL;\n    return `${baseURL}/${hash}`;\n  }\n  printAmount(activity: Activity): string {\n    return this.tokenService.formatAmount(activity.tokenId, activity.amount.toString());\n  }\n  sentKind(activity): string {\n    if (activity.entrypoint) {\n      return `Called ${activity.entrypoint}`;\n    }\n    return 'Sent';\n  }\n  zeroSent(activity): boolean {\n    return this.sentKind(activity).length > 4 && activity.amount === '0';\n  }\n  receivedKind(activity): string {\n    return activity.tokenId && activity.source.address && activity.tokenId.split(':')[0] === activity.source.address ? 'Minted' : 'Received';\n  }\n  displayTokenCard(): boolean {\n    return this.account instanceof ImplicitAccount || this.account?.tokens?.length > 0;\n  }\n}\n","<div class=\"flex-column settings\">\n  <a><button class=\"flex-row back\" [routerLink]=\"'/account/' + activeAccount?.address\"><img src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n  <h3>Connect with dApps</h3>\n  <div class=\"seperator\"></div>\n  <div class=\"flex-column handler\">\n    <div>\n      <h4>Connect to dApps on <u>another device</u> by scanning a QR code.</h4>\n    </div>\n    <div class=\"scan-button\">\n      <app-qr-scanner></app-qr-scanner>\n    </div>\n  </div>\n  <h3>Peers</h3>\n  <div class=\"seperator\"></div>\n  <table *ngIf=\"beaconService.peers.length\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Relay server</th>\n        <th><span (click)=\"beaconService.removePeers()\">Remove&nbsp;all</span></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let peer of beaconService.peers; index as i\">\n        <td>{{ peer.name }}</td>\n        <td>{{ peer.relayServer }}</td>\n        <td (click)=\"beaconService.removePeer(i)\"><img (click)=\"beaconService.removePeer(i)\" src=\"../../../assets/img/cross.svg\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <h3>Permissions</h3>\n  <div class=\"seperator\"></div>\n  <table *ngIf=\"beaconService.permissions.length\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Address</th>\n        <th><span (click)=\"beaconService.removePermissions()\">Remove&nbsp;all</span></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let permission of beaconService.permissions; index as i\"\n        [class.inactive]=\"!accountAvailable(permission.address)\">\n        <td>{{ permission.appMetadata.name }}</td>\n        <td>{{ formatAddress(permission.address) }}</td>\n        <td><img (click)=\"beaconService.removePermission(i)\" src=\"../../../assets/img/cross.svg\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <h3>Tokens</h3>\n  <div class=\"seperator\"></div>\n  <button class=\"rescan\" (click)=\"rescan()\">Rescan unknown tokens</button>\n  <button id=\"all\" class=\"rescan\" (click)=\"rescanAll()\">Clear all token metadata</button>\n  <button *ngIf=\"canRevealMnomonic()\" class=\"reveal-mnemonic\" (click)=\"revealMnemonic()\">Reveal Seed Words</button>\n</div>","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\nimport { BeaconService } from '../../../../services/beacon/beacon.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Router } from '@angular/router';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { CoordinatorService } from '../../../../services/coordinator/coordinator.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\nimport { HdWallet, LegacyWalletV3 } from '../../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/settings/settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  implicitAccounts = [];\n  wideAccounts = false;\n  activeAccount = null;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public beaconService: BeaconService,\n    private messageService: MessageService,\n    private walletService: WalletService,\n    private router: Router,\n    private tokenService: TokenService,\n    private coordinatorService: CoordinatorService,\n    private subjectService: SubjectService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.implicitAccounts = this.walletService.wallet.getImplicitAccounts();\n      this.beaconService.syncBeaconState();\n      this.onResize();\n    }\n\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n  }\n  ngOnDestroy(): void {}\n  accountAvailable(pkh: string): boolean {\n    const index = this.implicitAccounts.findIndex((impAcc: any) => impAcc.pkh === pkh);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n  @HostListener('window:resize')\n  onResize(): void {\n    this.wideAccounts = window.innerWidth > 600;\n  }\n  formatAddress(address: string): string {\n    if (this.wideAccounts) {\n      return address;\n    } else {\n      return address.slice(0, 6) + '...' + address.slice(-4);\n    }\n  }\n  rescan(): void {\n    this.tokenService.resetCounters();\n    this.messageService.add('Scanning for token metadata...');\n    this.coordinatorService.update(this.activeAccount.address);\n    this.router.navigate([`/account/${this.activeAccount.address}`]);\n  }\n  rescanAll(): void {\n    this.tokenService.resetAllMetadata();\n    this.messageService.add('Rescanning all token metadata...');\n    this.coordinatorService.update(this.activeAccount.address);\n    this.router.navigate([`/account/${this.activeAccount.address}`]);\n  }\n  revealMnemonic(): void {\n    ModalComponent.currentModel.next({ name: 'export-mnemonic', data: null });\n  }\n  canRevealMnomonic(): boolean {\n    return this.walletService.wallet && (this.walletService.wallet instanceof HdWallet || this.walletService.wallet instanceof LegacyWalletV3);\n  }\n}\n","<div class=\"flex-column delegate-page\">\n  <div class=\"content\">\n    <div class=\"flex-column manual\">\n      <div class=\"flex-column delegate\">\n        <a [routerLink]=\"'/account/' + activeAccount?.address\"><button class=\"flex-row back\"><img\n              src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n        <h1>Staking</h1>\n        <div class=\"flex-row toolbar\"><span class=\"button blue\" (click)=\"toggleCustom()\">Enter Custom Baker</span><span\n            *ngIf=\"!delegates?.length\" class=\"button blue\" (click)=\"this.delegateService.getDelegates()\">Reload</span>\n        </div>\n        <ng-container *ngIf=\"isShowingCustom\">\n          <span>Address or domain of a registered baker</span>\n          <div class=\"custom\">\n            <input [(ngModel)]=\"customAddress\" placeholder=\"Custom baker address\" /><button class=\"button\" (click)=\"stake({address: customAddress})\">STAKE</button>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"flex-column list\">\n      <ng-container *ngFor=\"let delegate of delegates\">\n        <div class=\"flex-row delegate desktop\">\n          <img class=\"logo\" [src]=\"delegate.logo ? delegate.logo : ''\" />\n          <span class=\"name\">{{ delegate.name }}</span>\n          <span class=\"fee\">SPLIT:&nbsp;<b class=\"value\">{{ toPercent(delegate?.fee) }}</b></span>\n          <span class=\"freespace\">SPACE:&nbsp;<b class=\"value\">{{ round(delegate?.freeSpace) + ' tez' }}</b></span>\n          <span class=\"estROI\">EST REWARDS:&nbsp;<b class=\"value\">{{ toPercent(delegate?.estimatedRoi) }}</b></span>\n          <span class=\"accuracy\">ACCURACY:&nbsp;<b class=\"value\">{{ delegate?.payoutAccuracy }}</b></span>\n          <button *ngIf=\"delegate?.address !== activeAccount?.delegate\" class=\"button\" (click)=\"stake(delegate)\">STAKE</button>\n          <span class=\"current\" *ngIf=\"delegate?.address === activeAccount?.delegate\">CURRENT</span>\n        </div>\n        <div class=\"flex-row delegate mobile\">\n          <div class=\"flex-column props\">\n            <img class=\"logo\" [src]=\"delegate.logo ? delegate.logo : ''\" />\n            <span class=\"name\">{{ delegate.name }}</span>\n            <span class=\"fee\">SPLIT:&nbsp;<b class=\"value\">{{ toPercent(delegate?.fee) }}</b></span>\n            <span class=\"freespace\">SPACE:&nbsp;<b class=\"value\">{{ round(delegate?.freeSpace) + ' tez' }}</b></span>\n            <span class=\"estROI\">EST REWARDS:&nbsp;<b class=\"value\">{{ toPercent(delegate?.estimatedRoi) }}</b></span>\n          </div>\n          <button *ngIf=\"delegate?.address !== activeAccount?.delegate\" class=\"button\" (click)=\"stake(delegate)\">STAKE</button>\n          <span class=\"current\" *ngIf=\"delegate?.address === activeAccount?.delegate\">CURRENT</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountViewComponent } from './account-view/account-view.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DelegatePageComponent } from './delegate-page/delegate-page.component';\nimport { ActivateComponent } from '../start/activate/activate.component';\n\nconst routes: Routes = [\n  { path: ':address', component: AccountViewComponent },\n  { path: ':address/settings', component: SettingsComponent },\n  { path: ':address/stakers', component: DelegatePageComponent },\n  { path: 'activate', component: ActivateComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoggedInRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { DelegateService } from '../../../../services/delegate/delegate.service';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-delegate-page',\n  templateUrl: './delegate-page.component.html',\n  styleUrls: ['../../../../../scss/components/views/logged-in/delegate/delegate.component.scss']\n})\nexport class DelegatePageComponent implements OnInit, OnDestroy {\n  delegates;\n  activeAccount = null;\n  customAddress: string = '';\n  isShowingCustom = false;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public delegateService: DelegateService,\n    public router: Router,\n    public walletService: WalletService,\n    public inputValidationService: InputValidationService,\n    private messageServcie: MessageService,\n    private subjectService: SubjectService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        if (this.activeAccount !== activeAccount) {\n          this.activeAccount = activeAccount;\n          this.subscriptions.add(\n            this.delegateService.delegates.pipe(take(1)).subscribe((d) => {\n              this.delegates = this.filter(d).sort((x, y) => (x.address === this.activeAccount?.delegate ? -1 : y === this.activeAccount?.delegate ? 1 : 0));\n            })\n          );\n        }\n      })\n    );\n\n    this.subscriptions.add(\n      this.delegateService.delegates.subscribe((d) => {\n        this.delegates = this.filter(d).sort((x, y) => (x.address === this.activeAccount?.delegate ? -1 : y === this.activeAccount?.delegate ? 1 : 0));\n      })\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  filter(delegates: any): any[] | null {\n    if (delegates?.length) {\n      const balanceXTZ = this.activeAccount ? Math.ceil(this.activeAccount.balanceXTZ / 1000000) : 0;\n      return delegates\n        .map((d) => {\n          try {\n            if (d.freeSpace > balanceXTZ && d.estimatedRoi > 0 && d.openForDelegation === true && d.minDelegation < balanceXTZ) {\n              return d;\n            }\n          } catch {\n            return null;\n          }\n          return null;\n        })\n        .filter((obj) => obj);\n    }\n    return [];\n  }\n  stake(delegate: any): void {\n    if (delegate.address === '' || this.inputValidationService.address(delegate.address)) {\n      ModalComponent.currentModel.next({\n        name: 'delegate-confirm',\n        data: delegate\n      });\n    } else {\n      this.messageServcie.addError(`Invalid baker address: ${delegate?.address}`);\n    }\n  }\n\n  round(val): string {\n    return Math.round(Number(val)).toString();\n  }\n\n  toPercent(val): string {\n    return parseFloat((Number(val) * 100).toFixed(2)).toString() + '%';\n  }\n\n  toggleCustom(): void {\n    this.isShowingCustom = this.isShowingCustom ? false : true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { SendComponent } from '../../misc/send/send.component';\nimport { ReceiveComponent } from '../../modals/receive/receive.component';\nimport { DelegateComponent } from '../../modals/delegate/delegate.component';\nimport { DelegatePageComponent } from './delegate-page/delegate-page.component';\nimport { ActivateComponent } from '../start/activate/activate.component';\nimport { NewImplicitComponent } from '../../modals/new-implicit/new-implicit.component';\nimport { UriHandlerComponent } from '../../misc/uri-handler/uri-handler.component';\nimport { PermissionRequestComponent } from '../../modals/permission-request/permission-request.component';\nimport { PermissionRequestDropdownComponent } from '../../ui/dropdown/permission-request/permission-request.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { QrScannerComponent } from '../../modals/qr-scanner/qr-scanner.component';\nimport { SignExprComponent } from '../../modals/sign-expr/sign-expr.component';\nimport { ConfirmSendComponent } from '../../modals/send/confirm/send-confirmation.component';\nimport { PrepareSendComponent } from '../../modals/send/prepare/prepare-send.component';\nimport { OriginateComponent } from '../../modals/originate/originate.component';\nimport { LoggedInComponent } from './logged-in.component';\nimport { LoggedInRoutingModule } from './logged-in-routing.module';\nimport { ConfirmSendEmbedComponent } from '../embedded/confirm-send/confirm-send.component';\nimport { SignExprEmbedComponent } from '../embedded/sign-expr/sign-expr.component';\nimport { AdvancedToggleComponent } from '../../ui/button/toggle/advanced/advanced.component';\nimport { PrepareSendDropdownComponent } from '../../ui/dropdown/prepare-send/prepare-send-dropdown.component';\nimport { AssetComponent } from '../../ui/asset/asset.component';\nimport { NftsBodyComponent } from './account-view/nfts/body/body.component';\nimport { NftsTokenComponent } from './account-view/nfts/token/token.component';\nimport { AccountListComponent } from '../../modals/account-list/list.component';\nimport { AccountListBodyComponent } from '../../modals/account-list/body/body.component';\nimport { ListComponent } from '../../ui/generic/list.component';\nimport { SearchBarComponent } from '../../ui/search/search.component';\nimport { RemoveCommaPipe } from '../../../pipes/remove-comma.pipe';\nimport { ExprTemplateComponent } from '../embedded/sign-expr/template/template.component';\nimport { QueueEmbedComponent } from '../embedded/queue/queue.component';\nimport { SwapLiquidityComponent } from '../../modals/swap-liquidity/swap-liquidity.component';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\nimport { InfoComponent } from '../../modals/info/info.component';\nimport { ExportMnemonicComponent } from '../../modals/export-mnemonic/export-mnemonic.component';\nimport { SwapLiquidityConfirmComponent } from '../../modals/swap-liquidity/swap-liquidity-confirm.component';\nimport { ChartComponent } from '../../ui/chart/chart.component';\nimport { ChartService } from '../../../../app/services/chart/chart.service';\nimport { BuyComponent } from './account-view/buy/buy.component';\nimport { BuyModalComponent } from '../../modals/buy/buy.component';\n\n@NgModule({\n  declarations: [\n    SendComponent,\n    ReceiveComponent,\n    DelegatePageComponent,\n    SwapLiquidityComponent,\n    ActivateComponent,\n    LoggedInComponent,\n    NewImplicitComponent,\n    UriHandlerComponent,\n    PermissionRequestComponent,\n    PermissionRequestDropdownComponent,\n    SettingsComponent,\n    QrScannerComponent,\n    SignExprComponent,\n    OriginateComponent,\n    ConfirmSendComponent,\n    PrepareSendComponent,\n    DelegateComponent,\n    AdvancedToggleComponent,\n    ConfirmSendEmbedComponent,\n    SignExprEmbedComponent,\n    QueueEmbedComponent,\n    PrepareSendDropdownComponent,\n    AssetComponent,\n    NftsBodyComponent,\n    NftsTokenComponent,\n    AccountListComponent,\n    AccountListBodyComponent,\n    ListComponent,\n    SearchBarComponent,\n    RemoveCommaPipe,\n    ExprTemplateComponent,\n    SwapLiquidityConfirmComponent,\n    InfoComponent,\n    RemoveCommaPipe,\n    ExportMnemonicComponent,\n    ChartComponent,\n    BuyComponent,\n    BuyModalComponent\n  ],\n  imports: [CommonModule, LoggedInRoutingModule, HttpClientModule, FormsModule],\n  exports: [\n    BuyComponent,\n    BuyModalComponent,\n    AdvancedToggleComponent,\n    SendComponent,\n    ConfirmSendEmbedComponent,\n    SignExprEmbedComponent,\n    QueueEmbedComponent,\n    AssetComponent,\n    NftsBodyComponent,\n    NftsTokenComponent,\n    PermissionRequestComponent,\n    PermissionRequestDropdownComponent,\n    ListComponent,\n    AccountListComponent,\n    AccountListBodyComponent,\n    SearchBarComponent,\n    RemoveCommaPipe,\n    ExprTemplateComponent,\n    InfoComponent,\n    ChartComponent\n  ],\n  providers: [SwapLiquidityService, ChartService, EstimateService, RemoveCommaPipe]\n})\nexport class LoggedInModule {}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/import/\" [state]=\"{ option: 2 }\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div class=\"flex-column body\">\n      <h1>\n        Activate a Fundraiser wallet\n      </h1>\n      <p class=\"description\">Wallets created during the fundraiser need to be activated. No private key is required for\n        the activation process.</p>\n      <span class=\"description\">Your public key hash</span>\n      <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1...'\">\n      <span class=\"description\">Your activation code</span>\n      <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"secret\" [placeholder]=\"'Code'\">\n      <button class=\"button next\" (click)=\"activate()\">Activate</button>\n      <span *ngIf=\"formInvalid\" class=\"description red\">\n        {{ formInvalid }}\n      </span>\n    </div>\n  </div>\n</form>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-activate',\n  templateUrl: './activate.component.html',\n  styleUrls: ['../../../../../scss/components/views/start/login.component.scss']\n})\nexport class ActivateComponent implements OnInit, OnDestroy {\n  pkh: string;\n  secret: string;\n  formInvalid = '';\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    private messageService: MessageService,\n    private operationService: OperationService,\n    private inputValidationService: InputValidationService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit(): void {}\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  activate(): void {\n    this.formInvalid = this.checkInput();\n    if (!this.formInvalid) {\n      const pkh = this.pkh;\n      const secret = this.secret;\n      this.pkh = '';\n      this.secret = '';\n      this.subscriptions.add(\n        this.operationService.activate(pkh, secret).subscribe(\n          (ans: any) => {\n            if (ans.success) {\n              if (ans.payload.opHash) {\n                this.subscriptions.add(\n                  this.translate.get('ACTIVATECOMPONENT.ACTIVATESUCCESS').subscribe(\n                    (res: string) => this.messageService.addSuccess(res) // 'Activation successfully broadcasted to the blockchain!'\n                  )\n                );\n              } else {\n                this.subscriptions.add(\n                  this.translate.get('ACTIVATECOMPONENT.RETRIEVEFAIL').subscribe(\n                    (res: string) => this.messageService.addWarning(res) // Could not retrieve an operation hash\n                  )\n                );\n              }\n            } else {\n              let errorMessage = '';\n              if (typeof ans.payload.msg === 'string') {\n                errorMessage = 'NodeError ' + ans.payload.msg;\n              } else {\n                errorMessage = 'NodeError ' + JSON.stringify(ans.payload.msg);\n              }\n              this.messageService.addError(errorMessage);\n              console.log(JSON.stringify(ans.payload.msg));\n            }\n          },\n          (err) => {\n            this.subscriptions.add(\n              this.translate.get('ACTIVATECOMPONENT.ACTIVATEFAIL').subscribe(\n                (res: string) => {\n                  let errorMessage = '';\n                  const activateFailed = res;\n                  if (typeof err.payload.msg === 'string') {\n                    errorMessage = activateFailed + ' ' + err.payload.msg;\n                  } else {\n                    errorMessage = activateFailed;\n                  }\n                  this.messageService.addError(errorMessage);\n                } // 'Failed to activate wallet!'\n              )\n            );\n            console.log(JSON.stringify(err));\n          }\n        )\n      );\n    }\n  }\n  checkInput(): string {\n    if (!this.inputValidationService.address(this.pkh)) {\n      return 'Invalid public key hash!';\n    } else if (!this.inputValidationService.code(this.secret)) {\n      return 'Invalid activation code!';\n    }\n    return '';\n  }\n}\n","import { Activity, Account as WalletAccount } from './services/wallet/wallet';\nimport { Asset, ContractType } from './services/token/token.service';\n\nexport { Activity };\n\nexport interface KeyPair {\n  sk: string | null;\n  pk: string | null;\n  pkh: string;\n}\nexport interface Wallet {\n  seed: null | string;\n  salt: null | string;\n  pk?: string;\n  encryptionVersion: number | null;\n  type: WalletType;\n  balance: Balance;\n  XTZrate: number | null;\n  accounts: Account[];\n  derivationPath?: string;\n}\nexport interface Account {\n  pkh: string | null;\n  delegate: string;\n  balance: Balance;\n  numberOfActivites: number;\n  activities: Activity[];\n}\nexport interface Balance {\n  balanceXTZ: number | null;\n  pendingXTZ: number | null;\n  balanceFiat: number | null;\n  pendingFiat: number | null;\n}\nexport enum WalletType {\n  LegacyWallet,\n  ViewOnlyWallet,\n  ObserverWallet,\n  LedgerWallet,\n  HdWallet\n}\nexport interface Baker {\n  baker_name: string;\n  image: string;\n  rolls: number;\n  identity: string;\n  vote: string;\n  vote2: string;\n  // vote: []\n}\nexport interface Vote {\n  voting_period: string;\n  period_kind: PeriodKind;\n  proposal_hash: string[];\n  proposal_alias: string[];\n  votes: number[];\n  operation: string[];\n}\nexport interface Period {\n  amendment: string;\n  period: number;\n  period_kind: string;\n  proposal_hash: string[];\n  proposal_alias: string[];\n  start_level: number;\n  end_level: number;\n  level: number;\n  progress: number;\n  remaining: number;\n}\nexport interface ParticipationPerPeriod {\n  proposal?: [\n    {\n      hash: string;\n      alias: string;\n      count: number;\n      votes: number;\n    }\n  ];\n  unused_count: number;\n  total_count: number;\n  unused_votes: number;\n  total_votes: number;\n}\nexport interface Ballot {\n  proposal: string;\n  nb_yay: number;\n  nb_nay: number;\n  nb_pass: number;\n  vote_yay: number;\n  vote_nay: number;\n  vote_pass: number;\n}\nexport enum PeriodKind {\n  Proposal,\n  Exploration,\n  Testing,\n  Promotion\n}\nexport interface DefaultTransactionParams {\n  gas: number;\n  storage: number;\n  fee: number;\n  burn: number;\n  reveal?: boolean;\n  customLimits?: {\n    gasLimit: number;\n    storageLimit: number;\n  }[];\n}\n\nexport enum DisplayLinkOption {\n  All,\n  DirectAuth,\n  None\n}\n\nexport interface OpLimits {\n  gas?: number;\n  storage?: number;\n}\n\nexport interface ExternalRequest {\n  operationRequest: any;\n  selectedAccount: WalletAccount;\n}\nexport interface Constants {\n  NAME: string;\n  TEZOS_DOMAIN: {\n    CONTRACT?: string; // deprecated?\n    TOP_DOMAINS: string[];\n  };\n  NETWORK: string;\n  MAINNET: boolean;\n  NODE_URL: string;\n  API_URL: string;\n  BLOCK_EXPLORER_URL: string;\n  HARD_LIMITS: {\n    hard_gas_limit_per_operation: number;\n    hard_gas_limit_per_block: number;\n    hard_storage_limit_per_operation: number;\n  };\n  ASSETS: Record<string, ContractType>;\n  CONTRACT_OVERRIDES: Record<string, OpLimits>;\n  CONTRACT_ALIASES: Record<\n    string,\n    {\n      name?: string;\n      address: string[];\n      thumbnailUrl: Asset;\n      discoverUrl?: string;\n      zoomDiscoverImg?: boolean;\n      link?: string;\n      shouldDisplayLink: DisplayLinkOption;\n      category?: string[];\n      backgroundColor?: string;\n      description?: string;\n    }\n  >;\n  NFT_CONTRACT_OVERRIDES: string[];\n  FEATURE_CONTRACTS: {};\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/*\n    Informs users on most common errors\n    RPC errors doc: http://tezos.gitlab.io/mainnet/api/errors.html\n*/\n\n@Pipe({\n  name: 'errorHandling'\n})\nexport class ErrorHandlingPipe implements PipeTransform {\n  ERROR_LIST = [\n    {\n      msg: 'A fatal assertion failed',\n      id: 'proto.alpha.assertion'\n    },\n    {\n      msg: \"The block's proof-of-work stamp is insufficient\",\n      id: 'proto.alpha.baking.insufficient_proof_of_work'\n    },\n    {\n      msg: 'A block was not signed with the expected private key.',\n      id: 'proto.alpha.baking.invalid_block_signature'\n    },\n    {\n      msg: 'The gap of fitness is out of bounds',\n      id: 'proto.alpha.baking.invalid_fitness_gap'\n    },\n    {\n      msg: \"The block's signature is invalid\",\n      id: 'proto.alpha.baking.invalid_signature'\n    },\n    {\n      msg: 'The block timestamp is before the first slot for this baker at this level',\n      id: 'proto.alpha.baking.timestamp_too_early'\n    },\n    {\n      msg: 'The operation is signed by a delegate without endorsement rights.',\n      id: 'proto.alpha.baking.unexpected_endorsement'\n    },\n    {\n      msg: 'A double-baking evidence is inconsistent (two distinct delegates)',\n      id: 'proto.alpha.block.inconsistent_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is inconsistent (two distinct delegates)',\n      id: 'proto.alpha.block.inconsistent_double_endorsement_evidence'\n    },\n    {\n      msg: 'The block header has invalid commitment.',\n      id: 'proto.alpha.block.invalid_commitment'\n    },\n    {\n      msg: 'A double-baking evidence is inconsistent (two distinct level)',\n      id: 'proto.alpha.block.invalid_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is malformed',\n      id: 'proto.alpha.block.invalid_double_endorsement_evidence'\n    },\n    {\n      msg: 'A manager operation should not contain more than one revelation',\n      id: 'proto.alpha.block.multiple_revelation'\n    },\n    {\n      msg: 'A double-baking evidence is outdated.',\n      id: 'proto.alpha.block.outdated_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is outdated.',\n      id: 'proto.alpha.block.outdated_double_endorsement_evidence'\n    },\n    {\n      msg: 'A double-baking evidence is in the future',\n      id: 'proto.alpha.block.too_early_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is in the future',\n      id: 'proto.alpha.block.too_early_double_endorsement_evidence'\n    },\n    {\n      msg: 'A double-baking evidence is unrequired',\n      id: 'proto.alpha.block.unrequired_double_baking_evidence'\n    },\n    {\n      msg: 'A double-endorsement evidence is unrequired',\n      id: 'proto.alpha.block.unrequired_double_endorsement_evidence'\n    },\n    {\n      msg: 'Unexpected JSON object.',\n      id: 'proto.alpha.context.failed_to_decode_parameter'\n    },\n    {\n      msg: 'The protocol parameters are not valid JSON.',\n      id: 'proto.alpha.context.failed_to_parse_parameter'\n    },\n    {\n      msg: 'An error that should never happen unless something has been deleted or corrupted in the database.',\n      id: 'proto.alpha.context.storage_error'\n    },\n    {\n      msg: 'An operation tried to spend more tez than the account has',\n      id: 'proto.alpha.contract.balance_too_low'\n    },\n    {\n      msg: 'The storage fee is higher than the contract balance',\n      id: 'proto.alpha.contract.cannot_pay_storage_fee'\n    },\n    {\n      msg: 'An operation assumed a contract counter in the future',\n      id: 'proto.alpha.contract.counter_in_the_future'\n    },\n    {\n      msg: 'An operation assumed a contract counter in the past',\n      id: 'proto.alpha.contract.counter_in_the_past'\n    },\n    {\n      msg: 'Forbidden to credit 0ꜩ to a contract without code.',\n      id: 'proto.alpha.contract.empty_transaction'\n    },\n    {\n      msg: 'Unexpected contract storage error',\n      id: 'proto.alpha.contract.failure'\n    },\n    {\n      msg: 'A malformed contract notation was given to an RPC or in a script.',\n      id: 'proto.alpha.contract.invalid_contract_notation'\n    },\n    {\n      msg: 'Change is not enough to consume a roll.',\n      id: 'proto.alpha.contract.manager.consume_roll_change'\n    },\n    {\n      msg: 'A revealed manager public key is inconsistent with the announced hash',\n      id: 'proto.alpha.contract.manager.inconsistent_hash'\n    },\n    {\n      msg: 'A provided manager public key is different with the public key stored in the contract',\n      id: 'proto.alpha.contract.manager.inconsistent_public_key'\n    },\n    {\n      msg: 'Delegate has no roll.',\n      id: 'proto.alpha.contract.manager.no_roll_for_delegate'\n    },\n    {\n      msg: 'A snapshot of the rolls distribution does not exist for this cycle.',\n      id: 'proto.alpha.contract.manager.no_roll_snapshot_for_cycle'\n    },\n    {\n      msg: 'A contract cannot be delegated to an unregistered delegate',\n      id: 'proto.alpha.contract.manager.unregistered_delegate'\n    },\n    {\n      msg: 'A contract handle is not present in the context (either it never was or it has been destroyed)',\n      id: 'proto.alpha.contract.non_existing_contract'\n    },\n    {\n      msg: 'One tried to revealed twice a manager public key',\n      id: 'proto.alpha.contract.previously_revealed_key'\n    },\n    {\n      msg: 'One tried to apply a manager operation without revealing the manager public key',\n      id: 'proto.alpha.contract.unrevealed_key'\n    },\n    {\n      msg: 'An operation tried to spend tokens from an unspendable contract',\n      id: 'proto.alpha.contract.unspendable_contract'\n    },\n    {\n      msg: 'Useless delegate reactivation',\n      id: 'proto.alpha.delegate.already_active'\n    },\n    {\n      msg: 'Cannot freeze deposit when the balance is too low',\n      id: 'proto.alpha.delegate.balance_too_low_for_deposit'\n    },\n    {\n      msg: 'Cannot register a delegate when its implicit account is empty',\n      id: 'proto.alpha.delegate.empty_delegate_account'\n    },\n    {\n      msg: 'Tried to unregister a delegate',\n      id: 'proto.alpha.delegate.no_deletion'\n    },\n    {\n      msg: 'Contract already delegated to the given delegate',\n      id: 'proto.alpha.delegate.unchanged'\n    },\n    {\n      msg: 'Proposal lists cannot be empty.',\n      id: 'proto.alpha.empty_proposal'\n    },\n    {\n      msg: 'The sum of gas consumed by all the operations in the block exceeds the hard gas limit per block',\n      id: 'proto.alpha.gas_exhausted.block'\n    },\n    {\n      msg: 'Gas limit was not high enough to deserialize the transaction parameters or origination script code or initial storage, making the operation impossible to parse within the provided gas bounds.',\n      id: 'proto.alpha.gas_exhausted.init_deserialize'\n    },\n    {\n      msg: 'An operation tried to exceed the gas limit',\n      id: 'proto.alpha.gas_exhausted.operation'\n    },\n    {\n      msg: 'A transaction tried to exceed the hard limit on gas',\n      id: 'proto.alpha.gas_limit_too_high'\n    },\n    {\n      msg: 'No manager operations are allowed on an empty account. Make sure you have enough balance.',\n      id: 'proto.alpha.implicit.empty_implicit_contract'\n    },\n    {\n      msg: 'Emptying an implicit delegated account is not allowed.',\n      id: 'proto.alpha.implicit.empty_implicit_delegated_contract'\n    },\n    {\n      msg: 'The number of endorsements must be non-negative and at most the endosers_per_block constant.',\n      id: 'proto.alpha.incorrect_number_of_endorsements'\n    },\n    {\n      msg: 'Block priority must be non-negative.',\n      id: 'proto.alpha.incorrect_priority'\n    },\n    {\n      msg: 'An internal operation was emitted twice by a script',\n      id: 'proto.alpha.internal_operation_replay'\n    },\n    {\n      msg: 'A compile-time constant was invalid for its expected form.',\n      id: 'proto.alpha.invalidSyntacticConstantError'\n    },\n    {\n      msg: 'Negative multiple of periods are not allowed.',\n      id: 'proto.alpha.invalid_arg'\n    },\n    {\n      msg: 'Could not deserialize some piece of data from its binary representation',\n      id: 'proto.alpha.invalid_binary_format'\n    },\n    {\n      msg: 'Fitness representation should be exactly 8 bytes long.',\n      id: 'proto.alpha.invalid_fitness'\n    },\n    {\n      msg: 'Ballot provided for a proposal that is not the current one.',\n      id: 'proto.alpha.invalid_proposal'\n    },\n    {\n      msg: 'Period is negative.',\n      id: 'proto.alpha.malformed_period'\n    },\n    {\n      msg: 'Either no parameter was supplied to a contract with a non-unit parameter type, a non-unit parameter was passed to an account, or a parameter was supplied of the wrong type',\n      id: 'proto.alpha.michelson_v1.bad_contract_parameter'\n    },\n    {\n      msg: 'Unexpected stack at the end of a lambda or script.',\n      id: 'proto.alpha.michelson_v1.bad_return'\n    },\n    {\n      msg: 'The stack has an unexpected length or contents.',\n      id: 'proto.alpha.michelson_v1.bad_stack'\n    },\n    {\n      msg: 'The type of a stack item is unexpected (this error is always accompanied by a more precise one).',\n      id: 'proto.alpha.michelson_v1.bad_stack_item'\n    },\n    {\n      msg: 'The error was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_error'\n    },\n    {\n      msg: 'Argument of FAILWITH was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_failure'\n    },\n    {\n      msg: 'Execution trace with stacks was to big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_log'\n    },\n    {\n      msg: 'The returned storage was too big to be serialized with the provided gas',\n      id: 'proto.alpha.michelson_v1.cannot_serialize_storage'\n    },\n    {\n      msg: 'A non comparable type was used in a place where only comparable types are accepted.',\n      id: 'proto.alpha.michelson_v1.comparable_type_expected'\n    },\n    {\n      msg: 'A deprecated instruction usage is disallowed in newly created contracts',\n      id: 'proto.alpha.michelson_v1.deprecated_instruction'\n    },\n    {\n      msg: 'Two entrypoints have the same name.',\n      id: 'proto.alpha.michelson_v1.duplicate_entrypoint'\n    },\n    {\n      msg: 'Map literals cannot contain duplicated keys',\n      id: 'proto.alpha.michelson_v1.duplicate_map_keys'\n    },\n    {\n      msg: 'When parsing script, a field was found more than once',\n      id: 'proto.alpha.michelson_v1.duplicate_script_field'\n    },\n    {\n      msg: 'Set literals cannot contain duplicate elements, but a duplicae was found while parsing.',\n      id: 'proto.alpha.michelson_v1.duplicate_set_values_in_literal'\n    },\n    {\n      msg: 'An entrypoint name exceeds the maximum length of 31 characters.',\n      id: 'proto.alpha.michelson_v1.entrypoint_name_too_long'\n    },\n    {\n      msg: 'There is non trivial garbage code after a FAIL instruction.',\n      id: 'proto.alpha.michelson_v1.fail_not_in_tail_position'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to parse a type expression (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_formed_type'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to typecheck a contract code against given input, output and storage types (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_typed_contract'\n    },\n    {\n      msg: 'The toplevel error thrown when trying to typecheck a data expression against a given type (always followed by more precise errors).',\n      id: 'proto.alpha.michelson_v1.ill_typed_data'\n    },\n    {\n      msg: 'The annotations on two types could not be merged',\n      id: 'proto.alpha.michelson_v1.inconsistent_annotations'\n    },\n    {\n      msg: 'The specified field does not match the field annotation in the type',\n      id: 'proto.alpha.michelson_v1.inconsistent_field_annotations'\n    },\n    {\n      msg: 'A stack was of an unexpected length (this error is always in the context of a located error).',\n      id: 'proto.alpha.michelson_v1.inconsistent_stack_lengths'\n    },\n    {\n      msg: 'The two types contain annotations that do not match',\n      id: 'proto.alpha.michelson_v1.inconsistent_type_annotations'\n    },\n    {\n      msg: 'This is the basic type clash error, that appears in several places where the equality of two types have to be proven, it is always accompanied with another error that provides more context.',\n      id: 'proto.alpha.michelson_v1.inconsistent_types'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was applied to an unsupported number of arguments.',\n      id: 'proto.alpha.michelson_v1.invalid_arity'\n    },\n    {\n      msg: 'A script or data expression references a big_map that does not exist or assumes a wrong type for an existing big_map.',\n      id: 'proto.alpha.michelson_v1.invalid_big_map'\n    },\n    {\n      msg: 'A data expression was invalid for its expected type.',\n      id: 'proto.alpha.michelson_v1.invalid_constant'\n    },\n    {\n      msg: 'A script or data expression references a contract that does not exist or assumes a wrong type for an existing contract.',\n      id: 'proto.alpha.michelson_v1.invalid_contract'\n    },\n    {\n      msg: 'In a script or data expression, an expression was of the wrong kind (for instance a string where only a primitive applications can appear).',\n      id: 'proto.alpha.michelson_v1.invalid_expression_kind'\n    },\n    {\n      msg: 'The body of an ITER instruction must result in the same stack type as before the ITER.',\n      id: 'proto.alpha.michelson_v1.invalid_iter_body'\n    },\n    {\n      msg: 'FAIL cannot be the only instruction in the body. The propper type of the return list cannot be inferred.',\n      id: 'proto.alpha.michelson_v1.invalid_map_block_fail'\n    },\n    {\n      msg: 'The body of a map block did not match the expected type',\n      id: 'proto.alpha.michelson_v1.invalid_map_body'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was unknown.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive'\n    },\n    {\n      msg: 'In a script or data expression, a primitive name is unknown or has a wrong case.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_name'\n    },\n    {\n      msg: 'In a script or data expression, a primitive name is neither uppercase, lowercase or capitalized.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_name_case'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was of the wrong namespace.',\n      id: 'proto.alpha.michelson_v1.invalid_primitive_namespace'\n    },\n    {\n      msg: 'When parsing script, a field was expected, but not provided',\n      id: 'proto.alpha.michelson_v1.missing_script_field'\n    },\n    {\n      msg: 'An entrypoint was not found when calling a contract.',\n      id: 'proto.alpha.michelson_v1.no_such_entrypoint'\n    },\n    {\n      msg: 'Toplevel error for all runtime script errors',\n      id: 'proto.alpha.michelson_v1.runtime_error'\n    },\n    {\n      msg: 'A FAIL instruction was reached due to the detection of an overflow',\n      id: 'proto.alpha.michelson_v1.script_overflow'\n    },\n    {\n      msg: 'A FAILWITH instruction was reached',\n      id: 'proto.alpha.michelson_v1.script_rejected'\n    },\n    {\n      msg: 'A SELF instruction was encountered in a lambda expression.',\n      id: 'proto.alpha.michelson_v1.self_in_lambda'\n    },\n    {\n      msg: 'An instruction generated a type larger than the limit.',\n      id: 'proto.alpha.michelson_v1.type_too_large'\n    },\n    {\n      msg: 'A binary operation is called on operands of types over which it is not defined.',\n      id: 'proto.alpha.michelson_v1.undefined_binop'\n    },\n    {\n      msg: 'A unary operation is called on an operand of type over which it is not defined.',\n      id: 'proto.alpha.michelson_v1.undefined_unop'\n    },\n    {\n      msg: 'A node in the syntax tree was impropperly annotated',\n      id: 'proto.alpha.michelson_v1.unexpected_annotation'\n    },\n    {\n      msg: 'When parsing script, a big_map type was found in a position where it could end up stored inside a big_map, which is forbidden for now.',\n      id: 'proto.alpha.michelson_v1.unexpected_bigmap'\n    },\n    {\n      msg: 'When parsing script, a contract type was found in the storage or parameter field.',\n      id: 'proto.alpha.michelson_v1.unexpected_contract'\n    },\n    {\n      msg: 'When parsing script, an operation type was found in the storage or parameter field.',\n      id: 'proto.alpha.michelson_v1.unexpected_operation'\n    },\n    {\n      msg: 'Annotations of the same kind must be grouped',\n      id: 'proto.alpha.michelson_v1.ungrouped_annotations'\n    },\n    {\n      msg: 'In a script or data expression, a primitive was unknown.',\n      id: 'proto.alpha.michelson_v1.unknown_primitive_name'\n    },\n    {\n      msg: 'At the join point at the end of two code branches the stacks have inconsistent lengths or contents.',\n      id: 'proto.alpha.michelson_v1.unmatched_branches'\n    },\n    {\n      msg: 'Map keys must be in strictly increasing order',\n      id: 'proto.alpha.michelson_v1.unordered_map_literal'\n    },\n    {\n      msg: 'Set values must be in strictly increasing order',\n      id: 'proto.alpha.michelson_v1.unordered_set_literal'\n    },\n    {\n      msg: 'An entrypoint in the contract is not reachable.',\n      id: 'proto.alpha.michelson_v1.unreachable_entrypoint'\n    },\n    {\n      msg: 'Duplicated revelation for a nonce.',\n      id: 'proto.alpha.nonce.previously_revealed'\n    },\n    {\n      msg: 'Nonce revelation happens before cycle end',\n      id: 'proto.alpha.nonce.too_early_revelation'\n    },\n    {\n      msg: 'Nonce revelation happens too late',\n      id: 'proto.alpha.nonce.too_late_revelation'\n    },\n    {\n      msg: 'The provided nonce is inconsistent with the committed nonce hash.',\n      id: 'proto.alpha.nonce.unexpected'\n    },\n    {\n      msg: 'The operation is ill-formed or for another protocol version',\n      id: 'proto.alpha.operation.cannot_parse'\n    },\n    {\n      msg: 'Two endorsements received from same delegate',\n      id: 'proto.alpha.operation.duplicate_endorsement'\n    },\n    {\n      msg: 'The given key and secret do not correspond to any existing preallocated contract',\n      id: 'proto.alpha.operation.invalid_activation'\n    },\n    {\n      msg: 'The level of an endorsement is inconsistent with the provided block hash.',\n      id: 'proto.alpha.operation.invalid_endorsement_level'\n    },\n    {\n      msg: 'The operation signature is ill-formed or has been made with the wrong public key',\n      id: 'proto.alpha.operation.invalid_signature'\n    },\n    {\n      msg: 'The operation is of a kind that must be signed, but the signature is missing',\n      id: 'proto.alpha.operation.missing_signature'\n    },\n    {\n      msg: 'The block being validated does not include the required minimum number of endorsements for this priority.',\n      id: 'proto.alpha.operation.not_enought_endorsements_for_priority'\n    },\n    {\n      msg: 'Trying to include an endorsement in a block that is not the successor of the endorsed one',\n      id: 'proto.alpha.operation.wrong_endorsement_predecessor'\n    },\n    {\n      msg: 'Trying to onclude a proposal or ballot meant for another voting period',\n      id: 'proto.alpha.operation.wrong_voting_period'\n    },\n    {\n      msg: 'The requested seed is not available',\n      id: 'proto.alpha.seed.unknown_seed'\n    },\n    {\n      msg: 'A script or one of its callee wrote more bytes than the operation said it would',\n      id: 'proto.alpha.storage_exhausted.operation'\n    },\n    {\n      msg: 'A transaction tried to exceed the hard limit on storage',\n      id: 'proto.alpha.storage_limit_too_high'\n    },\n    {\n      msg: 'An addition of two tez amounts overflowed',\n      id: 'proto.alpha.tez.addition_overflow'\n    },\n    {\n      msg: 'Multiplication of a tez amount by a non positive integer',\n      id: 'proto.alpha.tez.invalid_divisor'\n    },\n    {\n      msg: 'A multiplication of a tez amount by an integer overflowed',\n      id: 'proto.alpha.tez.multiplication_overflow'\n    },\n    {\n      msg: 'Multiplication of a tez amount by a negative integer',\n      id: 'proto.alpha.tez.negative_multiplicator'\n    },\n    {\n      msg: 'An subtraction of two tez amounts underflowed',\n      id: 'proto.alpha.tez.subtraction_underflow'\n    },\n    {\n      msg: 'Overflow when adding timestamps.',\n      id: 'proto.alpha.timestamp_add'\n    },\n    {\n      msg: 'Substracting timestamps resulted in negative period.',\n      id: 'proto.alpha.timestamp_sub'\n    },\n    {\n      msg: 'A transaction exceeded the hard limit of internal operations it can emit',\n      id: 'proto.alpha.too_many_internal_operations'\n    },\n    {\n      msg: 'The delegate reached the maximum number of allowed proposals.',\n      id: 'proto.alpha.too_many_proposals'\n    },\n    {\n      msg: 'The delegate provided for the ballot is not in the voting listings.',\n      id: 'proto.alpha.unauthorized_ballot'\n    },\n    {\n      msg: 'The delegate provided for the proposal is not in the voting listings.',\n      id: 'proto.alpha.unauthorized_proposal'\n    },\n    {\n      msg: 'An origination was attemped out of the scope of a manager operation',\n      id: 'proto.alpha.undefined_operation_nonce'\n    },\n    {\n      msg: 'Ballot recorded outside of a voting period.',\n      id: 'proto.alpha.unexpected_ballot'\n    },\n    {\n      msg: 'Level must be non-negative.',\n      id: 'proto.alpha.unexpected_level'\n    },\n    {\n      msg: 'Nonce length is incorrect.',\n      id: 'proto.alpha.unexpected_nonce_length'\n    },\n    {\n      msg: 'Proposal recorded outside of a proposal period.',\n      id: 'proto.alpha.unexpected_proposal'\n    },\n    {\n      msg: 'Block locator is invalid.',\n      id: 'node.bootstrap_pipeline.invalid_locator'\n    },\n    {\n      msg: 'Block locator is too short.',\n      id: 'node.bootstrap_pipeline.too_short_locator'\n    },\n    {\n      msg: 'IO error: connection with a peer is closed.',\n      id: 'node.p2p_io_scheduler.connection_closed'\n    },\n    {\n      msg: 'Fail to connect with a peer: a connection is already established.',\n      id: 'node.p2p_pool.connected'\n    },\n    {\n      msg: 'Connection was refused.',\n      id: 'node.p2p_pool.connection_refused'\n    },\n    {\n      msg: 'The peer identity you tried to connect is banned.',\n      id: 'node.p2p_pool.peer_banned'\n    },\n    {\n      msg: 'Fail to connect with a peer: a connection is already pending.',\n      id: 'node.p2p_pool.pending_connection'\n    },\n    {\n      msg: 'The address you tried to connect is banned.',\n      id: 'node.p2p_pool.point_banned'\n    },\n    {\n      msg: 'Node is in private mode.',\n      id: 'node.p2p_pool.private_mode'\n    },\n    {\n      msg: 'Connection to peer was rejected by us.',\n      id: 'node.p2p_pool.rejected'\n    },\n    {\n      msg: 'Too many connections.',\n      id: 'node.p2p_pool.too_many_connections'\n    },\n    {\n      msg: 'An error occurred while deciphering.',\n      id: 'node.p2p_socket.decipher_error'\n    },\n    {\n      msg: 'An error occurred while decoding.',\n      id: 'node.p2p_socket.decoding_error'\n    },\n    {\n      msg: 'An error occurred while encoding.',\n      id: 'node.p2p_socket.encoding_error'\n    },\n    {\n      msg: 'Rejected peer connection: invalid authentication.',\n      id: 'node.p2p_socket.invalid_auth'\n    },\n    {\n      msg: 'Size of chunks is not valid.',\n      id: 'node.p2p_socket.invalid_chunks_size'\n    },\n    {\n      msg: 'The size of the message to be written is invalid.',\n      id: 'node.p2p_socket.invalid_message_size'\n    },\n    {\n      msg: 'Remote peer is actually yourself.',\n      id: 'node.p2p_socket.myself'\n    },\n    {\n      msg: 'Remote peer cannot be authenticated: not enough proof of work.',\n      id: 'node.p2p_socket.not_enough_proof_of_work'\n    },\n    {\n      msg: 'Rejected peer connection: The peer rejected the socket connection by Nack with a list of alternative peers.',\n      id: 'node.p2p_socket.rejected_by_nack'\n    },\n    {\n      msg: 'Rejected peer connection: rejected socket connection as we have no common network protocol with the peer.',\n      id: 'node.p2p_socket.rejected_no_common_protocol'\n    },\n    {\n      msg: 'Rejected peer connection: rejected socket connection.',\n      id: 'node.p2p_socket.rejected_socket_connection'\n    },\n    {\n      msg: 'Rejecting peer connection with motive.',\n      id: 'node.p2p_socket.rejecting_incoming'\n    },\n    {\n      msg: \"Known invalid block found in the peer's chain\",\n      id: 'node.peer_validator.known_invalid'\n    },\n    {\n      msg: \"Unknown ancestor block found in the peer's chain\",\n      id: 'node.peer_validator.unknown_ancestor'\n    },\n    {\n      msg: 'The block was annotated with a time too far in the future.',\n      id: 'node.prevalidation.future_block_header'\n    },\n    {\n      msg: 'The operation size is bigger than allowed.',\n      id: 'node.prevalidation.oversized_operation'\n    },\n    {\n      msg: 'Raised when an operation has not been parsed correctly during prevalidation.',\n      id: 'node.prevalidation.parse_error'\n    },\n    {\n      msg: 'The prevalidation context is full.',\n      id: 'node.prevalidation.too_many_operations'\n    },\n    {\n      msg: 'Invalid protocol.',\n      id: 'node.protocol_validator.invalid_protocol'\n    },\n    {\n      msg: 'The data directory could not be read. This could be because it was generated with an old version of the tezos-node program. Deleting and regenerating this directory may fix the problem.',\n      id: 'node.state.bad_data_dir'\n    },\n    {\n      msg: 'When commiting the context of a block, the announced context hash was not the one computed at commit time.',\n      id: 'node.state.block.inconsistent_context_hash'\n    },\n    {\n      msg: 'The invalid block to be unmarked was not actually invalid.',\n      id: 'node.state.block_not_invalid'\n    },\n    {\n      msg: 'The chain identifier could not be found in the chain identifiers table.',\n      id: 'node.state.unknown_chain'\n    },\n    {\n      msg: 'The block belongs to a branch that is not compatible with the current checkpoint.',\n      id: 'node.validator.checkpoint_error'\n    },\n    {\n      msg: 'Attempted validation of a block from an inactive chain.',\n      id: 'node.validator.inactive_chain'\n    },\n    {\n      msg: 'Incorrect history mode switch.',\n      id: 'node_config_file.incorrect_history_mode_switch'\n    },\n    {\n      msg: 'Missing key in store',\n      id: 'raw_store.unknown'\n    },\n    {\n      msg: 'The provided list of operations is inconsistent with the block header.',\n      id: 'validator.inconsistent_operations_hash'\n    },\n    {\n      msg: 'Invalid block.',\n      id: 'validator.invalid_block'\n    },\n    {\n      msg: 'Missing test protocol when forking the test chain',\n      id: 'validator.missing_test_protocol'\n    },\n    {\n      msg: 'The protocol required for validating a block is missing.',\n      id: 'validator.unavailable_protocol'\n    },\n    {\n      msg: 'Failed to validate block using exteranl validation process.',\n      id: 'validator.validation_process_failed'\n    },\n    {\n      msg: 'An operation on a worker could not complete before it was shut down.',\n      id: 'worker.closed'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an annotation exceeded the maximum length (255).',\n      id: 'micheline.parse_error.annotation_exceeds_max_length'\n    },\n    {\n      msg: 'Tried to interpret an empty piece or Micheline source as a single expression.',\n      id: 'micheline.parse_error.empty_expression'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an extra semi colon or parenthesis was encountered.',\n      id: 'micheline.parse_error.extra_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a sequence of bytes that is not valid UTF-8 was encountered.',\n      id: 'micheline.parse_error.invalid_utf8_sequence'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an expression was not aligned with its siblings of the same mother application or sequence.',\n      id: 'micheline.parse_error.misaligned_node'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a number was not visually separated from its follower token, leading to misreadability.',\n      id: 'micheline.parse_error.missing_break_after_number'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, the length of a byte sequence (0x...) was not a multiple of two, leaving a trailing half byte.',\n      id: 'micheline.parse_error.odd_lengthed_bytes'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a parenthesis or a brace was unclosed.',\n      id: 'micheline.parse_error.unclosed_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected escape sequence was encountered in a string.',\n      id: 'micheline.parse_error.undefined_escape_sequence'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected character was encountered.',\n      id: 'micheline.parse_error.unexpected_character'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an unexpected token was encountered.',\n      id: 'micheline.parse_error.unexpected_token'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a commentX was not terminated.',\n      id: 'micheline.parse_error.unterminated_comment'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, an integer was not terminated.',\n      id: 'micheline.parse_error.unterminated_integer'\n    },\n    {\n      msg: 'While parsing a piece of Micheline source, a string was not terminated.',\n      id: 'micheline.parse_error.unterminated_string'\n    },\n    {\n      msg: 'Wrong hash given',\n      id: 'Bad_hash'\n    },\n    {\n      msg: 'The context checkout failed using a given hash',\n      id: 'Block_validator_process.failed_to_checkout_context'\n    },\n    {\n      msg: 'Cannot reconstruct',\n      id: 'CannotReconstruct'\n    },\n    {\n      msg: 'Cannot find context corresponding to hash',\n      id: 'Context_not_found'\n    },\n    {\n      msg: 'The imported block is not the expected one.',\n      id: 'InconsistentImportedBlock'\n    },\n    {\n      msg: 'The operations given do not match their hashes.',\n      id: 'InconsistentOperationHashes'\n    },\n    {\n      msg: 'The data provided by the snapshot is inconsistent',\n      id: 'Inconsistent_snapshot_data'\n    },\n    {\n      msg: 'Error while opening snapshot file',\n      id: 'Inconsistent_snapshot_file'\n    },\n    {\n      msg: 'Invalid specification of block to import',\n      id: 'InvalidBlockSpecification'\n    },\n    {\n      msg: 'The version of the snapshot to import is not valid',\n      id: 'Invalid_snapshot_version'\n    },\n    {\n      msg: 'Mandatory data missing while reaching end of snapshot file.',\n      id: 'Missing_snapshot_data'\n    },\n    {\n      msg: 'RPC lookup failed. Block has been pruned and requested data deleted.',\n      id: 'RPC_context.Gone'\n    },\n    {\n      msg: 'RPC lookup failed. No RPC exists at the URL or the RPC tried to access non-existent data.',\n      id: 'RPC_context.Not_found'\n    },\n    {\n      msg: 'Internal error while restoring the context',\n      id: 'Restore_context_failure'\n    },\n    {\n      msg: 'The imported snapshot is malformed.',\n      id: 'SnapshotImportFailure'\n    },\n    {\n      msg: 'Failed to read file',\n      id: 'System_read_error'\n    },\n    {\n      msg: 'The validator failed because of a system error',\n      id: 'Validator_process.system_error_while_validating'\n    },\n    {\n      msg: 'Cannot write in file for context dump',\n      id: 'Writing_error'\n    },\n    {\n      msg: 'The block to export in the snapshot is not valid.',\n      id: 'WrongBlockExport'\n    },\n    {\n      msg: 'Wrong protocol hash',\n      id: 'WrongProtocolHash'\n    },\n    {\n      msg: 'Snapshot exports is not compatible with the current configuration.',\n      id: 'WrongSnapshotExport'\n    },\n    {\n      msg: 'A fatal assertion failed',\n      id: 'assertion'\n    },\n    {\n      msg: 'A promise was unexpectedly canceled',\n      id: 'canceled'\n    },\n    {\n      msg: 'A key has been provided with an invalid uri.',\n      id: 'cli.key.invalid_uri'\n    },\n    {\n      msg: 'The signer produced an invalid signature',\n      id: 'cli.signature_mismatch'\n    },\n    {\n      msg: 'A key has been provided with an unregistered scheme (no corresponding plugin)',\n      id: 'cli.unregistered_key_scheme'\n    },\n    {\n      msg: 'The byte sequence references a multisig counter that does not match the one currently stored in the given multisig contract',\n      id: 'client.alpha.Bad deserialized counter'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an expression that does not correspond to a known multisig action',\n      id: 'client.alpha.actionDeserialisation'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an action for another multisig contract',\n      id: 'client.alpha.badDeserializedContract'\n    },\n    {\n      msg: 'invalid duration in -endorsement-delay',\n      id: 'client.alpha.badEndorsementDelayArg'\n    },\n    {\n      msg: 'invalid priority in -max-priority',\n      id: 'client.alpha.badMaxPriorityArg'\n    },\n    {\n      msg: 'invalid duration in -max-waiting-time',\n      id: 'client.alpha.badMaxWaitingTimeArg'\n    },\n    {\n      msg: 'invalid fee threshold in -fee-threshold',\n      id: 'client.alpha.badMinimalFeesArg'\n    },\n    {\n      msg: 'invalid number of levels in -preserved-levels',\n      id: 'client.alpha.badPreservedLevelsArg'\n    },\n    {\n      msg: 'Invalid ꜩ notation in parameter.',\n      id: 'client.alpha.badTezArg'\n    },\n    {\n      msg: 'When trying to deserialise an action from a sequence of bytes, we got an error',\n      id: 'client.alpha.bytesDeserialisation'\n    },\n    {\n      msg: 'A multisig command has referenced a scriptless smart contract instead of a multisig smart contract.',\n      id: 'client.alpha.contractHasNoScript'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract without storage instead of a multisig smart contract.',\n      id: 'client.alpha.contractHasNoStorage'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract whose storage is of a different shape than the expected one.',\n      id: 'client.alpha.contractHasUnexpectedStorage'\n    },\n    {\n      msg: 'Attempt to get the code of a contract failed because it has nocode. No scriptless contract should remain.',\n      id: 'client.alpha.contractWithoutCode'\n    },\n    {\n      msg: 'A signature was given for a multisig contract that matched none of the public keys of the contract signers',\n      id: 'client.alpha.invalidSignature'\n    },\n    {\n      msg: 'A wrong number of arguments was provided to a macro',\n      id: 'client.alpha.michelson.macros.bas_arity'\n    },\n    {\n      msg: 'An macro expects a sequence, but a sequence was not provided',\n      id: 'client.alpha.michelson.macros.sequence_expected'\n    },\n    {\n      msg: 'A macro had an annotation, but no annotation was permitted on this macro.',\n      id: 'client.alpha.michelson.macros.unexpected_annotation'\n    },\n    {\n      msg: 'A multisig threshold should be a positive number',\n      id: 'client.alpha.nonPositiveThreshold'\n    },\n    {\n      msg: 'A multisig command has referenced a smart contract whose script is not one of the known multisig contract scripts.',\n      id: 'client.alpha.notASupportedMultisigContract'\n    },\n    {\n      msg: 'To run an action on a multisig contract, you should provide at least as many signatures as indicated by the threshold stored in the multisig contract.',\n      id: 'client.alpha.notEnoughSignatures'\n    },\n    {\n      msg: 'The given threshold is higher than the number of keys, this would lead to a frozen multisig contract',\n      id: 'client.alpha.thresholdTooHigh'\n    },\n    {\n      msg: 'Cannot recover from a corrupted context.',\n      id: 'context.non_recoverable_context'\n    },\n    {\n      msg: '<gf>context_dump.read.cannot_open'\n    },\n    {\n      msg: '<gf>context_dump.read.suspicious'\n    },\n    {\n      msg: '<gf>context_dump.write.cannot_open'\n    },\n    {\n      msg: 'Exception safely wrapped in an error',\n      id: 'failure'\n    },\n    {\n      msg: 'Activation of an Internal Event SINK with an URI failed',\n      id: 'internal-event-activation-error'\n    },\n    {\n      msg: 'The raw context extraction depth argument must be positive.',\n      id: 'raw_context.invalid_depth'\n    },\n    {\n      msg: 'No protocol was registered with the requested hash.',\n      id: 'registered_protocol.unregistered_protocol'\n    },\n    {\n      msg: 'The fetch of a Operation_hash has been canceled',\n      id: 'requester.Operation_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a Operation_hash has timed out',\n      id: 'requester.Operation_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some Operation_hash is missing from the requester',\n      id: 'requester.Operation_hash.missing'\n    },\n    {\n      msg: 'The fetch of a Protocol_hash has been canceled',\n      id: 'requester.Protocol_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a Protocol_hash has timed out',\n      id: 'requester.Protocol_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some Protocol_hash is missing from the requester',\n      id: 'requester.Protocol_hash.missing'\n    },\n    {\n      msg: 'The fetch of a block_hash has been canceled',\n      id: 'requester.block_hash.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a block_hash has timed out',\n      id: 'requester.block_hash.fetch_timeout'\n    },\n    {\n      msg: 'Some block_hash is missing from the requester',\n      id: 'requester.block_hash.missing'\n    },\n    {\n      msg: 'The fetch of a operation_hashes has been canceled',\n      id: 'requester.operation_hashes.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a operation_hashes has timed out',\n      id: 'requester.operation_hashes.fetch_timeout'\n    },\n    {\n      msg: 'Some operation_hashes is missing from the requester',\n      id: 'requester.operation_hashes.missing'\n    },\n    {\n      msg: 'The fetch of a operations has been canceled',\n      id: 'requester.operations.fetch_canceled'\n    },\n    {\n      msg: 'The fetch of a operations has timed out',\n      id: 'requester.operations.fetch_timeout'\n    },\n    {\n      msg: 'Some operations is missing from the requester',\n      id: 'requester.operations.missing'\n    },\n    {\n      msg: 'Error while decoding a remote signer message',\n      id: 'signer.decoding_error'\n    },\n    {\n      msg: 'Error while encoding a remote signer message',\n      id: 'signer.encoding_error'\n    },\n    {\n      msg: 'Block not found',\n      id: 'state.block.contents_not_found'\n    },\n    {\n      msg: 'Block not found',\n      id: 'state.block.not_found'\n    },\n    {\n      msg: 'Unix System_info failure',\n      id: 'unix.system_info'\n    },\n    {\n      msg: 'An unhandled unix exception',\n      id: 'unix_error'\n    },\n    {\n      msg: 'Canceled',\n      id: 'utils.Canceled'\n    },\n    {\n      msg: 'Timeout',\n      id: 'utils.Timeout'\n    },\n    {\n      msg: 'Fee exceeded hard cap!',\n      id: 'TooHighFee'\n    },\n    {\n      msg: 'Node error: Timeout has occurred! Please try again later.',\n      id: 'Timeout has occurred'\n    }\n  ];\n  transform(errorId: string, withObj?: any, location?: number): any {\n    const protocol = errorId.match(/[0-9]{3}-P\\w{7}/g);\n    if (protocol && protocol[0]) {\n      errorId = errorId.replace(protocol[0], 'alpha');\n    }\n    let errorMessage = '';\n    const index = this.ERROR_LIST.findIndex((s) => s.id === errorId);\n    console.log('errorId', errorId);\n    if (errorId === 'proto.alpha.michelson_v1.script_rejected' && withObj) {\n      if (withObj.string) {\n        errorMessage = `${this.ERROR_LIST[index].msg} | ${withObj.string}`;\n      } else if (withObj?.int === '4' && location === 206) {\n        errorMessage = 'Tokens deposited is greater than maximum tokens deposited. Please retry in a while.';\n      } else {\n        let jsonWith = JSON.stringify(withObj);\n        if (jsonWith.length > 200) {\n          jsonWith = '[...]';\n          console.error('FAILWITH', withObj);\n        }\n        errorMessage = `${this.ERROR_LIST[index].msg} ${jsonWith}`;\n      }\n      console.log(withObj);\n    } else if (index !== -1) {\n      errorMessage = this.ERROR_LIST[index].msg;\n    } else {\n      if (errorId.indexOf('branch refused (Error:') !== -1 && errorId.indexOf('already used for contract') !== -1) {\n        errorMessage =\n          'Counter error: Another operation in mempool is blocking your operation. Wait for it to be included in a block or pruned from mempool (up to 60 minutes).';\n      } else {\n        if (errorId?.startsWith('Failed to parse the request body')) {\n          const lines = errorId.split('At /kind, unexpected string instead of ');\n          for (let line of lines) {\n            if (line.startsWith('reveal\\n  Unhandled error')) {\n              return line.replace('reveal\\n  ', '');\n            }\n          }\n        }\n        errorMessage = 'Unrecognized error: ' + errorId;\n      }\n    }\n    return errorMessage;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeComma'\n})\nexport class RemoveCommaPipe implements PipeTransform {\n  transform(value: string): string {\n    if (value !== undefined && value !== null) {\n      return value.replace(/,/g, '');\n    } else {\n      return '';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core'; // Multiple instances created ?\nimport * as timediff from 'timediff';\n\n@Pipe({\n  name: 'timeAgo',\n  pure: true // if false pipe will be called at each changes - necessary for translation - is there a better way?\n})\nexport class TimeAgoPipe implements PipeTransform {\n  constructor(private translate: TranslateService) {}\n  transform(timestamp: number): string {\n    const now = this.translate.instant('TIMEAGOPIPE.JUSTNOW');\n    const sec = this.translate.instant('TIMEAGOPIPE.SEC');\n    const secs = sec;\n    const mn = this.translate.instant('TIMEAGOPIPE.MINUTE');\n    const mns = mn;\n    const hr = this.translate.instant('TIMEAGOPIPE.HOUR');\n    const hrs = this.translate.instant('TIMEAGOPIPE.HOURS');\n    const day = this.translate.instant('TIMEAGOPIPE.DAY');\n    const days = this.translate.instant('TIMEAGOPIPE.DAYS');\n    const month = this.translate.instant('TIMEAGOPIPE.MONTH');\n    const months = this.translate.instant('TIMEAGOPIPE.MONTHS');\n    const year = this.translate.instant('TIMEAGOPIPE.YEAR');\n    const years = this.translate.instant('TIMEAGOPIPE.YEARS');\n\n    const timeNow = new Date().getTime();\n    const diff = timediff(timestamp, timeNow, 'YMDHmS');\n\n    const keys = Object.keys(diff);\n    let count = 0;\n    let output = '';\n\n    for (const key of keys) {\n      if (diff[key] || count) {\n        if (count) {\n          output = output + ' ';\n        }\n        switch (key) {\n          case 'years':\n            output = `${diff[key]}${diff[key] === 1 ? year : years}`;\n            break;\n          case 'months':\n            output = output + `${diff[key]}${diff[key] === 1 ? month : months}`;\n            break;\n          case 'days':\n            output = output + `${diff[key]}${diff[key] === 1 ? day : days}`;\n            break;\n          case 'hours':\n            output = output + `${diff[key]}${diff[key] === 1 ? hr : hrs}`;\n            break;\n          case 'minutes':\n            output = output + `${diff[key]}${diff[key] === 1 ? mn : mns}`;\n            break;\n          case 'seconds':\n            if (!diff.minutes && diff.seconds < 60) {\n              output = now;\n            } else if (diff.minutes < 2) {\n              output = output + `${diff[key]}${diff[key] === 1 ? sec : secs}`;\n            }\n            break;\n        }\n        if (count++) {\n          break;\n        }\n      }\n    }\n    return output;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { of, Observable, from as fromPromise } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { delay, takeUntil } from 'rxjs/operators';\nimport { Activity, Account, OpStatus } from '../wallet/wallet';\nimport { MessageService } from '../message/message.service';\nimport { LookupService } from '../lookup/lookup.service';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { TokenService } from '../token/token.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { SubjectService } from '../subject/subject.service';\n\n@Injectable()\nexport class ActivityService {\n  readonly maxTransactions = 10;\n  public tokenBalanceUpdated = new BehaviorSubject(null);\n  constructor(\n    private walletService: WalletService,\n    private messageService: MessageService,\n    private lookupService: LookupService,\n    private indexerService: IndexerService,\n    private tokenService: TokenService,\n    private subjectService: SubjectService\n  ) {}\n  updateTransactions(pkh): Observable<any> {\n    try {\n      const account = this.walletService.wallet.getAccount(pkh);\n      return this.getTransactonsCounter(account).pipe(\n        flatMap((ans: any) => {\n          return of(ans);\n        })\n      );\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  getTransactonsCounter(account: Account): Observable<any> {\n    const knownTokenIds: string[] = this.tokenService.knownTokenIds();\n    return fromPromise(this.indexerService.accountInfo(account.address, knownTokenIds)).pipe(\n      flatMap((data) => {\n        const counter = data.counter;\n        const unknownTokenIds = data.unknownTokenIds ? data.unknownTokenIds : [];\n        this.tokenService.searchAllMetadata(unknownTokenIds);\n        this.tokenService.recheckMetadata(data?.tokens);\n        if (account.state !== counter) {\n          if (data.tokens) {\n            this.updateTokenBalances(account, data.tokens);\n          } else {\n            this.updateTokenBalances(account, []);\n          }\n          return this.getAllTransactions(account, counter);\n        } else {\n          if (!account.state) {\n            if (!account.activities || !account.tokens) {\n              if (!account.activities) {\n                account.activities = [];\n              }\n              if (!account.tokens) {\n                account.tokens = [];\n              }\n              this.updateTokenBalances(account, []);\n              this.walletService.storeWallet();\n            }\n          }\n          return of({\n            upToDate: true,\n            balance: data?.balance ? data.balance : 0\n          });\n        }\n      })\n    );\n  }\n  async updateTokenBalances(account, tokens) {\n    if (Array.isArray(tokens)) {\n      const idsWithBalance: string[] = [];\n      if (!tokens.length) {\n        account.updateTokenBalance('', '');\n      } else {\n        for (const token of tokens) {\n          idsWithBalance.push(token.tokenId);\n          account.updateTokenBalance(token.tokenId, token.balance.toString());\n        }\n        const currentTokenIds = account.getTokenBalances().map((token) => {\n          return token.tokenId;\n        });\n        for (const tokenId of currentTokenIds) {\n          if (!idsWithBalance.includes(tokenId)) {\n            account.updateTokenBalance(tokenId, '0');\n          }\n        }\n      }\n      this.tokenBalanceUpdated.next(true);\n      this.walletService.storeWallet();\n    }\n  }\n  getAllTransactions(account: Account, counter: string): Observable<any> {\n    const knownTokenIds: string[] = this.tokenService.knownTokenIds();\n    return fromPromise(this.indexerService.getOperations(account.address, knownTokenIds, this.walletService.wallet)).pipe(\n      flatMap((resp) => {\n        const operations = resp.operations;\n        this.tokenService.searchAllMetadata(resp.unknownTokenIds);\n        if (Array.isArray(operations)) {\n          const oldActivities = account.activities;\n          const unconfirmedOps = [];\n          if (oldActivities && oldActivities.length) {\n            for (let op of oldActivities) {\n              if (op.status === OpStatus.UNCONFIRMED || op.status === OpStatus.HALF_CONFIRMED) {\n                let save = true;\n                for (const opNew of operations) {\n                  if (opNew.hash === op.hash) {\n                    save = false;\n                    break;\n                  }\n                }\n                if (save) {\n                  unconfirmedOps.push(op);\n                }\n              }\n            }\n          }\n          account.activities = unconfirmedOps.concat(operations);\n          const oldState = account.state;\n          account.state = counter;\n          this.walletService.storeWallet();\n          if (oldState !== '') {\n            // Exclude inital loading\n            this.promptNewActivities(account, oldActivities, operations);\n          }\n          for (const activity of operations) {\n            const counterParty = this.getCounterparty(activity, account, false);\n            this.lookupService.check(counterParty);\n          }\n        }\n        return of({\n          upToDate: false\n        });\n      })\n    );\n  }\n  promptNewActivities(account: Account, oldActivities: Activity[], newActivities: Activity[]) {\n    for (const activity of newActivities) {\n      const index = oldActivities.findIndex((a) => a.hash === activity.hash && a.status === OpStatus.CONFIRMED);\n      if (index === -1) {\n        const now = new Date().getTime();\n        const timeDiff = now - (activity?.timestamp ? activity.timestamp : now);\n        if (timeDiff < 1800000) {\n          // 1/2 hour\n          if (activity.hash) {\n            setTimeout(() => {\n              this.subjectService.confirmedOp.next(activity.hash);\n            }, 0);\n          }\n          if (activity.type === 'transaction') {\n            if (account.address === activity.source.address) {\n              this.messageService.addSuccess(account.shortAddress() + ': Sent ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString()));\n            }\n            if (account.address === activity.destination.address) {\n              const ref = activity.tokenId ? Date.now().toString() + activity.tokenId : '';\n              this.messageService.addSuccess(\n                (account.shortAddress() + ': Received ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString())).replace(\n                  '[Unknown token]',\n                  'Token'\n                ),\n                undefined,\n                ref\n              );\n              if (activity.tokenId && this.tokenService.getAsset(activity.tokenId) === null) {\n                // unknown token\n                this.subjectService.metadataUpdated.pipe(takeUntil(of(true).pipe(delay(8000)))).subscribe((token: any) => {\n                  // unsub after 8s\n                  if (token?.contractAddress && token.id !== undefined) {\n                    const tokenId = token.contractAddress + ':' + token.id.toString();\n                    if (activity.tokenId === tokenId) {\n                      this.messageService.modify(\n                        account.shortAddress() + ': Received ' + this.tokenService.formatAmount(activity.tokenId, activity.amount.toString()),\n                        ref\n                      );\n                    }\n                  }\n                });\n              }\n            }\n          } else if (activity.type === 'delegation') {\n            this.messageService.addSuccess(account.shortAddress() + ': Delegate updated');\n          } else if (activity.type === 'origination') {\n            this.messageService.addSuccess(account.shortAddress() + ': Contract originated');\n          } else if (activity.type === 'activation') {\n            this.messageService.addSuccess(account.shortAddress() + ': Account activated');\n          }\n          const counter = this.getCounterparty(activity, account, false);\n          if (counter?.address) {\n            this.lookupService.check(counter.address, true);\n          }\n        }\n      }\n    }\n  }\n  getCounterparty(transaction: Activity, account: Account, withLookup = true): any {\n    let counterParty = { address: '' };\n    if (transaction.type === 'delegation') {\n      if (transaction.destination) {\n        counterParty = transaction.destination;\n      } else {\n        counterParty = { address: '' }; // User has undelegated\n      }\n    } else if (transaction.type === 'transaction') {\n      if (account.address === transaction.source.address) {\n        counterParty = transaction.destination; // to\n      } else {\n        counterParty = transaction.source; // from\n      }\n    } else if (transaction.type === 'origination') {\n      if (account.address === transaction.source.address) {\n        counterParty = transaction.destination ? transaction.destination : { address: '' };\n      } else {\n        counterParty = transaction.source;\n      }\n    } else {\n      counterParty = { address: '' };\n    }\n    if (withLookup) {\n      return this.lookupService.resolve(counterParty);\n    } else {\n      return counterParty;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { TzrateService } from '../tzrate/tzrate.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account } from '../wallet/wallet';\n\n@Injectable()\nexport class BalanceService {\n  constructor(private walletService: WalletService, private tzrateService: TzrateService, private operationService: OperationService) {}\n\n  getBalanceAll() {\n    for (const account of this.walletService.wallet.getAccounts()) {\n      this.getAccountBalance(account);\n    }\n  }\n  getAccountBalance(account: Account) {\n    console.log('for ' + account.address);\n    this.operationService.getBalance(account.address).subscribe((ans: any) => {\n      if (ans.success) {\n        this.updateAccountBalance(account, Number(ans.payload.balance));\n      } else {\n        console.log('Balance Error: ' + JSON.stringify(ans.payload.msg));\n      }\n    });\n  }\n  updateAccountBalance(account: Account, newBalance: number) {\n    if (account && (account.balanceXTZ === null || account.balanceXTZ === undefined || newBalance !== account.balanceXTZ)) {\n      account.balanceXTZ = newBalance;\n      this.updateTotalBalance();\n      this.tzrateService.updateFiatBalances();\n      this.walletService.storeWallet();\n    }\n  }\n  updateTotalBalance() {\n    let balance = 0;\n    let change = false;\n    for (const account of this.walletService.wallet.getAccounts()) {\n      if (!(account.balanceXTZ === null || account.balanceXTZ === undefined)) {\n        balance = balance + Number(account.balanceXTZ);\n        change = true;\n      }\n    }\n    if (change) {\n      this.walletService.wallet.totalBalanceXTZ = balance;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MessageService } from '../../services/message/message.service';\nimport {\n  WalletClient,\n  BeaconMessageType,\n  PermissionResponseInput,\n  SignPayloadResponseInput,\n  P2PPairingRequest,\n  BeaconErrorType,\n  BEACON_VERSION,\n  ErrorResponse,\n  getSenderId,\n  ExtendedP2PPairingResponse\n} from '@airgap/beacon-sdk';\nimport { Asset } from '../token/token.service';\nimport { TzktService } from '../indexer/tzkt/tzkt.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeaconService {\n  client: WalletClient = null;\n  peers = [];\n  permissions = [];\n  constructor(private messageService: MessageService, private tzktService: TzktService) {}\n  preNotifyPairing(pairInfoJson: string) {\n    const pairInfo: P2PPairingRequest = JSON.parse(pairInfoJson);\n    if (this.isNewPairingRequest(pairInfo)) {\n      this.messageService.addBeaconWait(`Pairing with ${pairInfo.name}. Please wait!`);\n    }\n  }\n  isNewPairingRequest(pairInfo: P2PPairingRequest): boolean {\n    const peersJson = localStorage.getItem('beacon:communication-peers-wallet');\n    let newPublicKey = true;\n    if (peersJson) {\n      const peers = JSON.parse(peersJson);\n      if (peers && peers.length > 0 && pairInfo.publicKey) {\n        for (const peer of peers) {\n          if (peer.publicKey && peer.publicKey === pairInfo.publicKey) {\n            newPublicKey = false;\n            console.log('Existing public key found!');\n            break;\n          }\n        }\n      }\n    }\n    return newPublicKey;\n  }\n  async addPeer(pairInfoJson: string, force = true) {\n    const pairInfo = JSON.parse(pairInfoJson);\n    console.log('PairInfo', pairInfo);\n    await this.client.addPeer(pairInfo, force);\n    this.syncBeaconState();\n    this.messageService.removeBeaconMsg();\n    if (pairInfo.icon && pairInfo.icon.startsWith('https://')) {\n      this.cacheIcon(pairInfo);\n    }\n  }\n  async cacheIcon(pairInfo: any) {\n    const key = 'beacon:communication-peers-wallet';\n    const asset: Asset = pairInfo.icon;\n    const json = localStorage.getItem(key);\n    if (!json || !asset) {\n      return;\n    }\n    const peers = JSON.parse(json);\n    if (peers) {\n      for (const peer of peers) {\n        if (peer.icon === pairInfo.icon) {\n          peer.cachedIcon = asset;\n          break;\n        }\n      }\n      localStorage.setItem(key, JSON.stringify(peers));\n      this.syncBeaconState();\n    }\n  }\n  async syncBeaconState() {\n    this.peers = await this.getPeers();\n    this.permissions = await this.getPermissions();\n  }\n  async removePeers() {\n    while (this.peers.length > 0) {\n      await this.removePeer(0);\n    }\n  }\n  async removePeer(index: number) {\n    const pairInfo: P2PPairingRequest = this.peers[index];\n    const senderId = await getSenderId(pairInfo.publicKey);\n    const peerResponse: ExtendedP2PPairingResponse = {\n      ...pairInfo,\n      type: 'p2p-pairing-response',\n      senderId\n    };\n    await this.client.removePeer(peerResponse);\n    await this.client.removeAppMetadata(senderId);\n    this.syncBeaconState();\n  }\n  async removePermissions() {\n    await this.client.removeAllPermissions();\n    this.syncBeaconState();\n  }\n  async removePermission(index: number) {\n    await this.client.removePermission(this.permissions[index].accountIdentifier);\n    this.syncBeaconState();\n  }\n  async getPeers(): Promise<any> {\n    return await this.client.getPeers();\n  }\n  async getPermissions(): Promise<any> {\n    return await this.client.getPermissions();\n  }\n  async getAppMetadataList(): Promise<any> {\n    return await this.client.getAppMetadataList();\n  }\n  async rejectOnPermission(message: any) {\n    await this.respondWithError(BeaconErrorType.NOT_GRANTED_ERROR, message);\n  }\n  async rejectOnNetwork(message: any) {\n    await this.respondWithError(BeaconErrorType.NETWORK_NOT_SUPPORTED, message);\n  }\n  async rejectOnUserAbort(message: any) {\n    await this.respondWithError(BeaconErrorType.ABORTED_ERROR, message);\n  }\n  async rejectOnSourceAddress(message: any) {\n    await this.respondWithError(BeaconErrorType.NO_PRIVATE_KEY_FOUND_ERROR, message);\n  }\n  async rejectOnTooManyOps(message: any) {\n    await this.respondWithError(BeaconErrorType.TOO_MANY_OPERATIONS, message);\n  }\n  async rejectOnUnknown(message: any) {\n    await this.respondWithError(BeaconErrorType.UNKNOWN_ERROR, message);\n  }\n  async rejectOnParameters(message: any) {\n    await this.respondWithError(BeaconErrorType.PARAMETERS_INVALID_ERROR, message);\n  }\n  async rejectOnBroadcastError(message: any) {\n    await this.respondWithError(BeaconErrorType.BROADCAST_ERROR, message);\n  }\n  async respondWithError(errorType: BeaconErrorType, requestMessage: any) {\n    if (requestMessage) {\n      const response: ErrorResponse = {\n        type: BeaconMessageType.Error,\n        errorType,\n        version: BEACON_VERSION,\n        id: requestMessage.id,\n        senderId: await this.client.beaconId\n      };\n      await this.client.respond(response);\n    }\n  }\n  async approvePermissionRequest(message: any, publicKey: string) {\n    const response: PermissionResponseInput = {\n      type: BeaconMessageType.PermissionResponse,\n      network: message.network,\n      scopes: message.scopes,\n      id: message.id,\n      publicKey: publicKey\n    };\n    await this.client.respond(response);\n  }\n  async approveSignPayloadRequest(message: any, signature: string) {\n    const response: SignPayloadResponseInput = {\n      type: BeaconMessageType.SignPayloadResponse,\n      id: message.id,\n      signingType: message.signingType,\n      signature\n    };\n    await this.client.respond(response);\n  }\n  async responseSync() {\n    localStorage.setItem('beacon:request-response', 'true');\n    localStorage.removeItem('beacon:request-response');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ChartSeries } from '../../../app/components/ui/chart/chart.component';\nimport { SwapLiquidityService } from '../swap-liquidity/swap-liquidity.service';\n\nexport enum ChartTitle {\n  XTZtzBTC = 'XTZ/tzBTC',\n  tzBTCXTZ = 'tzBTC/XTZ',\n  totalValueLocked = 'Total Value Locked'\n}\n\nlet width, height, gradient;\nfunction getGradientBackground(ctx, chartArea) {\n  const style = getComputedStyle(document.body);\n  const theme = style.getPropertyValue('--theme').replace(/[ \\\"]/g, '');\n  const chartWidth = chartArea.right - chartArea.left;\n  const chartHeight = chartArea.bottom - chartArea.top;\n  if (gradient === null || width !== chartWidth || height !== chartHeight) {\n    width = chartWidth;\n    height = chartHeight;\n    gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n    if (theme === 'dark') {\n      gradient.addColorStop(1, '#383d7d');\n      gradient.addColorStop(0.5, '#2e304f');\n      gradient.addColorStop(0, '#2a2c3f');\n    } else {\n      gradient.addColorStop(1, '#c2c5fc');\n      gradient.addColorStop(0.5, '#e0e1fb');\n      gradient.addColorStop(0, '#e8eafb');\n    }\n  }\n\n  return gradient;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ChartService {\n  ChartTitle = ChartTitle;\n  stats = null;\n  constructor(private swapLiquidityService: SwapLiquidityService) {}\n\n  async fetchLBGraphData(series: ChartSeries = ChartSeries.day): Promise<{ labels: any[]; datasets: any[] }> {\n    let tzbtc = await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series);\n    let stats = (this.stats = !this.stats ? await this.fetchHistoricalStatsByContract(this.swapLiquidityService.lqdContract, series) : this.stats);\n    let interval = 1000 * 60 * 60 * 24;\n    const a = [];\n    const b = [];\n    const d = [];\n    const labels = [];\n    let now = new Date().getTime();\n    if (series === ChartSeries.month) {\n      interval = 1000 * 60 * 60 * 24;\n      tzbtc = tzbtc.slice(0, 32);\n      stats = stats.slice(0, 32);\n    } else if (series === ChartSeries.day) {\n      interval = 1000 * 60 * 60;\n      tzbtc = tzbtc.slice(0, 25);\n      stats = stats.slice(0, 25);\n    } else if (series === ChartSeries.week) {\n      interval = 1000 * 60 * 60 * 4;\n      tzbtc = tzbtc.slice(0, 7 * 24).filter((e, i) => i % 4 === 0);\n      stats = stats.slice(0, 7 * 24).filter((e, i) => i % 4 === 0);\n    } else if (series === ChartSeries.year) {\n      interval = 1000 * 60 * 60 * 24 * 31;\n      tzbtc = tzbtc.slice(0, 365).filter((e, i) => i % 31 === 0);\n      stats = stats.slice(0, 365).filter((e, i) => i % 31 === 0);\n    }\n    tzbtc = tzbtc.reverse();\n    stats = stats.reverse();\n    for (let i = 0; i < tzbtc.length; ++i) {\n      a.push(1 / parseFloat(tzbtc[i].close));\n      b.push(parseFloat(tzbtc[i].close));\n      if (stats[i]?.tvlUsd) {\n        d.push(parseFloat(stats[i].tvlUsd));\n      }\n      const c = new Date((now -= interval));\n      if (series === ChartSeries.month) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate());\n      } else if (series === ChartSeries.day) {\n        labels.push('' + c.getHours() + ':00');\n      } else if (series === ChartSeries.week) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate() + ' ' + (c.getHours() + 1) + ':00');\n      } else if (series === ChartSeries.year) {\n        labels.push(c.toLocaleString('en-US', { month: 'short' }) + ' ' + c.getDate());\n      }\n    }\n    const defaultDatasetValues = {\n      hidden: true,\n      backgroundColor: function (context) {\n        const chart = context.chart;\n        const { ctx, chartArea } = chart;\n\n        if (!chartArea) {\n          return null;\n        }\n        return getGradientBackground(ctx, chartArea);\n      },\n      borderColor: '#5963ff88',\n      borderRadius: 1,\n      borderWidth: 3,\n      pointBorderWidth: 0,\n      pointBackgroundColor: '#5963ff88',\n      pointBorderColor: '#5963ff88',\n      pointRadius: 0,\n      pointHoverBorderWidth: 6,\n      pointHoverColor: '#5963ff88',\n      pointHitRadius: 6,\n      fill: true\n    };\n    const datasets = [\n      {\n        label: ChartTitle.XTZtzBTC,\n        data: a,\n        ...defaultDatasetValues\n      },\n      {\n        label: ChartTitle.tzBTCXTZ,\n        data: b,\n        ...defaultDatasetValues\n      },\n      {\n        label: ChartTitle.totalValueLocked,\n        data: d,\n        ...defaultDatasetValues\n      }\n    ];\n    return { datasets, labels: labels.reverse() };\n  }\n\n  async fetchHistoricalQuotesByContract(\n    contract: string = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5',\n    series: ChartSeries = ChartSeries.day,\n    offset: number = 0\n  ): Promise<any> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    let req;\n    if (series === ChartSeries.month || series === ChartSeries.year) {\n      req = {\n        query: `{quotes1d(offset: ${offset} limit: 100 where: {exchangeId:{_eq: \"${this.swapLiquidityService.lqdContract}\"} tokenId: {_eq: \"${contract}\"}, close: {_is_null: false}}) { close }}`\n      };\n    } else if (series === ChartSeries.day || series === ChartSeries.week) {\n      req = {\n        query: `{quotes1h(offset: ${offset} limit: 100 where: {exchangeId:{_eq: \"${this.swapLiquidityService.lqdContract}\"} tokenId: {_eq: \"${contract}\"}, close: {_is_null: false}}) { close }}`\n      };\n    }\n    try {\n      let result = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (series === ChartSeries.week) {\n        if (result.data?.quotes1h.length === 100) {\n          result = result?.data?.quotes1h;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.quotes1h;\n        }\n      }\n      if (series === ChartSeries.month) {\n        return result?.data?.quotes1d;\n      } else if (series === ChartSeries.day) {\n        return result?.data?.quotes1h;\n      } else if (series === ChartSeries.year) {\n        if (result.data?.quotes1d.length === 100) {\n          result = result?.data?.quotes1d;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalQuotesByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.quotes1d;\n        }\n      }\n    } catch (e) {\n      return [];\n    }\n  }\n\n  async fetchHistoricalStatsByContract(\n    contract: string = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5',\n    series: string = 'day',\n    offset: number = 0\n  ): Promise<Array<any>> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    let req;\n    if (series === 'day') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'week') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'month') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    } else if (series === 'year') {\n      req = {\n        query: `{  stats1d(\n        where: {exchangeId: {_eq: \"${contract}\"}, bucket: {_is_null: false}, tvlUsd: {_is_null: false}}\n      ) {\n        bucket\n        exchangeId\n        interactions\n        sharePx\n        sharePxBtc\n        sharePxUsd\n        tvl\n        tvlBtc\n        tvlUsd\n        users\n      }}`\n      };\n    }\n    try {\n      let result = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (series === ChartSeries.week) {\n        if (result.data?.stats1d.length === 100) {\n          result = result?.data?.stats1d;\n          offset += 100;\n          return result.concat(await this.fetchHistoricalStatsByContract(this.swapLiquidityService.tzBTCContract + '_0', series, offset));\n        } else {\n          return result?.data?.stats1d;\n        }\n      }\n      if (series === ChartSeries.month) {\n        return result?.data?.stats1d;\n      } else if (series === ChartSeries.day) {\n        return result?.data?.stats1d;\n      } else if (series === ChartSeries.year) {\n        return result?.data?.stats1d;\n      }\n    } catch {\n      return [];\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { WalletService } from '../../wallet/wallet.service';\nimport { Account, OpStatus } from '../../wallet/wallet';\nimport { ActivityService } from '../../activity/activity.service';\nimport { OperationService } from '../../operation/operation.service';\nimport { BalanceService } from '../../balance/balance.service';\nimport { DelegateService } from '../../delegate/delegate.service';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalService {\n  connection: any = null;\n  constructor(\n    private walletService: WalletService,\n    private activityService: ActivityService,\n    private operationService: OperationService,\n    private balanceService: BalanceService,\n    private delegateService: DelegateService\n  ) {}\n  async init() {\n    this.connection = new HubConnectionBuilder().withUrl(`${CONSTANTS.API_URL}/events`).build();\n    this.connection.on('operations', (msg) => {\n      for (const op of msg.data) {\n        if (op?.status === 'applied') {\n          console.log('%csignalR msg', 'color: green;', op);\n          const sender: string = op?.sender?.address ?? '';\n          const target: string = op?.target?.address ?? '';\n          const opHash: string = op?.hash ?? '';\n          const invoke: boolean = !!op?.parameter;\n          this.confirmStatus(opHash, sender, op.timestamp, invoke);\n          this.confirmStatus(opHash, target, op.timestamp, invoke);\n        }\n      }\n    });\n    this.connection.onclose(async () => {\n      await this.start();\n    });\n    this.start();\n  }\n  confirmStatus(opHash: string, address: string, timestamp: string, invoke: boolean) {\n    if (opHash && address && this.walletService.wallet) {\n      if (this.walletService.wallet) {\n        const account: Account = this.walletService.wallet.getAccount(address);\n        if (account) {\n          for (let i in account.activities) {\n            if (account.activities[i].hash === opHash && account.activities[i].status === OpStatus.UNCONFIRMED) {\n              account.activities[i].timestamp = new Date(timestamp).getTime();\n              if (invoke) {\n                account.activities[i].status = OpStatus.HALF_CONFIRMED;\n              } else {\n                account.activities[i].status = OpStatus.CONFIRMED;\n                this.activityService.promptNewActivities(account, [], [account.activities[i]]);\n                this.updateAccountData(address);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  updateAccountData(pkh: string) {\n    this.operationService.getAccount(pkh).subscribe((ans: any) => {\n      if (ans.success) {\n        this.balanceService.updateAccountBalance(this.walletService.wallet?.getAccount(pkh), Number(ans.payload.balance));\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        this.delegateService.handleDelegateResponse(acc, ans.payload.delegate);\n      } else {\n      }\n    });\n  }\n\n  async start() {\n    try {\n      if (!!this.connection?.start) {\n        await this.connection?.start();\n        console.log('%cSignalR Connected!', 'color:green;');\n      } else {\n        setTimeout(() => {\n          this.start();\n        }, 5000);\n      }\n    } catch (err) {\n      console.log(err);\n      setTimeout(() => {\n        this.start();\n      }, 5000);\n    }\n  }\n\n  async subscribeToAccount(address: string) {\n    console.log('Listen to: ' + address);\n    try {\n      await this.connection.invoke('SubscribeToOperations', {\n        address,\n        types: 'transaction,delegation,origination'\n      });\n    } catch (e) {}\n  }\n  ngOnDestroy(): void {\n    try {\n      this.connection.stop();\n      console.log('%cSignalR Disconnected!', 'color:red;');\n    } catch (e) {}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivityService } from '../activity/activity.service';\nimport { TzrateService } from '../tzrate/tzrate.service';\nimport { BalanceService } from '../balance/balance.service';\nimport { WalletService } from '../wallet/wallet.service';\nimport { DelegateService } from '../delegate/delegate.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account, OpStatus } from '../wallet/wallet';\nimport Big from 'big.js';\nimport { TokenService } from '../token/token.service';\nimport { LookupService } from '../lookup/lookup.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { SubjectService } from '../subject/subject.service';\nimport { interval } from 'rxjs';\nimport { SignalService } from '../indexer/signal/signal.service';\nimport { UnlockableService } from '../unlockable/unlockable.service';\nimport { DipDupService } from '../indexer/dipdup/dipdup.service';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nexport interface ScheduleData {\n  pkh: string;\n  state: State;\n  interval: any;\n  stateCounter: number;\n}\nenum State {\n  UpToDate,\n  Wait,\n  Updating\n}\n\n@Injectable()\nexport class CoordinatorService {\n  scheduler: Map<string, any> = new Map<string, any>(); // pkh + delay\n  defaultDelayActivity = CONSTANTS.MAINNET ? 60000 : 30000; // 60/30s\n  shortDelayActivity = 5000; // 5s\n  longDelayActivity = 120000; // 2m\n  defaultDelayPrice = 300000; // 5m\n  tzrateInterval: any;\n  accounts: Account[];\n  constructor(\n    private activityService: ActivityService,\n    private tzrateService: TzrateService,\n    private walletService: WalletService,\n    private balanceService: BalanceService,\n    private delegateService: DelegateService,\n    private operationService: OperationService,\n    private tokenService: TokenService,\n    private dipdupService: DipDupService,\n    private lookupService: LookupService,\n    private subjectService: SubjectService,\n    private signalService: SignalService,\n    private unlockableService: UnlockableService,\n    public router: Router,\n    private location: Location\n  ) {\n    this.subjectService.logout.subscribe((o) => {\n      if (!!o) {\n        this.stopAll();\n      }\n    });\n    this.subjectService.activeAccount.subscribe((activeAccount) => {\n      if (this.walletService.wallet) {\n        this.accounts = this.walletService.wallet.getAccounts();\n        this.accounts.forEach(({ address }) => {\n          if (address === activeAccount?.address) {\n            this.start(activeAccount.address, this.defaultDelayActivity);\n          } else {\n            this.start(address, this.longDelayActivity);\n          }\n        });\n        this.startXTZ();\n      }\n    });\n  }\n  startXTZ() {\n    if (!this.tzrateInterval) {\n      console.log('Start scheduler XTZ');\n      this.signalService.init();\n      const update = () => {\n        this.tzrateService.getTzrate();\n        this.dipdupService.fetchTokensMidPrice();\n        this.lookupService.recheckWalletAddresses(true);\n      };\n      this.tzrateInterval = interval(this.defaultDelayPrice).subscribe(() => update());\n      update();\n    }\n  }\n  async start(pkh: string, delay: number) {\n    this.unlockableService.restoreFeatures();\n    if (pkh && !this.scheduler.get(pkh)) {\n      this.accounts = this.walletService.wallet.getAccounts();\n      console.log('Start scheduler ' + this.scheduler.size + ' ' + pkh);\n      const scheduleData: ScheduleData = {\n        pkh: pkh,\n        state: State.UpToDate,\n        interval: interval(this.defaultDelayActivity).subscribe(() => this.update(pkh)),\n        stateCounter: 0\n      };\n      this.scheduler.set(pkh, scheduleData);\n      this.update(pkh);\n      this.updateAccountData(pkh);\n    } else if (pkh && this.scheduler.get(pkh)) {\n      this.setDelay(pkh, delay);\n    }\n  }\n  async boost(pkh: string, metadata: any = null) {\n    const path = this.location.path();\n    const embedded = path.startsWith('/embedded');\n    if (embedded) {\n      return;\n    }\n    // Expect action\n    console.log('boost ' + pkh);\n    if (this.walletService.addressExists(pkh)) {\n      if (metadata) {\n        this.addUnconfirmedOperations(pkh, metadata);\n      }\n      if (!this.scheduler.get(pkh)) {\n        await this.start(pkh, this.defaultDelayActivity);\n      }\n      this.signalService.subscribeToAccount(pkh);\n      if (this.scheduler.get(pkh).state !== State.Wait) {\n        this.changeState(pkh, State.Wait);\n        this.update(pkh);\n        const counter = this.scheduler.get(pkh).stateCounter;\n        setTimeout(() => {\n          // Failsafe\n          if (this.scheduler?.size && this.scheduler.get(pkh).stateCounter === counter) {\n            console.log('Timeout from wait state');\n            this.changeState(pkh, State.UpToDate);\n          }\n        }, 150000);\n      }\n    }\n  }\n  async update(pkh) {\n    this.setDelay(pkh, this.defaultDelayActivity);\n    this.activityService.updateTransactions(pkh).subscribe(\n      (ans: any) => {\n        switch (this.scheduler.get(pkh) ? this.scheduler.get(pkh).state : -1) {\n          case State.UpToDate: {\n            if (!ans.upToDate) {\n              this.changeState(pkh, State.Updating);\n            } else if (ans?.balance) {\n              const balance = this.walletService.wallet?.getAccount(pkh).balanceXTZ;\n              if (balance !== ans.balance) {\n                console.log('recheck balance');\n                this.updateAccountData(pkh);\n              }\n            }\n            break;\n          }\n          case State.Wait: {\n            if (!ans.upToDate) {\n              this.changeState(pkh, State.Updating);\n            } else {\n              this.setDelay(pkh, this.shortDelayActivity);\n            }\n            break;\n          }\n          case State.Updating: {\n            if (ans.upToDate) {\n              this.changeState(pkh, State.UpToDate);\n            } else {\n              this.setDelay(pkh, this.shortDelayActivity);\n            }\n            break;\n          }\n          default: {\n            console.log('No state found!');\n            break;\n          }\n        }\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        if (acc?.activities?.length) {\n          const latestActivity = acc.activities[0];\n          if (latestActivity.status === OpStatus.UNCONFIRMED) {\n            const age = new Date().getTime() - new Date(latestActivity.timestamp).getTime();\n            if (age > 1800000) {\n              // 30m\n              acc.activities.shift();\n              this.walletService.storeWallet();\n            }\n          }\n        }\n      },\n      (err) => {\n        console.log('Error in update()');\n        console.error(err);\n      },\n      () => {\n        console.log(\n          `account[${this.accounts.findIndex((a) => a.address === pkh)}][${\n            typeof this.scheduler.get(pkh)?.state !== 'undefined' ? this.scheduler.get(pkh).state : '*'\n          }]: <<`\n        );\n      }\n    );\n  }\n  changeState(pkh: string, newState: State) {\n    const scheduleData: ScheduleData = this.scheduler.get(pkh);\n    scheduleData.state = newState;\n    if (newState === State.UpToDate || newState === State.Updating) {\n      this.updateAccountData(pkh);\n    }\n    if (newState === State.Wait || newState === State.Updating) {\n      scheduleData.interval.unsubscribe();\n      scheduleData.interval = interval(this.shortDelayActivity).subscribe(() => this.update(pkh));\n    }\n    scheduleData.stateCounter++;\n    this.scheduler.set(pkh, scheduleData);\n  }\n  setDelay(pkh: string, time: number) {\n    const scheduleData: ScheduleData = this.scheduler.get(pkh);\n    if (scheduleData.interval) {\n      scheduleData.interval.unsubscribe();\n    }\n    scheduleData.interval = interval(time).subscribe(() => this.update(pkh));\n    this.scheduler.set(pkh, scheduleData);\n  }\n  stopAll() {\n    if (this.walletService.wallet) {\n      if (this.accounts?.length) {\n        console.log('Stop all schedulers');\n        for (const account of this.accounts) {\n          this.stop(account.address);\n        }\n      }\n      if (this.tzrateInterval) {\n        this.tzrateInterval.unsubscribe();\n        this.tzrateInterval = null;\n      }\n    }\n  }\n  async stop(pkh) {\n    console.log('Stop scheduler ' + this.accounts.findIndex((a) => a.address === pkh));\n    if (this.scheduler.get(pkh)) {\n      this.scheduler.get(pkh).interval.unsubscribe();\n      this.scheduler.get(pkh).interval = null;\n      this.scheduler.delete(pkh);\n    }\n  }\n  updateAccountData(pkh: string) {\n    // Maybe also check for originations to account?\n    console.log('update account data for ' + pkh);\n    this.operationService.getAccount(pkh).subscribe((ans: any) => {\n      if (ans.success) {\n        this.balanceService.updateAccountBalance(this.walletService.wallet?.getAccount(pkh), Number(ans.payload.balance));\n        const acc = this.walletService.wallet?.getAccount(pkh);\n        this.delegateService.handleDelegateResponse(acc, ans.payload.delegate);\n      } else {\n        console.log('updateAccountData -> getAccount failed ', ans.payload.msg);\n      }\n    });\n  }\n  addUnconfirmedOperations(from: string, metadata: any) {\n    let account = this.walletService.wallet?.getAccount(from);\n    if (!account.activities) {\n      return;\n    }\n    if (metadata.transactions) {\n      console.log('Unconfirmed transactions:');\n      console.log(metadata.transactions);\n      const decimals =\n        metadata.tokenTransfer && this.tokenService.getAsset(metadata.tokenTransfer) ? this.tokenService.getAsset(metadata.tokenTransfer).decimals : 6;\n      for (const op of metadata.transactions) {\n        const transaction = {\n          type: 'transaction',\n          status: OpStatus.UNCONFIRMED,\n          amount: Big(op.amount)\n            .times(10 ** decimals)\n            .toString(),\n          fee: null,\n          source: { address: from },\n          destination: { address: op.destination },\n          hash: metadata.opHash,\n          block: null,\n          timestamp: new Date().getTime(),\n          tokenId: metadata.tokenTransfer ? metadata.tokenTransfer : undefined,\n          entrypoint: op.parameters?.entrypoint ? op.parameters.entrypoint : ''\n        };\n        account.activities.unshift(transaction);\n        account = this.walletService.wallet?.getAccount(op.destination);\n        if (account) {\n          account.activities.unshift({ ...transaction });\n        }\n      }\n    } else if (metadata.delegate !== undefined) {\n      const delegation = {\n        type: 'delegation',\n        status: OpStatus.UNCONFIRMED,\n        amount: null,\n        fee: null,\n        source: { address: from },\n        destination: { address: metadata.delegate },\n        hash: metadata.opHash,\n        block: null,\n        timestamp: new Date().getTime()\n      };\n      account?.activities.unshift(delegation);\n    } else if (metadata.origination !== undefined) {\n      const origination = {\n        type: 'origination',\n        status: OpStatus.UNCONFIRMED,\n        amount: metadata.origination.balance,\n        fee: null,\n        source: { address: from },\n        destination: { address: metadata.kt1 },\n        hash: metadata.opHash,\n        block: null,\n        timestamp: new Date().getTime()\n      };\n      account?.activities.unshift(origination);\n    } else {\n      console.log('Unknown metadata', metadata);\n    }\n    this.walletService.storeWallet();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { OperationService } from '../operation/operation.service';\nimport { WalletService } from '../../services/wallet/wallet.service';\nimport { MessageService } from '../../services/message/message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeeplinkService {\n  private pairingJson = '';\n  constructor(private operationService: OperationService, private walletService: WalletService, private messageService: MessageService) {}\n  set(params: Params) {\n    console.log(params);\n    this.pairingJson = this.extractPairingJson(params);\n    if (this.pairingJson && !this.walletService.wallet) {\n      this.messageService.addWarning('Access your wallet to complete the pairing');\n    }\n    console.log(this.pairingJson);\n  }\n  extractPairingJson(params: Params): string {\n    if (params.type === 'tzip10' && params.data) {\n      try {\n        return this.operationService.b58cdecode(params.data, '').toString();\n      } catch (e) {\n        return '';\n      }\n    }\n    return '';\n  }\n  popPairingJson(): string {\n    const pairingJson = this.pairingJson;\n    this.pairingJson = '';\n    return pairingJson;\n  }\n  QRtoPairingJson(qrPayload: string): string {\n    if (qrPayload.length > 26 && qrPayload.slice(0, 26) === 'tezos://?type=tzip10&data=') {\n      qrPayload = qrPayload.slice(26);\n    }\n    try {\n      return this.operationService.b58cdecode(qrPayload, '').toString();\n    } catch {}\n    return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet/wallet.service';\nimport { OperationService } from '../operation/operation.service';\nimport { Account } from '../wallet/wallet';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Injectable()\nexport class DelegateService {\n  public readonly bb = 'https://api.baking-bad.org/v2';\n  public delegates = new BehaviorSubject<any>([]);\n\n  constructor(private walletService: WalletService, private operationService: OperationService, public router: Router, private location: Location) {\n    const path = this.location.path();\n    const embedded = path.startsWith('/embedded');\n    if (!embedded) {\n      this.getDelegates();\n    }\n  }\n  getDelegate(account: Account) {\n    this.operationService.getDelegate(account.address).subscribe(\n      (data: any) => {\n        if (data.success) {\n          this.handleDelegateResponse(account, data.payload.delegate);\n        }\n      },\n      (err) => console.log(JSON.stringify(err))\n    );\n  }\n  handleDelegateResponse(account: Account, data: any) {\n    if (data) {\n      if (account.delegate !== data) {\n        account.delegate = data;\n        this.walletService.storeWallet();\n      } else {\n        console.log('delegate for ' + account.address + ' up to date');\n      }\n    } else {\n      if (account.delegate !== '') {\n        account.delegate = '';\n        this.walletService.storeWallet();\n      }\n    }\n  }\n  getDelegates(): void {\n    fetch(`${this.bb}/bakers`)\n      .then((response) => response.json())\n      .then((d) => this.delegates.next(d));\n  }\n\n  resolveDelegateByAddress(address: string): Promise<any> {\n    return new Promise((resolve) => {\n      this.delegates.pipe(take(1)).subscribe((d) => resolve(d?.find((d) => d?.address === address)));\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as pbkdf2 from 'pbkdf2';\nimport * as AES from 'aes-js';\nimport * as scrypt from 'scryptsy';\nimport * as cryptob from 'crypto-browserify';\nimport * as forge from 'node-forge';\ndeclare const Buffer;\n@Injectable()\nexport class EncryptionService {\n  constructor() {}\n  async encrypt(plaintext: any, password: string, version: number, salt: string = null): Promise<any> {\n    if (version === 1) {\n      throw new Error('Encryption version no longer supported');\n    } else if (version === 2) {\n      return this.encrypt_v2(plaintext, password);\n    } else if (version === 3) {\n      return this.encrypt_v2(plaintext, password, salt);\n    } else {\n      throw new Error('Unrecognized encryption format');\n    }\n  }\n  async decrypt(chiphertext: string, password: string, salt: string, version: number): Promise<any> {\n    if (version === 1) {\n      return this.decrypt_v1(chiphertext, password, salt);\n    } else if (version === 2 || version === 3) {\n      return this.decrypt_v2(chiphertext, password, salt);\n    } else {\n      throw new Error('Unrecognized encryption format');\n    }\n  }\n  // Version 1\n  async encrypt_v1(plaintext: any, password: string, salt: string): Promise<string> {\n    return new Promise((resolve) => {\n      try {\n        if (!password || !salt) {\n          throw new Error('Missing password or salt');\n        }\n        pbkdf2.pbkdf2(password, salt, 10000, 32, 'sha512', (err, key) => {\n          if (err) {\n            throw err;\n          }\n          const aesCtr = new AES.ModeOfOperation.ctr(key);\n          let chiphertext = aesCtr.encrypt(plaintext);\n          chiphertext = AES.utils.hex.fromBytes(chiphertext);\n          resolve(chiphertext);\n        });\n      } catch (e) {\n        console.warn(e);\n        resolve('');\n      }\n    });\n  }\n  async decrypt_v1(chiphertext: string, password: string, salt: string): Promise<any> {\n    return new Promise((resolve) => {\n      try {\n        if (!password || !salt) {\n          throw new Error('Missing password or salt');\n        }\n        pbkdf2.pbkdf2(password, salt, 10000, 32, 'sha512', (err, key) => {\n          if (err) {\n            throw err;\n          }\n          chiphertext = AES.utils.hex.toBytes(chiphertext);\n          const aesCtr = new AES.ModeOfOperation.ctr(key);\n          const plaintext = aesCtr.decrypt(chiphertext);\n          resolve(plaintext);\n        });\n      } catch (e) {\n        resolve('');\n      }\n    });\n  }\n  // Version 2\n  async encrypt_v2(plaintext: any, password: string, salt?: string): Promise<any> {\n    if (!password) {\n      throw new Error('Missing password');\n    }\n    let salty;\n    if (salt) {\n      salty = new Buffer(salt, 'hex');\n    } else {\n      salty = cryptob.randomBytes(16);\n    }\n    const key = await scrypt.async(password, salty, 65536, 8, 1, 32);\n    const cipher: any = forge.cipher.createCipher('AES-GCM', key.toString('binary'));\n    cipher.start({\n      iv: salty\n    });\n    const byteStringBuffer = forge.util.createBuffer(plaintext.toString('binary'), 'utf-8');\n    cipher.update(byteStringBuffer);\n    cipher.finish();\n    const chiphertext = cipher.output.toHex() + '==' + cipher.mode.tag.toHex();\n    return { chiphertext: chiphertext, iv: salty.toString('hex') };\n  }\n  async decrypt_v2(chipher: string, password: string, salt: string): Promise<string> {\n    try {\n      if (!password || !salt) {\n        throw new Error('Missing password or salt');\n      }\n      const parts = chipher.split('==');\n      const chiphertext = parts[0];\n      const tag = parts[1];\n      const key = await scrypt.async(password, new Buffer(salt, 'hex'), 65536, 8, 1, 32);\n      const decipher: any = forge.cipher.createDecipher('AES-GCM', key.toString('binary'));\n      decipher.start({\n        iv: new Buffer(salt, 'hex'),\n        tag: forge.util.createBuffer(new Buffer(tag, 'hex').toString('binary'), 'utf-8') // authentication tag from encryption\n      });\n      decipher.update(forge.util.createBuffer(new Buffer(chiphertext, 'hex').toString('binary'), 'utf-8'));\n      const pass = decipher.finish();\n      if (pass) {\n        return new Buffer(decipher.output.toHex(), 'hex');\n      } else {\n        return null;\n      }\n    } catch (err) {\n      return null;\n    }\n  }\n  shiftIV(salt: string, offset: number) {\n    if (!Number.isInteger(offset) || offset > 255 || offset < 1) {\n      throw new Error('Invalid offset for IV');\n    }\n    const buf = new Buffer(salt, 'hex');\n    buf[13] = (buf[13] + offset) % 256;\n    return buf.toString('hex');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { OperationService } from '../operation/operation.service';\nimport { flatMap, catchError } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { DefaultTransactionParams, OpLimits } from '../../interfaces';\nimport Big from 'big.js';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { InputValidationService } from '../input-validation/input-validation.service';\n\nconst httpOptions = { headers: { 'Content-Type': 'application/json' } };\n@Injectable()\nexport class EstimateService {\n  readonly costPerByte = '250';\n  readonly revealGasLimit = 1000;\n  readonly contractsOverride: Record<string, OpLimits>;\n  queue = [];\n  nodeURL = CONSTANTS.NODE_URL;\n  pkh: string;\n  pk: string;\n  hash: string;\n  chainId: string;\n  manager: string;\n  counter: number;\n  constructor(private http: HttpClient, private operationService: OperationService, private imputValidationService: InputValidationService) {\n    this.contractsOverride = CONSTANTS.CONTRACT_OVERRIDES;\n  }\n  init(hash: string, chainId: string, counter: number, manager: string, pk: string, pkh: string) {\n    this.hash = hash;\n    this.chainId = chainId;\n    this.counter = counter;\n    this.manager = manager;\n    this.pk = pk;\n    this.pkh = pkh;\n  }\n  async preLoadData(pkh: string, pk: string) {\n    this.pkh = pkh;\n    this.pk = pk;\n    const [head, counter, manager] = await Promise.all([this.operationService.getHeader().toPromise(), this.getCounter(pkh), this.getManager(pkh)]);\n    if (head && counter && (manager || manager === null)) {\n      this.init(head.hash, head.chain_id, counter, manager, pk, pkh);\n    }\n  }\n  public async estimateTransactions(transactions: any, from: string, tokenTransfer: string = '', callback) {\n    this.estimate(transactions, from, tokenTransfer, callback, false);\n  }\n  public async estimateOrigination(origination: any, from: string, callback) {\n    this.estimate([origination], from, '', callback, true);\n  }\n  private async estimate(transactions: any, from: string, tokenTransfer: string = '', callback, isOrigination: boolean) {\n    this.queue.push({ transactions, from, callback });\n    if (this.queue.length === 1) {\n      while (this.queue.length > 0) {\n        while (this.queue.length > 1) {\n          this.queue[0].callback(null);\n          this.queue.shift();\n        }\n        let retry = false;\n        for (let i = 0; i < 1 || (retry && i < 2); i++) {\n          await this._estimate(this.queue[0].transactions, this.queue[0].from, tokenTransfer, isOrigination)\n            .then((res) => {\n              this.queue[0].callback(res);\n            })\n            .catch(async (error) => {\n              if (error.message && error.message === 'An operation assumed a contract counter in the past' && !retry) {\n                console.log('Update counter');\n                await this.preLoadData(this.pkh, this.pk);\n                retry = true;\n              } else {\n                this.queue[0].callback({ error });\n              }\n            });\n        }\n        this.queue.shift();\n      }\n    }\n  }\n  private async _estimate(operations: any, from: string, tokenTransfer: string, isOrigination: boolean = false): Promise<any> {\n    if (!this.hash) {\n      return null;\n    }\n    const simulation = {\n      fee: 0,\n      gasLimit: Math.min(\n        CONSTANTS.HARD_LIMITS.hard_gas_limit_per_operation,\n        Math.floor(CONSTANTS.HARD_LIMITS.hard_gas_limit_per_block / (operations.length + 1))\n      ),\n      storageLimit: CONSTANTS.HARD_LIMITS.hard_storage_limit_per_operation\n    };\n    for (const tx of operations) {\n      console.log(tx);\n      if (!isOrigination) {\n        if (!tx.amount) {\n          tx.amount = 0;\n        }\n        if (tx.destination.slice(0, 3) !== 'KT1' && !tokenTransfer) {\n          tx.amount = 0.000001;\n        }\n      }\n      tx.gasLimit = simulation.gasLimit;\n      tx.storageLimit = simulation.storageLimit;\n    }\n    if (this.hash && this.counter && (this.manager || this.manager === null)) {\n      const op = isOrigination\n        ? this.operationService.createOriginationObject(this.hash, this.counter, this.manager, operations[0], simulation.fee, this.pk, this.pkh)\n        : this.operationService.createTransactionObject(\n            this.hash,\n            this.counter,\n            this.manager,\n            operations,\n            this.pkh,\n            this.pk,\n            from,\n            simulation.fee,\n            tokenTransfer\n          );\n      const result = await this.simulate(op)\n        .toPromise()\n        .catch((e) => {\n          console.warn(e);\n          return null;\n        });\n      if (result && result.contents) {\n        let reveal = false;\n        const limits = [];\n        for (const i in result.contents) {\n          if (result.contents[i].kind === 'reveal') {\n            reveal = true;\n          } else if (['transaction', 'origination'].includes(result.contents[i].kind) && result.contents[i].metadata.operation_result.status === 'applied') {\n            const index: number = Number(i) + (result.contents[0]?.kind === 'reveal' ? -1 : 0);\n            const opObj = index > -1 ? operations[index] : null;\n            const { gas, storage } = this.getOpUsage(result.contents[i], opObj);\n            limits.push({ gasLimit: gas, storageLimit: storage });\n          } else {\n            return null;\n          }\n        }\n        return await this.operationService\n          .localForge(op)\n          .pipe(\n            flatMap((fop) => {\n              const bytes = fop.length / 2 + 64;\n              const gas = this.totalGasLimit(limits);\n              const storage = this.totalStorageLimit(limits);\n              const dtp: DefaultTransactionParams = {\n                customLimits: limits,\n                fee: this.recommendFee(limits, reveal, bytes),\n                burn: this.burnFee(limits),\n                gas,\n                storage,\n                reveal\n              };\n              console.log(JSON.stringify(dtp));\n              return of(dtp);\n            })\n          )\n          .toPromise();\n      } else if (typeof result?.success === 'boolean' && result.success === false) {\n        console.log(result);\n        throw new Error(result.payload.msg);\n      }\n    }\n    return null;\n  }\n  getOpUsage(content: any, op: any): OpLimits {\n    let gasUsage = 0;\n    let burn = Big(0);\n    if (content.source && content.source === this.pkh) {\n      burn = burn.minus(content.amount ? content.amount : '0');\n      burn = burn.minus(content.fee ? content.fee : '0');\n      burn = burn.minus(content.balance ? content.balance : '0');\n    }\n    if (content.destination && content.destination === this.pkh) {\n      burn = burn.plus(content.amount ? content.amount : '0');\n    }\n    if (content.metadata.operation_result.balance_updates) {\n      for (const balanceUpdate of content.metadata.operation_result.balance_updates) {\n        if (balanceUpdate.contract === this.pkh) {\n          burn = burn.minus(balanceUpdate.change);\n        }\n      }\n    }\n    if (content.metadata.balance_updates) {\n      for (const balanceUpdate of content.metadata.balance_updates) {\n        if (balanceUpdate.contract === this.pkh) {\n          burn = burn.minus(balanceUpdate.change);\n        }\n      }\n    }\n    gasUsage += content.metadata.operation_result.consumed_milligas ? Math.ceil(Number(content.metadata.operation_result.consumed_milligas) / 1000) : 0;\n    if (content.metadata.internal_operation_results) {\n      for (const internalResult of content.metadata.internal_operation_results) {\n        if (internalResult.result) {\n          if (internalResult.result.consumed_milligas) {\n            gasUsage +=\n              internalResult.result && internalResult.result.consumed_milligas ? Math.ceil(Number(internalResult.result.consumed_milligas) / 1000) : 0;\n          }\n          if (internalResult.result.balance_updates) {\n            for (const balanceUpdate of internalResult.result.balance_updates) {\n              if (balanceUpdate.contract === this.pkh && balanceUpdate.change.slice(0, 1) === '-') {\n                burn = burn.minus(balanceUpdate.change);\n              }\n            }\n          }\n        }\n      }\n    }\n    const storageUsage = Math.round(burn / Number(this.costPerByte));\n    if (\n      gasUsage < 0 ||\n      gasUsage > CONSTANTS.HARD_LIMITS.hard_gas_limit_per_operation ||\n      storageUsage < 0 ||\n      storageUsage > CONSTANTS.HARD_LIMITS.hard_storage_limit_per_operation\n    ) {\n      throw new Error('InvalidUsageCalculation');\n    }\n    return this.getOpLimits(content, op, gasUsage, storageUsage);\n  }\n  /*\n    Need to be updated when fee market appear or default behavior for bakers changes\n  */\n  recommendFee(limits: any, reveal: boolean, bytes: number): number {\n    const minimalFee = 100;\n    const feePerByte = 1;\n    const feePerGasUnit = 0.1;\n    let gasUnits = 0;\n    let numberOfOperations = 0;\n    if (reveal) {\n      gasUnits += this.revealGasLimit;\n      numberOfOperations++;\n    }\n    for (const data of limits) {\n      gasUnits += data.gasLimit;\n      numberOfOperations++;\n    }\n    bytes += 10 * numberOfOperations; // add 10 extra bytes for variation in amount & fee\n    return Number(\n      Big(Math.ceil(minimalFee + feePerByte * bytes + feePerGasUnit * gasUnits))\n        .div(1000000)\n        .toString()\n    );\n  }\n  totalGasLimit(limits: any): number {\n    let totalGasLimit = 0;\n    for (const data of limits) {\n      totalGasLimit += data.gasLimit;\n    }\n    return totalGasLimit;\n  }\n  totalStorageLimit(limits: any): number {\n    let totalStorageLimit = 0;\n    for (const data of limits) {\n      totalStorageLimit += data.storageLimit;\n    }\n    return totalStorageLimit;\n  }\n  burnFee(limits: any): number {\n    let totalStorageLimit = Big(0);\n    for (const data of limits) {\n      totalStorageLimit = totalStorageLimit.plus(data.storageLimit);\n    }\n    return Number(Big(totalStorageLimit).times(this.costPerByte).div('1000000').toString());\n  }\n  simulate(op: any): Observable<any> {\n    op.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n    return this.operationService\n      .postRpc('chains/main/blocks/head/helpers/scripts/run_operation', {\n        operation: op,\n        chain_id: this.chainId\n      })\n      .pipe(\n        flatMap((res) => {\n          this.operationService.checkApplied([res]);\n          return of(res);\n        })\n      )\n      .pipe(\n        catchError((err) => {\n          return this.operationService.errHandler(err);\n        })\n      );\n  }\n  private getOpLimits(content: any, op: any, gasUsage: number, storageUsage: number): OpLimits {\n    // check for hardcoded override\n    let limit: OpLimits = {};\n    const entrypoint = content?.parameters?.entrypoint;\n    const destination = content?.destination;\n    if (entrypoint && destination) {\n      const contractOverride: OpLimits = this.contractsOverride[`${destination}:${entrypoint}`];\n      if (contractOverride) {\n        limit = contractOverride;\n      }\n    }\n    // gas\n    if (!limit.gas) {\n      let gasRecommendation: number = 0;\n      if (op?.gasRecommendation) {\n        if (this.imputValidationService.gas(op.gasRecommendation)) {\n          gasRecommendation = Number(op.gasRecommendation);\n        } else if (this.imputValidationService.relativeLimit(op.gasRecommendation)) {\n          let percentage: number = Number(op.gasRecommendation.slice(1, -1));\n          percentage = Math.min(Math.max(percentage, 2), 900);\n          gasRecommendation = Math.round(gasUsage * (1 + percentage / 100));\n        }\n      }\n      const gasEstimation = Math.max(Math.ceil(gasUsage * 1.02), Math.round(gasUsage + 80));\n      limit.gas = Math.max(gasRecommendation, gasEstimation); // make sure dapps don't underestimate (ithaca side effect)\n    }\n    // storage\n    if (!limit.storage) {\n      let storageRecommendation: number = 0;\n      if (op?.storageRecommendation) {\n        if (this.imputValidationService.storage(op.storageRecommendation)) {\n          storageRecommendation = Number(op.storageRecommendation);\n        } else if (this.imputValidationService.relativeLimit(op.storageRecommendation)) {\n          const percentage: number = Number(op.storageRecommendation.slice(1, -1));\n          storageRecommendation = Math.round(storageUsage * (1 + percentage / 100));\n        }\n      }\n      const storageEstimation = Math.round(storageUsage);\n      limit.storage = Math.max(storageRecommendation, storageEstimation);\n    }\n    return limit;\n  }\n  private async getCounter(pkh: string): Promise<number> {\n    return this.operationService.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/counter`).toPromise();\n  }\n  private async getManager(pkh: string): Promise<string> {\n    return this.operationService.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SubjectService } from '../../subject/subject.service';\nimport { SwapLiquidityService } from '../../swap-liquidity/swap-liquidity.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DipDupService {\n  private readonly storeKey = 'dipdup';\n  private readonly maxTokensReturned = 1000;\n  public tokens = new Map<string, any>();\n  constructor(private subjectService: SubjectService) {\n    this.rehydrate();\n  }\n  async fetchTokensMidPrice(offset = 0): Promise<void> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    const req = {\n      query: `{\n            token(where: {} offset: ${offset}) {\n              exchanges(where: {_not: {name: {_eq: \"lb\"}}}) {\n                midPrice,\n                sharesTotal,\n                token {\n                  address,\n                  tokenId\n                }\n              }\n      }}`\n    };\n    const response = await (\n      await fetch(baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(req)\n      })\n    ).json();\n    if (response?.data?.token?.length) {\n      if (offset === 0) {\n        this.tokens = new Map<string, any>();\n      }\n      for (const t of response.data.token) {\n        const exchange = t.exchanges.reduce((p, c) =>\n          (!!c?.sharesTotal && !!p?.sharesTotal && Number(c.sharesTotal) > Number(p.sharesTotal)) || (c?.sharesTotal && !p?.sharesTotal) ? c : p\n        );\n        this.tokens.set(`${exchange.token.address}:${exchange.token.tokenId}`, Boolean(Number(exchange?.midPrice)) ? exchange?.midPrice : '0');\n      }\n    }\n    if (response?.data?.token?.length >= this.maxTokensReturned) {\n      this.fetchTokensMidPrice(offset + this.maxTokensReturned);\n    } else if (this.tokens.size) {\n      this.store();\n    }\n    return;\n  }\n  store() {\n    const obj = Object.fromEntries(this.tokens);\n    localStorage.setItem(\n      this.storeKey,\n      JSON.stringify({\n        midPrices: obj\n      })\n    );\n    this.subjectService.refreshTokens.next(null);\n  }\n  rehydrate() {\n    const json = localStorage.getItem(this.storeKey);\n    if (json) {\n      const parsed = JSON.parse(json);\n      if (parsed?.midPrices) {\n        for (const key of Object.keys(parsed.midPrices)) {\n          this.tokens.set(key, parsed.midPrices[key]);\n        }\n        this.subjectService.refreshTokens.next(null);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TzktService } from './tzkt/tzkt.service';\nimport { WalletObject } from '../wallet/wallet';\nimport { Asset } from '../token/token.service';\n\nexport interface Indexer {\n  getContractAddresses(pkh: string): Promise<any>;\n  accountInfo(address: string, knownTokenIds: string[], init: boolean): Promise<any>;\n  getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any>;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexerService {\n  constructor(public tzktService: TzktService) {}\n  async isUsedAccount(address: string): Promise<boolean> {\n    return this.tzktService.isUsedAccount(address);\n  }\n  async getContractAddresses(address: string): Promise<any> {\n    return this.tzktService.getContractAddresses(address);\n  }\n  async accountInfo(address: string, knownTokenIds: string[] = []): Promise<any> {\n    return this.tzktService.accountInfo(address, knownTokenIds);\n  }\n  async getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any> {\n    return this.tzktService.getOperations(address, knownTokenIds, wallet);\n  }\n  async getTokenMetadata(contractAddress: string, id: string, skipTzkt = false): Promise<any> {\n    return this.tzktService.getTokenMetadata(contractAddress, id, skipTzkt);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CONSTANTS, MODEL_3D_WHITELIST } from '../../../../environments/environment';\nimport { Indexer } from '../indexer.service';\nimport * as cryptob from 'crypto-browserify';\nimport { WalletObject, Activity, OpStatus, Token } from '../../wallet/wallet';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { Tzip12Module, tzip12 } from '@taquito/tzip12';\nimport { TezosStorageHandler } from '@taquito/tzip16';\nimport { Handler, IpfsHttpHandler, MetadataProvider } from '@taquito/tzip16';\nimport { SubjectService } from '../../subject/subject.service';\nimport Big from 'big.js';\n\ninterface TokenMetadata {\n  name: string;\n  tokenType: 'FA2' | 'FA1.2';\n  decimals: number;\n  symbol?: string;\n  description?: string;\n  artifactUri?: string;\n  displayUri?: string;\n  thumbnailUri?: string;\n  category?: string;\n  isTransferable?: boolean;\n  shouldPreferSymbol?: boolean;\n  isBooleanAmount?: boolean;\n  series?: string;\n  ttl?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TzktService implements Indexer {\n  tokenBalanceCache = {};\n  readonly TZKT_TOKEN_QUERY_SIZE: number = 10000;\n  Tezos: TezosToolkit;\n  constructor(private subjectService: SubjectService) {\n    this.Tezos = new TezosToolkit(CONSTANTS.NODE_URL);\n    const customHandlers = new Map<string, Handler>([\n      ['ipfs', new IpfsHttpHandler('cloudflare-ipfs.com')],\n      ['tezos-storage', new TezosStorageHandler()]\n    ]);\n    const customMetadataProvider = new MetadataProvider(customHandlers);\n    this.Tezos.addExtension(new Tzip12Module(customMetadataProvider));\n  }\n  async getContractAddresses(pkh: string): Promise<any> {\n    return fetch(`${CONSTANTS.API_URL}/operations/originations?contractManager=${pkh}`)\n      .then((response) => response.json())\n      .then((data) =>\n        data\n          .map((op: any) => {\n            return op?.status === 'applied' && op?.originatedContract?.kind === 'delegator_contract' ? op.originatedContract.address : '';\n          })\n          .filter((address: string) => address.length)\n      );\n  }\n\n  async getHashAndBlockByIds(transactionIds: number[]): Promise<any> {\n    if (!transactionIds?.length) {\n      return {};\n    }\n    return fetch(`${CONSTANTS.API_URL}/operations/transactions?id.in=${transactionIds.join(',')}`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((o) => {\n        let res = {};\n        for (let i = 0; i < o.length; i++) {\n          if (o[i]?.id && o[i].hash && o[i].block) {\n            res[`t${o[i].id}`] = { hash: o[i].hash, block: o[i].block };\n          }\n        }\n        return res;\n      });\n  }\n  async accountInfo(address: string, knownTokenIds: string[]): Promise<any> {\n    const unknownTokenIds = [];\n    const data = await (await fetch(`${CONSTANTS.API_URL}/accounts/${address}`)).json();\n    const tokenBalances = address.startsWith('tz') ? await this.getAllTokenBalances(address) : [];\n    if (data) {\n      if (tokenBalances?.length) {\n        for (const token of tokenBalances) {\n          if (!knownTokenIds.includes(token.tokenId)) {\n            unknownTokenIds.push(token.tokenId);\n          }\n        }\n      }\n      tokenBalances.sort(function (a: any, b: any) {\n        if (a.tokenId < b.tokenId) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n      const payload: string = (data.balance ? data.balance : '') + (data.counter ? data.counter : '') + (tokenBalances ? JSON.stringify(tokenBalances) : '');\n      const input = Buffer.from(payload);\n      const hash = cryptob.createHash('sha512').update(input).digest('hex');\n      if (payload && payload !== '[]') {\n        const balance = data?.balance !== undefined ? data.balance : 0;\n        return { counter: hash, unknownTokenIds, tokens: tokenBalances, balance };\n      }\n    }\n    return { counter: '', tokens: tokenBalances };\n  }\n  async isUsedAccount(address: string): Promise<boolean> {\n    const accountInfo = await (await fetch(`${CONSTANTS.API_URL}/accounts/${address}`)).json();\n    return accountInfo && (accountInfo?.type === 'user' || accountInfo?.balance || accountInfo?.tokenBalancesCount);\n  }\n  async getOperations(address: string, knownTokenIds: string[], wallet: WalletObject): Promise<any> {\n    const ops = await fetch(`${CONSTANTS.API_URL}/accounts/${address}/operations?limit=20&type=delegation,origination,transaction`)\n      .then((response) => response.json())\n      .then((data) =>\n        data\n          .map((op) => {\n            if (!op.hasInternals || !wallet.getAccount(op.target.address)) {\n              const status: OpStatus = op.status === 'applied' ? OpStatus.CONFIRMED : OpStatus.FAILED;\n              let destination = { address: '' };\n              let amount = '0';\n              let entrypoint = '';\n              let opId = '';\n              switch (op.type) {\n                case 'transaction':\n                  if (address !== op.target.address && address !== op.sender.address) {\n                    return null;\n                  }\n                  destination = op.target;\n                  amount = op.amount.toString();\n                  entrypoint = this.extractEntrypoint(op);\n                  opId = op?.id ? `t${op.id}` : '';\n                  break;\n                case 'delegation':\n                  if (address !== op.sender.address) {\n                    return null;\n                  }\n                  destination = op.newDelegate ? op.newDelegate : { address: '' };\n                  amount = '0';\n                  opId = op?.id ? `d${op.id}` : '';\n                  break;\n                case 'origination':\n                  destination = op.originatedContract;\n                  if (op.contractBalance) {\n                    amount = op.contractBalance.toString();\n                  }\n                  opId = op?.id ? `o${op.id}` : '';\n                  break;\n                default:\n                  console.log(`Ignoring kind ${op.type}`);\n                  return null;\n              }\n              const activity: Activity = {\n                type: op.type,\n                block: op.block,\n                status,\n                amount,\n                source: op.sender,\n                destination,\n                hash: op.hash,\n                counter: op.counter,\n                timestamp: new Date(op.timestamp).getTime(),\n                entrypoint,\n                opId\n              };\n              return activity;\n            }\n          })\n          .filter((obj) => obj)\n      );\n    const unknownTokenIds: string[] = [];\n    const tokenTxs = await (await fetch(`${CONSTANTS.API_URL}/tokens/transfers?anyof.from.to=${address}&limit=20&offset=0&sort.desc=id`)).json();\n    const tokenArr = [];\n    const opIds = [];\n    for (let i = 0; i < tokenTxs.length; ++i) {\n      const tokenId = `${tokenTxs[i].token.contract.address}:${tokenTxs[i].token.tokenId}`;\n      if (tokenTxs[i].token.contract && tokenId) {\n        if (!knownTokenIds.includes(tokenId)) {\n          unknownTokenIds.push(tokenId);\n        }\n        const source: any = { address: tokenTxs[i].from?.address };\n        if (tokenTxs[i].from === '' && tokenTxs[i].token.contract) {\n          source.address = tokenTxs[i].contract.address;\n        }\n        if (tokenTxs[i].transactionId) {\n          opIds.push(tokenTxs[i].transactionId);\n        }\n        const activity: Activity = {\n          type: 'transaction',\n          block: '',\n          hash: '',\n          status: OpStatus.CONFIRMED,\n          amount: tokenTxs[i].amount,\n          tokenId,\n          source,\n          destination: { address: tokenTxs[i].to?.address ?? '' },\n          timestamp: new Date(tokenTxs[i].timestamp).getTime(),\n          opId: tokenTxs[i].transactionId ? `t${tokenTxs[i].transactionId}` : undefined\n        };\n        tokenArr.push(activity);\n      }\n    }\n    const extra = await this.getHashAndBlockByIds(opIds);\n    for (const token of tokenArr) {\n      if (extra[token?.opId]) {\n        token.block = extra[token?.opId].block;\n        token.hash = extra[token?.opId].hash;\n      }\n    }\n    let operations = tokenArr\n      .concat(ops)\n      .filter((op) => op?.entrypoint !== 'transfer' && op?.entrypoint !== 'claim')\n      .sort(function (a: any, b: any) {\n        if (b.timestamp === a.timestamp && a.opId && b.opId) {\n          return parseInt(new Big(b.opId.substring(1)).minus(a.opId.substring(1)).toString());\n        }\n        return b.timestamp - a.timestamp;\n      });\n    return { operations, unknownTokenIds };\n  }\n  private extractEntrypoint(op: any): string {\n    return op?.entrypoint ?? op?.parameter?.entrypoint ?? '';\n  }\n  async getTokenMetadata(contractAddress: string, id: string, skipTzkt: boolean): Promise<TokenMetadata> {\n    let meta;\n    let tokenType = 'FA2';\n    const tokenId = `${contractAddress}:${id}`;\n    if (this.tokenBalanceCache[tokenId]) {\n      meta = this.tokenBalanceCache[tokenId].token.metadata;\n      tokenType = this.tokenBalanceCache[tokenId].token.standard && this.tokenBalanceCache[tokenId].token.standard === 'fa1.2' ? 'FA1.2' : 'FA2';\n    }\n    if (meta) {\n      this.normalizeMetadata(meta, contractAddress, id);\n      this.filterMetadata(meta);\n    }\n    if (!(meta && (meta.name || meta.symbol) && !isNaN(meta.decimals) && meta.decimals >= 0) || skipTzkt) {\n      meta = null;\n    }\n    if (!meta) {\n      console.log('fallback on taquito', { contractAddress, id });\n      meta = await this.getTokenMetadataWithTaquito(contractAddress, id);\n      if (meta) {\n        this.normalizeMetadata(meta, contractAddress, id);\n        this.filterMetadata(meta);\n      }\n    }\n    if (!(meta && (meta.name || meta.symbol) && !isNaN(meta.decimals) && meta.decimals >= 0)) {\n      meta = null;\n    }\n    if (!meta) {\n      console.warn(`cannot find token_id ${id} for contract: ${contractAddress}`);\n      return null;\n    }\n    return { ...meta, tokenType };\n  }\n  async getTokenMetadataWithTaquito(contractAddress, id) {\n    const contract = await this.Tezos.contract.at(contractAddress, tzip12);\n    let metadata: any;\n    if (['KT1TnVQhjxeNvLutGvzwZvYtC7vKRpwPWhc6'].includes(contractAddress)) {\n      // nl hotfix\n      const contract = await this.Tezos.contract.at(contractAddress);\n      const storage: any = await contract.storage();\n      const parsed_uri = storage.token_metadata_uri.replace('{tokenId}', id);\n      const response = await (await fetch(parsed_uri)).json();\n      if (response) {\n        response.tokenId = id;\n        metadata = response;\n      }\n    } else {\n      metadata = await contract.tzip12().getTokenMetadata(Number(id));\n    }\n    return metadata;\n  }\n  async getAllTokenBalances(address: string): Promise<Array<Token>> {\n    const fetchToken = async (offset: number): Promise<Array<any>> => {\n      let res = await (\n        await fetch(`${CONSTANTS.API_URL}/tokens/balances?account=${address}&offset=${offset}&limit=${this.TZKT_TOKEN_QUERY_SIZE}&balance.ne=0`)\n      ).json();\n      if (res?.length) {\n        if (res.length === this.TZKT_TOKEN_QUERY_SIZE) {\n          // get more if limit reached\n          return [...res, ...(await fetchToken(offset + this.TZKT_TOKEN_QUERY_SIZE))];\n        } else {\n          return res;\n        }\n      } else {\n        return [];\n      }\n    };\n    let tzktTokensResponse = await fetchToken(0);\n    const tokenBalances: Token[] = [];\n    for (let i = 0; i < tzktTokensResponse.length; ++i) {\n      if (tzktTokensResponse[i]?.balance && tzktTokensResponse[i].token?.contract?.address && tzktTokensResponse[i].token?.tokenId !== undefined) {\n        const tokenId: string = `${tzktTokensResponse[i].token.contract.address}:${tzktTokensResponse[i].token.tokenId}`;\n        tokenBalances.push({ tokenId, balance: tzktTokensResponse[i].balance });\n        this.tokenBalanceCache[tokenId] = tzktTokensResponse[i];\n      }\n    }\n    return tokenBalances;\n  }\n  private filterMetadata(meta: any) {\n    const keys = [\n      { key: 'name', type: 'string' },\n      { key: 'balance', type: 'string' },\n      { key: 'symbol', type: 'string' },\n      { key: 'contractAddress', type: 'string' },\n      { key: 'id', type: 'string' },\n      { key: 'decimals', type: 'string' },\n      { key: 'description', type: 'string' },\n      { key: 'artifactUri', type: 'string', toAsset: true },\n      { key: 'displayUri', type: 'string', toAsset: true },\n      { key: 'thumbnailUri', type: 'string', toAsset: true },\n      { key: 'isTransferable', type: 'boolean' },\n      { key: 'shouldPreferSymbol', type: 'boolean' },\n      { key: 'isBooleanAmount', type: 'boolean' },\n      { key: 'series', type: 'string' },\n      { key: 'ttl', type: 'string' }\n    ];\n    let metadata: any = {};\n    for (const a of keys) {\n      if (typeof meta[a.key] === a.type) {\n        if (a.toAsset) {\n          // extract mime type\n          if (meta?.formats?.length && Array.isArray(meta?.formats)) {\n            const index = meta.formats.findIndex((b) => b.uri === meta[a.key]);\n            if (index !== -1 && meta.formats[index].uri && meta.formats[index].mimeType) {\n              meta[a.key] = { uri: meta[a.key], mimeType: meta.formats[index].mimeType };\n            }\n          }\n          if (typeof meta[a.key] === 'string') {\n            meta[a.key] = { uri: meta[a.key], mimeType: 'unknown' };\n          }\n        }\n        metadata[a.key] = meta[a.key];\n      }\n    }\n    return metadata;\n  }\n  private normalizeMetadata(meta: any, contractAddress: string, id: string) {\n    mutableConvertObjectPropertiesSnakeToCamel(meta);\n    for (let key of Object.keys(meta)) {\n      if (typeof meta[key] === 'number') {\n        meta[key] = `${meta[key]}`;\n      }\n    }\n    this.handleMetadataExceptions(meta, contractAddress, id);\n    if (meta?.isTransferable && typeof meta?.isTransferable === 'string') {\n      meta.isTransferable = meta.isTransferable?.toLowerCase() === 'false' ? false : meta.isTransferable?.toLowerCase() === 'true' ? true : undefined;\n    }\n    if (meta?.shouldPreferSymbol && typeof meta?.shouldPreferSymbol === 'string') {\n      meta.shouldPreferSymbol =\n        meta.shouldPreferSymbol?.toLowerCase() === 'false' ? false : meta.shouldPreferSymbol?.toLowerCase() === 'true' ? true : undefined;\n    }\n    if (meta?.isBooleanAmount && typeof meta?.isBooleanAmount === 'string') {\n      meta.isBooleanAmount = meta.isBooleanAmount?.toLowerCase() === 'false' ? false : meta.isBooleanAmount?.toLowerCase() === 'true' ? true : undefined;\n    }\n  }\n  handleMetadataExceptions(meta: any, contractAddress: string, id: string) {\n    // hen\n    if (meta?.symbol === 'OBJKT') {\n      if (!meta.displayUri && meta.formats?.length) {\n        meta.displayUri = meta.formats[0].uri;\n      }\n      if (meta.displayUri && meta.thumbnailUri) {\n        delete meta.thumbnailUri;\n      }\n    }\n    if (['KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd', 'KT1CAbPGHUWvkSA9bxMPkqSgabgsjtmRYEda'].includes(contractAddress) /* Dogami */ && meta?.formats) {\n      if (typeof meta.formats[0] === 'string') {\n        meta.formats = JSON.parse(meta.formats);\n      }\n    }\n    // fxHash\n    if (contractAddress === 'KT1U6EHmNxJTkvaWJ4ThczG4FSDaHC21ssvi' && meta?.artifactUri) {\n      delete meta.artifactUri;\n    }\n    // Plenty + HEH\n    if (!meta.displayUri && !meta.thumbnailUri && meta?.icon) {\n      meta.thumbnailUri = { uri: meta.icon, mimeType: 'unknown' };\n    }\n    if (\n      (contractAddress === 'KT1AWoUQAuUudqpc75cGukWufbfim3GRn8h6' /* Flex */ ||\n        contractAddress === 'KT1Lz7Jd6Sh1zUE66nDGS7hGnjwcyTBCiYbF' /* BV */ ||\n        contractAddress === 'KT1D1XtWFoQDPtuYzbkeRJhcDgH6CDem2FkZ' /* BV */ ||\n        contractAddress === 'KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd') /* Dogami */ &&\n      meta?.formats?.length\n    ) {\n      meta.displayUri = meta.artifactUri = meta.formats?.find((f) => f?.mimeType?.startsWith('model/')) ?? meta.displayUri;\n    }\n    if (contractAddress === 'KT1NVvPsNDChrLRH5K2cy6Sc9r1uuUwdiZQd') {\n      // override wrong mimeType\n      meta.thumbnailUri = { uri: meta.thumbnailUri, mimeType: 'video/mp4' };\n    }\n    // Rarible\n    if (contractAddress === 'KT18pVpRXKPY2c4U2yFEGSH3ZnhB2kL8kwXS') {\n      meta.thumbnailUri = meta.displayUri = meta.formats[0].uri;\n    }\n  }\n  async getEntrypointMicheline(contract: string, entrypoint: string) {\n    return (await (await fetch(`${CONSTANTS.API_URL}/contracts/${contract}/entrypoints/${entrypoint}?micheline=true&json=false`)).json())?.michelineParameters;\n  }\n}\nexport function mutableConvertObjectPropertiesSnakeToCamel(data: Object) {\n  for (const key in data) {\n    if (key.charAt(0).toLowerCase() !== key.charAt(0)) {\n      data[key.charAt(0).toLowerCase() + key.slice(1)] = data[key];\n    }\n    if (key.indexOf('_') !== -1) {\n      const aryCamelKey = [];\n      for (let i = 0; i < key.length; i++) {\n        const char = key.charAt(i);\n        if (char === '_') {\n          aryCamelKey.push(key.charAt(i + 1).toUpperCase());\n          i++;\n        } else {\n          aryCamelKey.push(char);\n        }\n      }\n      const camelKey = aryCamelKey.join('');\n      if (!data.hasOwnProperty(camelKey)) {\n        data[camelKey] = data[key];\n        delete data[key];\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OperationService } from '../operation/operation.service';\nimport * as zxcvbn from 'zxcvbn';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { TranslateService } from '@ngx-translate/core';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { utils } from '@tezos-core-tools/crypto-utils';\nimport * as bip39 from 'bip39';\n@Injectable()\nexport class InputValidationService {\n  constructor(private operationService: OperationService, private translate: TranslateService) {}\n  /*\n    Input validations\n  */\n  mnemonics(mnemonics: string): boolean {\n    return this.operationService.validMnemonic(mnemonics);\n  }\n  password(password: string): boolean {\n    return zxcvbn(password).score === 4;\n  }\n  passwordStrengthDisplay(password: string): string {\n    if (!password) {\n      return '';\n    }\n    switch (zxcvbn(password).score) {\n      case 0: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.CATASTROPHIC'); // 'Catastrophic!'\n      }\n      case 1: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.VERYWEAK'); // 'Very weak!'\n      }\n      case 2: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.WEAK'); // 'Weak!'\n      }\n      case 3: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.WEAK'); // 'Weak!'\n      }\n      case 4: {\n        return this.translate.instant('INPUTVALIDATIONCOMPONENT.STRONG'); // 'Strong!'\n      }\n      default: {\n        return '';\n      }\n    }\n  }\n  address(address: string): Boolean {\n    return this.operationService.validAddress(address);\n  }\n  torusAccount(verifierId: string, loginType: string): Boolean {\n    switch (loginType) {\n      case 'google':\n        return this.email(verifierId);\n      case 'email':\n        return this.email(verifierId);\n      case 'reddit':\n        return this.redditAccount(verifierId);\n      case 'twitter':\n        return this.twitterAccount(verifierId);\n      case 'domain':\n        return this.tezosDomain(verifierId);\n      default:\n        return false;\n    }\n  }\n  redditAccount(username: string) {\n    // Letters, numbers, dashes, and underscores only\n    // Username must be between 3 and 20 characters\n    const re = /^[0-9a-zA-Z\\-\\_]{3,20}$/;\n    return re.test(username);\n  }\n  email(email: string): Boolean {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n  tezosDomain(domain: string) {\n    const a = domain.split('.');\n    // basic validation that is in the correct format\n    for (const sub of a) {\n      if (!sub.length) {\n        return false;\n      }\n    }\n    return a.length >= 2 && CONSTANTS.TEZOS_DOMAIN.TOP_DOMAINS.includes(a[a.length - 1]);\n  }\n  twitterAccount(username: string) {\n    // The only characters you can use are uppercase and lowercase letters, numbers, and the underscore character ( _ ).\n    const re = /^\\@{1}[0-9a-zA-Z\\_]{1,15}$/;\n    return re.test(username);\n  }\n  twitterId(id: string) {\n    const re = /^[0-9]+$/;\n    return re.test(id);\n  }\n  passphrase(passphrase: string): Boolean {\n    return true;\n  }\n  amount(amount: string, decimals: number = 6): Boolean {\n    const decimalsPart = decimals ? `(\\.[0-9]{1,${decimals}}){0,1}` : '';\n    const expr = new RegExp(`^(0|[1-9][0-9]*)${decimalsPart}$`, 'g');\n    if (amount === '' || amount === '0') {\n      // default value / zero\n      return true;\n    } else if (Number(amount) && amount.match(expr)) {\n      // Positive number\n      return true;\n    }\n    return false;\n  }\n  fee(fee: string): Boolean {\n    return this.amount(fee); // same as amount\n  }\n  gas(amount: string): Boolean {\n    if (amount === '' || amount === '0') {\n      // default value / zero\n      return true;\n    } else if (Number(amount) && 0 < Number(amount) && Number(amount) % 1 === 0) {\n      // Positive integer\n      return true;\n    } else {\n      return false;\n    }\n  }\n  storage(amount: string) {\n    return this.gas(amount);\n  }\n  relativeLimit(limit: string) {\n    if (limit?.length > 2 && limit.startsWith('+') && limit.endsWith('%')) {\n      return this.gas(limit.slice(1, -1));\n    }\n    return false;\n  }\n  code(code: string): Boolean {\n    if (code && code.length === 40 && code.match(/^[0-9a-f]*$/g)) {\n      // 40 hex chars\n      return true;\n    } else {\n      return false;\n    }\n  }\n  derivationPath(path: string): Boolean {\n    const m = path.match(/^44\\'\\/1729(\\'\\/[0-9]+)+\\'$/g);\n    if (m || path === \"44'/1729'\") {\n      return true;\n    }\n    return false;\n  }\n  hexString(hex: string): Boolean {\n    if (hex && hex.match(/^[a-f0-9]*$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  isMessageSigning(payload: string): boolean {\n    if (payload.match(/^0501[a-f0-9]{8}54657a6f73205369676e6564204d6573736167653a20[a-f0-9]*$/)) {\n      return true;\n    }\n    return false;\n  }\n  isMichelineExpr(hex: string) {\n    try {\n      if (!this.hexString(hex)) {\n        throw new Error('Not a hex string');\n      }\n      if (hex.slice(0, 2) !== '05') {\n        throw new Error('invalid prefix');\n      }\n      const parsedPayload = valueDecoder(Uint8ArrayConsumer.fromHexString(hex.slice(2)));\n      console.log('Parsed sign payload', parsedPayload);\n    } catch (e) {\n      console.warn(e.message ? 'Decoding: ' + e.message : e);\n      return false;\n    }\n    return true;\n  }\n  invalidMnemonic(words: string): string {\n    if (utils.validMnemonic(words)) {\n      return '';\n    }\n    // number of words\n    const wordCount = words?.split(' ').filter((w) => w?.length > 0).length;\n    if (![12, 15, 18, 21, 24].includes(wordCount)) {\n      let extra = '';\n      if (wordCount >= 11 && wordCount <= 25) {\n        const rest = (wordCount % 3) - 1;\n        extra = rest ? ', missing one word?' : ', one word too many?';\n      }\n      return `Invalid number of words: ${wordCount}${extra}`;\n    }\n    // words in wordlist\n    if (words?.split(' ')) {\n      for (let word of words?.split(' ').filter((w) => w?.length > 0)) {\n        const r = bip39.wordlists.english.filter((w) => w === word);\n        if (r.length === 0 && word) {\n          return `Invalid seed word: ${word}`;\n        }\n      }\n    }\n    // checksum\n    return 'Invalid checksum! Double-check the order of the seed words.';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OperationService } from '../../services/operation/operation.service';\nimport { TorusService } from '../../services/torus/torus.service';\nimport { WalletService } from '../../services/wallet/wallet.service';\nimport { InputValidationService } from '../../services/input-validation/input-validation.service';\nimport { TezosDomainsService } from '../../services/tezos-domains/tezos-domains.service';\n\nexport enum LookupType { // ordered in priority\n  AddressBook,\n  TezosDomains,\n  Google,\n  Reddit,\n  Twitter,\n  Alias\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LookupService {\n  public records: {\n    address: string;\n    data: { name: string; lookupType: LookupType }[];\n  }[] = [];\n  private pendingLookups: Record<string, number> = {};\n  constructor(\n    private operationService: OperationService,\n    private torusService: TorusService,\n    private walletService: WalletService,\n    private inputValidationService: InputValidationService,\n    private tezosDomainsService: TezosDomainsService\n  ) {\n    this.initCheck();\n  }\n  initCheck() {\n    if (!this.records.length && this.walletService.wallet && this.walletService.wallet.lookups.length) {\n      console.log('### Loading lookups from memory');\n      this.records = this.walletService.wallet.lookups;\n    }\n  }\n  add(address: string, name: string, lookupType: LookupType) {\n    console.log('#name ' + name, lookupType);\n    const { x, y } = this.index(address, lookupType);\n    if (x !== -1) {\n      if (y === -1) {\n        this.records[x].data.push({ name, lookupType });\n      } else if (lookupType === LookupType.TezosDomains) {\n        this.records[x].data[y] = { name, lookupType };\n      }\n    } else {\n      this.records.push({ address, data: [{ name, lookupType }] });\n    }\n    this.walletService.wallet.lookups = this.records;\n    this.walletService.storeWallet();\n  }\n  clear() {\n    this.records = [];\n    this.pendingLookups = {};\n  }\n  mark(address: string) {\n    const { x, y } = this.indexTop(address);\n    if (x === -1) {\n      this.records.push({ address, data: [] });\n    }\n    this.walletService.storeWallet();\n  }\n  async recheckWalletAddresses(force: boolean) {\n    console.log('lookup wallet addresses');\n    for (const address of this.walletService.wallet.getImplicitAccounts()) {\n      this.check(address, force);\n    }\n  }\n  async check(address: any, force: boolean = false) {\n    if (address?.address !== undefined) {\n      address = address.address;\n    }\n    if (typeof address !== 'string') {\n      return;\n    }\n    this.initCheck();\n    if (force) {\n      console.log('Forced recheck for: ' + address);\n    }\n    if (address && !this.pendingLookups[address]) {\n      const { x } = this.index(address, 0);\n      if (x === -1 || force) {\n        // DirectAuth - disabled\n        // if (address && address.slice(0, 3) === 'tz2') {\n        //   if (x === -1) {\n        //     this.pendingLookups[address]++;\n        //     this.torusLookup(address);\n        //   }\n        // }\n        // Tezos Domains\n        this.pendingLookups[address]++;\n        let domain = '';\n        try {\n          domain = await this.tezosDomainsService.getDomainFromAddress(address);\n        } catch (e) {\n          console.log(address, e);\n          this.pendingLookups[address]--;\n          return;\n        }\n        this.pendingLookups[address]--;\n        if (domain || domain === '') {\n          this.add(address, domain, LookupType.TezosDomains);\n        } else {\n          this.mark(address);\n        }\n      }\n    }\n  }\n  torusLookup(address: string) {\n    this.operationService.torusKeyLookup(address).subscribe(async (ans: any) => {\n      if (ans) {\n        if (ans.result && ans.result.Verifiers) {\n          const keys = Object.keys(ans.result.Verifiers);\n          const verifierMap = this.torusService.verifierMap;\n          for (const key of keys) {\n            if (key === verifierMap['google'].verifier) {\n              this.add(address, ans.result.Verifiers[verifierMap['google'].verifier][0], LookupType.Google);\n            } else if (key === verifierMap['reddit'].verifier) {\n              this.add(address, ans.result.Verifiers[verifierMap['reddit'].verifier][0], LookupType.Reddit);\n            } else if (key === verifierMap['twitter'].verifier) {\n              const verifierId = ans.result.Verifiers[verifierMap['twitter'].verifier][0];\n              const verifierArray = verifierId.split('|');\n              if (verifierArray[0] === 'twitter' && this.inputValidationService.twitterId(verifierArray[1])) {\n                const twitterId = verifierArray[1];\n                const { username } = await this.torusService.twitterLookup(undefined, twitterId);\n                if (username) {\n                  this.add(address, '@' + username, LookupType.Twitter);\n                }\n              }\n            } else {\n              console.log('Unhandled verifier result', ans);\n            }\n          }\n          this.pendingLookups[address]--;\n        } else if (!ans.noReveal) {\n          this.mark(address);\n        }\n      }\n    });\n  }\n  torusEntryExist(address: string): boolean {\n    const record = this.records[address];\n    if (record) {\n      for (const entry of record) {\n        if (entry.lookupType > 1) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  index(address: string, lookupType: LookupType) {\n    let [x, y] = Array(2).fill(-1);\n    for (let i = 0; i < this.records.length; i++) {\n      if (this.records[i].address === address) {\n        x = i;\n        for (let j = 0; j < this.records[i].data.length; j++) {\n          if (this.records[i].data[j].lookupType === lookupType) {\n            y = j;\n          }\n        }\n      }\n    }\n    return { x, y };\n  }\n  indexTop(address: string) {\n    let [x, y] = Array(2).fill(-1);\n    for (let i = 0; i < this.records.length; i++) {\n      if (this.records[i].address === address) {\n        x = i;\n        for (let j = 0; j < this.records[i].data.length; j++) {\n          if (this.records[i].data[j].lookupType < y || y === -1) {\n            if (this.records[i].data[j].lookupType !== LookupType.TezosDomains || this.records[i].data[j].name) {\n              // skip empty domain records\n              y = j;\n            }\n          }\n        }\n      }\n    }\n    return { x, y };\n  }\n  resolve(party: any): any {\n    this.initCheck();\n    const { x, y } = this.indexTop(party?.address);\n    if (x !== -1 && y !== -1) {\n      return {\n        name: this.records[x].data[y].name,\n        lookupType: this.records[x].data[y].lookupType,\n        address: party.address\n      };\n    } else if (party?.alias) {\n      this.add(party.address, party.alias, LookupType.Alias);\n      return this.resolve(party);\n    }\n    return { address: party?.address };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\n@Injectable()\nexport class MessageService {\n  spinnerOn = false;\n  spinnerText = '';\n  messages: any[] = [];\n  defaultTime = 10;\n  checked: Observable<boolean>;\n  beaconResponse = new Subject<boolean>();\n  readonly pairingCompleteMsg = 'Pairing complete! Waiting for permission request...';\n  add(message: string, seconds: number = this.defaultTime) {\n    const type = 'info';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addError(message: string, seconds: number = this.defaultTime) {\n    const type = 'danger';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addWarning(message: string, seconds: number = this.defaultTime) {\n    const type = 'warning';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000\n    });\n  }\n  addSuccess(message: string, seconds: number = this.defaultTime, ref: string = '') {\n    if (ref) {\n      console.log('ref set', ref);\n    }\n    const type = 'success';\n    console.log(type + ': ' + message);\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: seconds * 1000,\n      ref\n    });\n  }\n  modify(newMessage: string, ref: string) {\n    if (ref) {\n      for (const message of this.messages) {\n        if (message.ref === ref) {\n          message.msg = newMessage;\n        }\n      }\n    }\n  }\n  emailNotify(email: string, amount: string) {\n    console.log(email);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'email',\n      email,\n      amount\n    });\n  }\n  redditNotify(username: string, amount: string) {\n    console.log(username);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'Reddit',\n      username,\n      amount\n    });\n  }\n  twitterNotify(twitterId: string, handler: string, amount: string) {\n    console.log(twitterId);\n    const type = 'success';\n    this.messages.push({\n      type: type,\n      timeout: 0,\n      msg: 'Twitter',\n      twitterId,\n      handler,\n      amount\n    });\n  }\n  addBeaconWait(message: string) {\n    const type = 'info';\n    this.messages.push({\n      type: type,\n      msg: message,\n      timeout: 30 * 1000,\n      loader: true\n    });\n  }\n  async removeBeaconMsg(delay = false) {\n    setTimeout(\n      () => {\n        for (let i = 0; i < this.messages.length; i++) {\n          if (this.messages[i].loader) {\n            this.messages.splice(i, 1);\n            this.addSuccess(this.pairingCompleteMsg, 10);\n            break;\n          } else if (this.messages[i].msg === this.pairingCompleteMsg) {\n            this.messages.splice(i, 1);\n            break;\n          }\n        }\n      },\n      delay ? 500 : 0\n    );\n  }\n  clear() {\n    this.messages = [];\n  }\n  async startSpinner(text: string = '') {\n    this.spinnerText = text;\n    this.spinnerOn = true;\n  }\n  async stopSpinner(): Promise<void> {\n    this.spinnerText = '';\n    this.spinnerOn = false;\n    return;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of, Observable, MonoTypeOperatorFunction, from as fromPromise, iif, throwError } from 'rxjs';\nimport { catchError, retryWhen, flatMap, timeout, delay as delayOperator, debounceTime, concatMap } from 'rxjs/operators';\nimport { Buffer } from 'buffer';\nimport { blake2b } from 'blakejs';\nimport { sign as naclSign } from 'tweetnacl';\nimport * as Bs58check from 'bs58check';\nimport * as bip39 from 'bip39';\nimport Big from 'big.js';\nimport { localForger } from '@taquito/local-forging';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { ErrorHandlingPipe } from '../../pipes/error-handling.pipe';\nimport * as elliptic from 'elliptic';\nimport { instantiateSecp256k1, hexToBin, binToHex } from '@bitauth/libauth';\nimport { TokenService } from '../token/token.service';\nimport { isEqual } from 'lodash';\n\nconst httpOptions = { headers: { 'Content-Type': 'application/json' } };\n\nexport interface KeyPair {\n  sk: string | null;\n  pk: string | null;\n  pkh: string;\n}\n@Injectable()\nexport class OperationService {\n  nodeURL = CONSTANTS.NODE_URL;\n  prefix = {\n    tz1: new Uint8Array([6, 161, 159]),\n    tz2: new Uint8Array([6, 161, 161]),\n    tz3: new Uint8Array([6, 161, 164]),\n    edpk: new Uint8Array([13, 15, 37, 217]),\n    sppk: new Uint8Array([3, 254, 226, 86]),\n    edsk: new Uint8Array([43, 246, 78, 7]),\n    spsk: new Uint8Array([17, 162, 224, 201]),\n    edsig: new Uint8Array([9, 245, 205, 134, 18]),\n    spsig: new Uint8Array([13, 115, 101, 19, 63]),\n    sig: new Uint8Array([4, 130, 43]),\n    o: new Uint8Array([5, 116]),\n    B: new Uint8Array([1, 52]),\n    TZ: new Uint8Array([3, 99, 29]),\n    KT: new Uint8Array([2, 90, 121])\n  };\n  microTez = new Big(1000000);\n  feeHardCap = 100; //tez\n  constructor(private http: HttpClient, private errorHandlingPipe: ErrorHandlingPipe, private tokenService: TokenService) {}\n  /*\n    Returns an observable for the activation of an ICO identity\n  */\n  activate(pkh: string, secret: string): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          const fop: any = {\n            branch: header.hash,\n            contents: [\n              {\n                kind: 'activate_account',\n                pkh: pkh,\n                secret: secret\n              }\n            ]\n          };\n          return this.postRpc('chains/main/blocks/head/helpers/forge/operations', fop).pipe(\n            flatMap((opbytes: any) => {\n              const sopbytes: string = opbytes + Array(129).join('0');\n              fop.protocol = header.protocol;\n              fop.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((preApplyResult: any) => {\n                  console.log(JSON.stringify(preApplyResult));\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes)).pipe(\n                    flatMap((final: any) => {\n                      return this.opCheck(final);\n                    })\n                  );\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  opCheck(final: any, newPkh: string = null): Observable<any> {\n    if (typeof final === 'string' && final.length === 51) {\n      return of({\n        success: true,\n        payload: {\n          opHash: final,\n          newPkh: newPkh\n        }\n      });\n    } else {\n      return of({\n        success: false,\n        payload: {\n          opHash: null,\n          msg: final\n        }\n      });\n    }\n  }\n  /*\n    Returns an observable for the origination of new accounts.\n  */\n  originate(origination: any, fee: number = 0, keys: KeyPair): Observable<any> {\n    console.log(fee, origination);\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: number) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  const counter: number = Number(actions);\n                  const fop = this.createOriginationObject(header.hash, counter, manager, origination, fee, keys.pk, keys.pkh);\n                  return this.operation(fop, header, keys, true);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  createOriginationObject(hash: string, counter: number, manager: string, origination: any, fee: number, pk: string, pkh: string): any {\n    const fop: any = {\n      branch: hash,\n      contents: []\n    };\n    const gas_limit = origination.gasLimit.toString();\n    const storage_limit = origination.storageLimit.toString();\n    if (manager === null) {\n      // Reveal\n      fop.contents.push({\n        kind: 'reveal',\n        source: pkh,\n        fee: '0',\n        counter: (++counter).toString(),\n        gas_limit: '1000',\n        storage_limit: '0',\n        public_key: pk\n      });\n    }\n    fop.contents.push({\n      kind: 'origination',\n      source: pkh,\n      fee: this.microTez.times(fee).toString(),\n      counter: (++counter).toString(),\n      gas_limit,\n      storage_limit,\n      balance: this.microTez.times(origination.balance).toString(),\n      script: origination.script\n    });\n    return fop;\n  }\n  /*\n    Returns an observable for the transaction of tez.\n  */\n  transfer(from: string, transactions: any, fee: number, keys: KeyPair, tokenTransfer: string = ''): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: any) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  const counter: number = Number(actions);\n                  const fop = this.createTransactionObject(header.hash, counter, manager, transactions, keys.pkh, keys.pk, from, fee, tokenTransfer);\n                  return this.operation(fop, header, keys);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  createTransactionObject(\n    hash: string,\n    counter: number,\n    manager: string,\n    transactions: any,\n    pkh: string,\n    pk: string,\n    from: string,\n    fee: number,\n    tokenTransfer: string\n  ): any {\n    const fop: any = {\n      branch: hash,\n      contents: []\n    };\n    if (manager === null) {\n      // Reveal\n      fop.contents.push({\n        kind: 'reveal',\n        source: pkh,\n        fee: '0',\n        counter: (++counter).toString(),\n        gas_limit: '1000',\n        storage_limit: '0',\n        public_key: pk\n      });\n    }\n    for (let i = 0; i < transactions.length; i++) {\n      const currentFee = i === transactions.length - 1 ? this.microTez.times(fee).toString() : '0';\n      const gasLimit = transactions[i].gasLimit.toString();\n      const storageLimit = transactions[i].storageLimit.toString();\n      if (tokenTransfer) {\n        console.log('Invoke contract: ' + tokenTransfer);\n        let invocation: any;\n        const { kind, decimals, contractAddress, id } = this.tokenService.getAsset(tokenTransfer);\n        const txAmount = Big(10 ** decimals).times(transactions[i].amount);\n        if (!txAmount.mod(1).eq(0)) {\n          throw new Error(`the amount ${transactions[i].amount} is not within ${decimals} decimals`);\n        }\n        if (kind === 'FA1.2') {\n          invocation = this.getFA12Transaction(pkh, transactions[i].destination, txAmount.toFixed(0));\n        } else if (kind === 'FA2') {\n          invocation = this.getFA2Transaction(pkh, transactions[i].destination, txAmount.toFixed(0), id);\n        } else {\n          throw new Error('Unrecognized token kind');\n        }\n        fop.contents.push({\n          kind: 'transaction',\n          source: pkh,\n          fee: currentFee,\n          counter: (++counter).toString(),\n          gas_limit: gasLimit,\n          storage_limit: storageLimit,\n          amount: '0',\n          destination: contractAddress,\n          parameters: invocation\n        });\n      } else if (from.slice(0, 2) === 'tz') {\n        const transactionOp: any = {\n          kind: 'transaction',\n          source: from,\n          fee: currentFee,\n          counter: (++counter).toString(),\n          gas_limit: gasLimit,\n          storage_limit: storageLimit,\n          amount: this.microTez.times(transactions[i].amount).toString(),\n          destination: transactions[i].destination\n        };\n        if (transactions[i].parameters) {\n          transactionOp.parameters = transactions[i].parameters;\n        }\n        fop.contents.push(transactionOp);\n      } else if (from.slice(0, 2) === 'KT') {\n        if (transactions[i].parameters) {\n          throw new Error('Unsupported Operation');\n        }\n        if (transactions[i].destination.slice(0, 2) === 'tz') {\n          const managerTransaction = this.getContractPkhTransaction(transactions[i].destination, this.microTez.times(transactions[i].amount).toString());\n          fop.contents.push({\n            kind: 'transaction',\n            source: pkh,\n            fee: currentFee,\n            counter: (++counter).toString(),\n            gas_limit: gasLimit,\n            storage_limit: storageLimit,\n            amount: '0',\n            destination: from,\n            parameters: managerTransaction\n          });\n        } else if (transactions[i].destination.slice(0, 2) === 'KT') {\n          const managerTransaction = this.getContractKtTransaction(transactions[i].destination, this.microTez.times(transactions[i].amount).toString());\n          fop.contents.push({\n            kind: 'transaction',\n            source: pkh,\n            fee: currentFee,\n            counter: (++counter).toString(),\n            gas_limit: gasLimit,\n            storage_limit: storageLimit,\n            amount: '0',\n            destination: from,\n            parameters: managerTransaction\n          });\n        }\n      }\n    }\n    return fop;\n  }\n  /*\n    Returns an observable for the delegation of baking rights.\n  */\n  delegate(from: string, to: string, fee: number = 0, keys: KeyPair): Observable<any> {\n    return this.getHeader()\n      .pipe(\n        flatMap((header: any) => {\n          return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/counter`).pipe(\n            flatMap((actions: any) => {\n              return this.getRpc(`chains/main/blocks/head/context/contracts/${keys.pkh}/manager_key`).pipe(\n                flatMap((manager: any) => {\n                  if (fee > this.feeHardCap) {\n                    throw new Error('TooHighFee');\n                  }\n                  let counter: number = Number(actions);\n                  let delegationOp: any;\n                  if (from.slice(0, 2) === 'tz') {\n                    delegationOp = {\n                      kind: 'delegation',\n                      source: from,\n                      fee: this.microTez.times(fee).toString(),\n                      counter: (++counter).toString(),\n                      gas_limit: '1000',\n                      storage_limit: '0'\n                    };\n                    if (to !== '') {\n                      delegationOp.delegate = to;\n                    }\n                  } else if (from.slice(0, 2) === 'KT') {\n                    delegationOp = {\n                      kind: 'transaction',\n                      source: keys.pkh,\n                      fee: this.microTez.times(fee).toString(),\n                      counter: (++counter).toString(),\n                      gas_limit: '4380',\n                      storage_limit: '0',\n                      amount: '0',\n                      destination: from,\n                      parameters: to !== '' ? this.getContractDelegation(to) : this.getContractUnDelegation()\n                    };\n                  }\n                  const fop: any = {\n                    branch: header.hash,\n                    contents: [delegationOp]\n                  };\n                  if (manager === null) {\n                    fop.contents[1] = fop.contents[0];\n                    fop.contents[0] = {\n                      kind: 'reveal',\n                      source: keys.pkh,\n                      fee: '0',\n                      counter: counter.toString(),\n                      gas_limit: '1000',\n                      storage_limit: '0',\n                      public_key: keys.pk\n                    };\n                    fop.contents[1].counter = (Number(fop.contents[1].counter) + 1).toString();\n                  }\n                  return this.operation(fop, header, keys);\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  /*\n  Help function for operations\n  */\n  operation(fop: any, header: any, keys: KeyPair, origination: boolean = false): Observable<any> {\n    console.log('fop to send: ' + JSON.stringify(fop));\n    return this.postRpc('chains/main/blocks/head/helpers/forge/operations', fop).pipe(\n      flatMap((opbytes: any) => {\n        return this.localForge(fop).pipe(\n          flatMap((localOpbytes: string) => {\n            if (opbytes !== localOpbytes) {\n              throw new Error('ValidationError');\n            }\n            if (!keys.sk) {\n              fop.signature = 'edsigtXomBKi5CTRf5cjATJWSyaRvhfYNHqSUGrn4SdbYRcGwQrUGjzEfQDTuqHhuA8b2d8NarZjz8TRf65WkpQmo423BtomS8Q';\n              return this.postRpc('chains/main/blocks/head/helpers/scripts/run_operation', { operation: fop, chain_id: header.chain_id }).pipe(\n                flatMap((applied: any) => {\n                  console.log('applied: ' + JSON.stringify(applied));\n                  this.checkApplied([applied]);\n                  return of({\n                    success: true,\n                    payload: {\n                      unsignedOperation: opbytes\n                    }\n                  });\n                })\n              );\n            } else {\n              fop.protocol = header.protocol;\n              const signed = this.sign('03' + opbytes, keys.sk);\n              const sopbytes = signed.sbytes;\n              fop.signature = signed.edsig;\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((applied: any) => {\n                  console.log('applied: ' + JSON.stringify(applied));\n                  this.checkApplied(applied);\n                  console.log('sop: ' + sopbytes);\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes))\n                    .pipe(timeout(30000))\n                    .pipe(\n                      flatMap((final: any) => {\n                        let newPkh = null;\n                        if (origination) {\n                          newPkh = applied[0].contents[fop.contents.length - 1].metadata.operation_result.originated_contracts[0];\n                        }\n                        return this.opCheck(final, newPkh);\n                      })\n                    );\n                })\n              );\n            }\n          })\n        );\n      })\n    );\n  }\n  /*\n    Broadcast a signed operation to the network\n  */\n  broadcast(sopbytes: string): Observable<any> {\n    console.log('Broadcast...');\n    const opbytes = sopbytes.slice(0, sopbytes.length - 128);\n    const edsig = this.sig2edsig(sopbytes.slice(sopbytes.length - 128));\n    return fromPromise(localForger.parse(opbytes))\n      .pipe(\n        flatMap((fop: any) => {\n          fop.signature = edsig;\n          return this.getHeader().pipe(\n            flatMap((header: any) => {\n              fop.protocol = header.protocol;\n              return this.postRpc('chains/main/blocks/head/helpers/preapply/operations', [fop]).pipe(\n                flatMap((parsed: any) => {\n                  let newPkh = null;\n                  for (let i = 0; i < parsed[0].contents.length; i++) {\n                    if (parsed[0].contents[i].kind === 'origination') {\n                      newPkh = parsed[0].contents[i].metadata.operation_result.originated_contracts[0];\n                    }\n                  }\n                  return this.postRpc('injection/operation', JSON.stringify(sopbytes)).pipe(\n                    flatMap((final: any) => {\n                      return this.opCheck(final, newPkh);\n                    })\n                  );\n                })\n              );\n            })\n          );\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  torusKeyLookup(tz2address: string): Observable<any> {\n    // Make it into Promise\n    // Zero padding\n    if (tz2address.length !== 36 || tz2address.slice(0, 3) !== 'tz2') {\n      throw new Error('InvalidTorusAddress');\n    }\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${tz2address}/manager_key`).pipe(\n      flatMap((manager: any) => {\n        if (manager === null) {\n          return of({ noReveal: true });\n        } else {\n          return fromPromise(this.decompress(manager)).pipe(\n            flatMap((pk: any) => {\n              const torusReq = {\n                jsonrpc: '2.0',\n                method: 'KeyLookupRequest',\n                id: 10,\n                params: {\n                  pub_key_X: pk.X,\n                  pub_key_Y: pk.Y\n                }\n              };\n              const url = CONSTANTS.NETWORK === 'mainnet' ? 'https://torus-19.torusnode.com/jrpc' : 'https://teal-15-1.torusnode.com/jrpc';\n              return this.http.post(url, JSON.stringify(torusReq), httpOptions).pipe(\n                flatMap((ans: any) => {\n                  try {\n                    if (ans.result.PublicKey.X === pk.X && ans.result.PublicKey.Y === pk.Y) {\n                      return of(ans);\n                    } else {\n                      return of(null);\n                    }\n                  } catch {\n                    return of(null);\n                  }\n                })\n              );\n            })\n          );\n        }\n      })\n    );\n  }\n  checkApplied(applied: any) {\n    let failed = false;\n    for (let i = 0; i < applied[0].contents.length; i++) {\n      if (applied[0].contents[i].metadata.operation_result.status !== 'applied') {\n        failed = true;\n        if (applied[0].contents[i].metadata.operation_result.errors) {\n          console.log('Error in operation_result');\n          throw applied[0].contents[i].metadata.operation_result.errors[applied[0].contents[i].metadata.operation_result.errors.length - 1];\n        } else if (applied[0].contents[i].metadata.internal_operation_results) {\n          for (const ior of applied[0].contents[i].metadata.internal_operation_results) {\n            if (ior?.result?.status === 'failed') {\n              console.log('Error in internal_operation_results', ior);\n              throw ior.result.errors[ior.result.errors.length - 1];\n            }\n          }\n        }\n      }\n    }\n    if (failed) {\n      console.error(applied);\n      throw new Error('Uncaught error in applied');\n    }\n  }\n  errHandler(error: any): Observable<any> {\n    console.log(error);\n    if (error.error && typeof error.error === 'string') {\n      // parsing errors\n      error = error.error;\n      const lines = error.split('\\n').map((line: string) => {\n        return line.trim();\n      });\n      if (lines?.length) {\n        for (const i in lines) {\n          if (lines[i].startsWith('At /') && !lines[i].startsWith('At /kind')) {\n            const n = Number(i) + 1;\n            if (lines[n]) {\n              error = `${lines[i]} ${lines[n]}`;\n            }\n          }\n        }\n      }\n    }\n    if (error.error && error.error[0]) {\n      error = error.error[0];\n    }\n    if (error.message) {\n      error = this.errorHandlingPipe.transform(error.message);\n    } else if (error.id) {\n      if (error.with) {\n        error = this.errorHandlingPipe.transform(error.id, error.with, error?.location);\n      } else if (error.id === 'failure' && error.msg) {\n        error = this.errorHandlingPipe.transform(error.msg);\n      } else {\n        error = this.errorHandlingPipe.transform(error.id);\n      }\n    } else if (error.statusText) {\n      error = error.statusText;\n    } else if (typeof error === 'string') {\n      error = this.errorHandlingPipe.transform(error);\n    } else {\n      console.warn('Error not categorized', error);\n      error = 'Unrecogized error';\n    }\n    return of({\n      success: false,\n      payload: {\n        msg: error\n      }\n    });\n  }\n  // Local forge with Taquito\n  localForge(operation: any): Observable<string> {\n    return fromPromise(localForger.forge(operation)).pipe(\n      flatMap((localForgedBytes: string) => {\n        return of(localForgedBytes);\n      })\n    );\n  }\n  getHeader(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head~3/header`);\n  }\n  getBalance(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/balance`)\n      .pipe(\n        flatMap((balance: any) => {\n          return of({\n            success: true,\n            payload: {\n              balance: balance\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getDelegate(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}`)\n      .pipe(\n        flatMap((contract: any) => {\n          let delegate = '';\n          if (contract.delegate) {\n            delegate = contract.delegate;\n          }\n          return of({\n            success: true,\n            payload: {\n              delegate: delegate\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getVotingRights(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/votes/listings`)\n      .pipe(\n        flatMap((listings: any) => {\n          return of({\n            success: true,\n            payload: listings\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  isRevealed(pkh: string): Observable<boolean> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`)\n      .pipe(\n        flatMap((manager: any) => {\n          if (manager === null) {\n            return of(false);\n          } else {\n            return of(true);\n          }\n        })\n      )\n      .pipe(\n        catchError((err) => {\n          return of(true);\n        })\n      ); // conservative action\n  }\n  getManager(pkh: string): Observable<string> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}/manager_key`).pipe(\n      flatMap((pk: string) => {\n        return of(pk ?? '');\n      })\n    );\n  }\n  getAccount(pkh: string): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/contracts/${pkh}`)\n      .pipe(\n        flatMap((contract: any) => {\n          let delegate = '';\n          if (contract.delegate) {\n            delegate = contract.delegate;\n          }\n          return of({\n            success: true,\n            payload: {\n              balance: contract.balance,\n              manager: contract.manager,\n              delegate: delegate,\n              counter: contract.counter\n            }\n          });\n        })\n      )\n      .pipe(catchError((err) => this.errHandler(err)));\n  }\n  getVerifiedOpBytes(operationLevel, operationHash, pkh, pk): Observable<string> {\n    return this.getRpc(`chains/main/blocks/${operationLevel}/operation_hashes`).pipe(\n      flatMap((opHashes: any) => {\n        const opIndex = opHashes[3].findIndex((a) => a === operationHash);\n        return this.getRpc(`chains/main/blocks/${operationLevel}/operations`).pipe(\n          flatMap((op: any) => {\n            let ans = '';\n            op = op[3][opIndex];\n            const sig = op.signature;\n            delete op.chain_id;\n            delete op.signature;\n            delete op.hash;\n            delete op.protocol;\n            for (let i = 0; i < op.contents.length; i++) {\n              delete op.contents[i].metadata;\n              if (op.contents[i].managerPubkey) {\n                // Fix for mainnet\n                op.contents[i].manager_pubkey = op.contents[i].managerPubkey;\n                delete op.contents[i].managerPubkey;\n              }\n            }\n            return this.postRpc('chains/main/blocks/head/helpers/forge/operations', op).pipe(\n              flatMap((opBytes: any) => {\n                if (this.pk2pkh(pk) === pkh) {\n                  if (this.verify(opBytes, sig, pk)) {\n                    ans = opBytes + this.buf2hex(this.b58cdecode(sig, this.prefix.sig));\n                  } else {\n                    throw new Error('InvalidSignature');\n                  }\n                } else {\n                  throw new Error('InvalidPublicKey');\n                }\n                return of(ans);\n              })\n            );\n          })\n        );\n      })\n    );\n  }\n  getConstants(): Observable<any> {\n    return this.getRpc(`chains/main/blocks/head/context/constants`);\n  }\n  seed2keyPair(seed: Buffer): KeyPair {\n    if (!seed) {\n      throw new Error('NullSeed');\n    }\n    const keyPair = naclSign.keyPair.fromSeed(seed);\n    return {\n      sk: this.b58cencode(keyPair.secretKey, this.prefix.edsk),\n      pk: this.b58cencode(keyPair.publicKey, this.prefix.edpk),\n      pkh: this.b58cencode(blake2b(keyPair.publicKey, null, 20), this.prefix.tz1)\n    };\n  }\n  mnemonic2seed(mnemonic: string, passphrase: string = '') {\n    if (!this.validMnemonic(mnemonic)) {\n      throw new Error('InvalidMnemonic');\n    }\n    return bip39.mnemonicToSeedSync(mnemonic, passphrase).slice(0, 32);\n  }\n  mnemonic2entropy(mnemonic: string, passphrase: string = '') {\n    if (!this.validMnemonic(mnemonic)) {\n      throw new Error('InvalidMnemonic');\n    }\n    return bip39.mnemonicToEntropy(mnemonic);\n  }\n  validMnemonic(mnemonic: string) {\n    return bip39.validateMnemonic(mnemonic);\n  }\n  validAddress(address: string) {\n    try {\n      this.b58cdecode(address, this.prefix.tz1);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  pk2pkh(pk: string): string {\n    if (pk.length === 54 && pk.slice(0, 4) === 'edpk') {\n      const pkDecoded = this.b58cdecode(pk, this.prefix.edpk);\n      return this.b58cencode(blake2b(pkDecoded, null, 20), this.prefix.tz1);\n    } else if (pk.length === 55 && pk.slice(0, 4) === 'sppk') {\n      const pkDecoded = this.b58cdecode(pk, this.prefix.edpk);\n      return this.b58cencode(blake2b(pkDecoded, null, 20), this.prefix.tz2);\n    }\n    throw new Error('Invalid public key');\n  }\n  spPrivKeyToKeyPair(secretKey: string) {\n    let sk;\n    if (secretKey.match(/^[0-9a-f]{64}$/g)) {\n      sk = this.b58cencode(this.hex2buf(secretKey), this.prefix.spsk);\n    } else if (secretKey.match(/^spsk[1-9a-km-zA-HJ-NP-Z]{50}$/g)) {\n      sk = secretKey;\n    } else {\n      throw new Error('Invalid private key');\n    }\n    const keyPair = new elliptic.ec('secp256k1').keyFromPrivate(new Uint8Array(this.b58cdecode(sk, this.prefix.spsk)));\n    const yArray = keyPair.getPublic().getY().toArray();\n    const prefixVal = yArray[yArray.length - 1] % 2 ? 3 : 2; // Y odd / even\n    const pad = new Array(32).fill(0); // Zero-padding\n    const publicKey = new Uint8Array([prefixVal].concat(pad.concat(keyPair.getPublic().getX().toArray()).slice(-32)));\n    const pk = this.b58cencode(publicKey, this.prefix.sppk);\n    if (yArray.length < 32 && prefixVal === 3 && this.isInvertedPk(pk)) {\n      return this.spPrivKeyToKeyPair(this.invertSpsk(sk));\n    }\n    const pkh = this.pk2pkh(pk);\n    return { sk, pk, pkh };\n  }\n  isInvertedPk(pk: string): boolean {\n    /*\n      Detect keys with flipped sign and correct them.\n    */\n    const invertedPks = [\n      'sppk7cqh7BbgUMFh4yh95mUwEeg5aBPG1MBK1YHN7b9geyygrUMZByr', // test variable\n      'sppk7bMTva1MwF7cXjrcfoj6XVfcYgjrVaR9JKP3JxvPB121Ji5ftHT',\n      'sppk7bLtXf9CAVZh5jjDACezPnuwHf9CgVoAneNXQFgHknNtCyE5k8A'\n    ];\n    return invertedPks.includes(pk);\n  }\n  invertSpsk(sk: string) {\n    const x = new Uint8Array([...new Uint8Array(32).fill(0), ...this.b58cdecode(sk, this.prefix.spsk)]).slice(-32);\n    const p = this.hex2buf('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141'.toLowerCase());\n    let inv = []; // p - x\n    let remainder = 0;\n    for (let i = 31; i >= 0; i--) {\n      let sub = p[i] - x[i] - remainder;\n      if (sub < 0) {\n        sub += 256;\n        remainder = 1;\n      } else {\n        remainder = 0;\n      }\n      inv.push(sub);\n    }\n    if (remainder) {\n      throw new Error('Invalid X');\n    }\n    inv = inv.reverse();\n    return this.buf2hex(inv);\n  }\n  spPointsToPkh(pubX: string, pubY: string): string {\n    const key = new elliptic.ec('secp256k1').keyFromPublic({\n      x: pubX,\n      y: pubY\n    });\n    const yArray = key.getPublic().getY().toArray();\n    const prefixVal = yArray[yArray.length - 1] % 2 ? 3 : 2;\n    const pad = new Array(32).fill(0);\n    let publicKey = new Uint8Array([prefixVal].concat(pad.concat(key.getPublic().getX().toArray()).slice(-32)));\n    let pk = this.b58cencode(publicKey, this.prefix.sppk);\n    if (yArray.length < 32 && prefixVal === 3 && this.isInvertedPk(pk)) {\n      publicKey = new Uint8Array([2].concat(pad.concat(key.getPublic().getX().toArray()).slice(-32)));\n      pk = this.b58cencode(publicKey, this.prefix.sppk);\n    }\n    const pkh = this.pk2pkh(pk);\n    return pkh;\n  }\n  async decompress(pk: string): Promise<any> {\n    const decodedPk = this.b58cdecode(pk, this.prefix.sppk);\n    const hexPk = this.buf2hex(decodedPk);\n    const secp256k1 = await instantiateSecp256k1();\n    const compressed = hexToBin(hexPk);\n    const uncompressed = secp256k1.uncompressPublicKey(compressed);\n    const xy = binToHex(uncompressed).slice(2);\n    return { X: xy.slice(0, 64), Y: xy.slice(64, 128) };\n  }\n  hex2pk(hex: string): string {\n    return this.b58cencode(this.hex2buf(hex.slice(2, 66)), this.prefix.edpk);\n  }\n  hex2buf(hex) {\n    return new Uint8Array(\n      hex.match(/[\\da-f]{2}/gi).map(function (h) {\n        return parseInt(h, 16);\n      })\n    );\n  }\n  buf2hex(buffer) {\n    const byteArray = new Uint8Array(buffer),\n      hexParts = [];\n    for (let i = 0; i < byteArray.length; i++) {\n      const hex = byteArray[i].toString(16);\n      const paddedHex = ('00' + hex).slice(-2);\n      hexParts.push(paddedHex);\n    }\n    return hexParts.join('');\n  }\n  b58cencode(payload: any, prefixx?: Uint8Array) {\n    const n = new Uint8Array(prefixx.length + payload.length);\n    n.set(prefixx);\n    n.set(payload, prefixx.length);\n    return Bs58check.encode(Buffer.from(this.buf2hex(n), 'hex'));\n  }\n  b58cdecode(enc, prefixx) {\n    let n = Bs58check.decode(enc);\n    n = n.slice(prefixx.length);\n    return n;\n  }\n  ledgerPreHash(opbytes: string): string {\n    return this.buf2hex(blake2b(this.hex2buf(opbytes), null, 32));\n  }\n  sign(bytes: string, sk: string): any {\n    if (!['03', '05', '80'].includes(bytes.slice(0, 2))) {\n      throw new Error('Invalid prefix');\n    }\n    if (sk.slice(0, 4) === 'spsk') {\n      const hash = blake2b(this.hex2buf(bytes), null, 32);\n      bytes = bytes.slice(2);\n      const key = new elliptic.ec('secp256k1').keyFromPrivate(new Uint8Array(this.b58cdecode(sk, this.prefix.spsk)));\n      let sig = key.sign(hash, { canonical: true });\n      const pad = new Array(32).fill(0);\n      const r = pad.concat(sig.r.toArray()).slice(-32);\n      const s = pad.concat(sig.s.toArray()).slice(-32);\n      sig = new Uint8Array(r.concat(s));\n      const spsig = this.b58cencode(sig, this.prefix.spsig);\n      const sbytes = bytes + this.buf2hex(sig);\n      return {\n        bytes: bytes,\n        sig: sig,\n        edsig: spsig,\n        sbytes: sbytes\n      };\n    } else {\n      const hash = blake2b(this.hex2buf(bytes), null, 32);\n      bytes = bytes.slice(2);\n      const sig = naclSign.detached(hash, this.b58cdecode(sk, this.prefix.edsk));\n      const edsig = this.b58cencode(sig, this.prefix.edsig);\n      const sbytes = bytes + this.buf2hex(sig);\n      return {\n        bytes: bytes,\n        sig: sig,\n        edsig: edsig,\n        sbytes: sbytes\n      };\n    }\n  }\n  hexsigToEdsig(hex: string): string {\n    return this.b58cencode(this.hex2buf(hex), this.prefix.edsig);\n  }\n  verify(bytes: string, sig: string, pk: string): Boolean {\n    console.log('bytes', bytes);\n    const hash = blake2b(this.hex2buf(bytes), null, 32);\n    const signature = this.b58cdecode(sig, this.prefix.edsig);\n    const publicKey = this.b58cdecode(pk, this.prefix.edpk);\n    return naclSign.detached.verify(signature, hash, publicKey);\n  }\n  sig2edsig(sig: string): any {\n    return this.b58cencode(this.hex2buf(sig), this.prefix.edsig);\n  }\n  decodeString(bytes: string): string {\n    return Buffer.from(this.hex2buf(bytes)).toString('utf-8');\n  }\n  zarithDecode(hex: string): any {\n    let count = 0;\n    let value = 0;\n    while (1) {\n      const byte = Number('0x' + hex.slice(0 + count * 2, 2 + count * 2));\n      value += (byte & 127) * 128 ** count;\n      count++;\n      if ((byte & 128) !== 128) {\n        break;\n      }\n    }\n    return {\n      value: value,\n      count: count\n    };\n  }\n  zarithDecodeInt(hex: string): any {\n    let count = 0;\n    let value = Big(0);\n    while (1) {\n      const byte = Number('0x' + hex.slice(0 + count * 2, 2 + count * 2));\n      if (count === 0) {\n        value = Big((byte & 63) * 128 ** count).add(value);\n      } else {\n        value = Big(((byte & 127) * 2) >> 1)\n          .times(64 * 128 ** (count - 1))\n          .add(value);\n      }\n      count++;\n      if ((byte & 128) !== 128) {\n        break;\n      }\n    }\n    return {\n      value: value,\n      count: count\n    };\n  }\n  getContractDelegation(pkh: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        {\n          prim: 'NIL',\n          args: [{ prim: 'operation' }]\n        },\n        {\n          prim: 'PUSH',\n          args: [\n            { prim: 'key_hash' },\n            {\n              string: pkh\n            }\n          ]\n        },\n        { prim: 'SOME' },\n        { prim: 'SET_DELEGATE' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractUnDelegation() {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        {\n          prim: 'NIL',\n          args: [{ prim: 'operation' }]\n        },\n        {\n          prim: 'NONE',\n          args: [{ prim: 'key_hash' }]\n        },\n        { prim: 'SET_DELEGATE' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractPkhTransaction(to: string, amount: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n          prim: 'PUSH',\n          args: [\n            { prim: 'key_hash' },\n            {\n              string: to\n            }\n          ]\n        },\n        { prim: 'IMPLICIT_ACCOUNT' },\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'mutez' }, { int: amount }]\n        },\n        { prim: 'UNIT' },\n        { prim: 'TRANSFER_TOKENS' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getContractKtTransaction(to: string, amount: string) {\n    return {\n      entrypoint: 'do',\n      value: [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'address' }, { string: to }]\n        },\n        { prim: 'CONTRACT', args: [{ prim: 'unit' }] },\n        [\n          {\n            prim: 'IF_NONE',\n            args: [[[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]], []]\n          }\n        ],\n        {\n          prim: 'PUSH',\n          args: [{ prim: 'mutez' }, { int: amount }]\n        },\n        { prim: 'UNIT' },\n        { prim: 'TRANSFER_TOKENS' },\n        { prim: 'CONS' }\n      ]\n    };\n  }\n  getManagerScript(pkh: string) {\n    let pkHex: string;\n    if (pkh.slice(0, 2) === 'tz') {\n      pkHex = '00' + this.buf2hex(this.b58cdecode(pkh, this.prefix.tz1));\n    } else {\n      pkHex = pkh;\n    }\n    return {\n      code: [\n        {\n          prim: 'parameter',\n          args: [\n            {\n              prim: 'or',\n              args: [\n                {\n                  prim: 'lambda',\n                  args: [\n                    {\n                      prim: 'unit'\n                    },\n                    {\n                      prim: 'list',\n                      args: [\n                        {\n                          prim: 'operation'\n                        }\n                      ]\n                    }\n                  ],\n                  annots: ['%do']\n                },\n                {\n                  prim: 'unit',\n                  annots: ['%default']\n                }\n              ]\n            }\n          ]\n        },\n        {\n          prim: 'storage',\n          args: [\n            {\n              prim: 'key_hash'\n            }\n          ]\n        },\n        {\n          prim: 'code',\n          args: [\n            [\n              [\n                [\n                  {\n                    prim: 'DUP'\n                  },\n                  {\n                    prim: 'CAR'\n                  },\n                  {\n                    prim: 'DIP',\n                    args: [\n                      [\n                        {\n                          prim: 'CDR'\n                        }\n                      ]\n                    ]\n                  }\n                ]\n              ],\n              {\n                prim: 'IF_LEFT',\n                args: [\n                  [\n                    {\n                      prim: 'PUSH',\n                      args: [\n                        {\n                          prim: 'mutez'\n                        },\n                        {\n                          int: '0'\n                        }\n                      ]\n                    },\n                    {\n                      prim: 'AMOUNT'\n                    },\n                    [\n                      [\n                        {\n                          prim: 'COMPARE'\n                        },\n                        {\n                          prim: 'EQ'\n                        }\n                      ],\n                      {\n                        prim: 'IF',\n                        args: [\n                          [],\n                          [\n                            [\n                              {\n                                prim: 'UNIT'\n                              },\n                              {\n                                prim: 'FAILWITH'\n                              }\n                            ]\n                          ]\n                        ]\n                      }\n                    ],\n                    [\n                      {\n                        prim: 'DIP',\n                        args: [\n                          [\n                            {\n                              prim: 'DUP'\n                            }\n                          ]\n                        ]\n                      },\n                      {\n                        prim: 'SWAP'\n                      }\n                    ],\n                    {\n                      prim: 'IMPLICIT_ACCOUNT'\n                    },\n                    {\n                      prim: 'ADDRESS'\n                    },\n                    {\n                      prim: 'SENDER'\n                    },\n                    [\n                      [\n                        {\n                          prim: 'COMPARE'\n                        },\n                        {\n                          prim: 'EQ'\n                        }\n                      ],\n                      {\n                        prim: 'IF',\n                        args: [\n                          [],\n                          [\n                            [\n                              {\n                                prim: 'UNIT'\n                              },\n                              {\n                                prim: 'FAILWITH'\n                              }\n                            ]\n                          ]\n                        ]\n                      }\n                    ],\n                    {\n                      prim: 'UNIT'\n                    },\n                    {\n                      prim: 'EXEC'\n                    },\n                    {\n                      prim: 'PAIR'\n                    }\n                  ],\n                  [\n                    {\n                      prim: 'DROP'\n                    },\n                    {\n                      prim: 'NIL',\n                      args: [\n                        {\n                          prim: 'operation'\n                        }\n                      ]\n                    },\n                    {\n                      prim: 'PAIR'\n                    }\n                  ]\n                ]\n              }\n            ]\n          ]\n        }\n      ],\n      storage: { bytes: pkHex }\n    };\n  }\n  getFA12Transaction(from: string, to: string, amount: string) {\n    return {\n      entrypoint: 'transfer',\n      value: {\n        args: [\n          {\n            string: from\n          },\n          {\n            args: [\n              {\n                string: to\n              },\n              {\n                int: amount\n              }\n            ],\n            prim: 'Pair'\n          }\n        ],\n        prim: 'Pair'\n      }\n    };\n  }\n  getFA2Transaction(from: string, to: string, amount: string, id: string) {\n    return {\n      entrypoint: 'transfer',\n      value: [\n        {\n          prim: 'Pair',\n          args: [\n            {\n              string: from\n            },\n            [\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    string: to\n                  },\n                  {\n                    prim: 'Pair',\n                    args: [\n                      {\n                        int: id.toString()\n                      },\n                      {\n                        int: amount\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          ]\n        }\n      ]\n    };\n  }\n  getApproveAmountParameters(from: string, amount: string) {\n    return {\n      entrypoint: 'approve',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            int: amount\n          }\n        ]\n      }\n    };\n  }\n  getRevokeAmountParameters(from: string) {\n    return {\n      entrypoint: 'approve',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            int: '0'\n          }\n        ]\n      }\n    };\n  }\n  getXTZToTokenParameters(from: string, minimum: string, expirationTime: string) {\n    return {\n      entrypoint: 'xtzToToken',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimum\n              },\n              {\n                string: expirationTime\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n  getTokenToXTZParameters(from: string, minimumToken: string, minimumXTZ: string, expirationTime: string) {\n    return {\n      entrypoint: 'tokenToXtz',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumToken\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minimumXTZ\n                  },\n                  {\n                    string: expirationTime\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getAddLiquidityParameters(from: string, minimumLqt: string, minimumToken: string, expirationTime: string) {\n    return {\n      entrypoint: 'addLiquidity',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumLqt\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minimumToken\n                  },\n                  {\n                    string: expirationTime\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getRemoveLiquidityParameters(from: string, lqtBurn: string, minXtzWithdrawn: string, minTokensWithdrawn: string, expirationTime: string) {\n    return {\n      entrypoint: 'removeLiquidity',\n\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            string: from\n          },\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: lqtBurn\n              },\n              {\n                prim: 'Pair',\n                args: [\n                  {\n                    int: minXtzWithdrawn\n                  },\n                  {\n                    prim: 'Pair',\n                    args: [\n                      {\n                        int: minTokensWithdrawn\n                      },\n                      {\n                        string: expirationTime\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    };\n  }\n\n  getTezToTokenPaymentParameters(from: string, minimumToken: string) {\n    return {\n      entrypoint: 'tezToTokenPayment',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            int: minimumToken\n          },\n          {\n            string: from\n          }\n        ]\n      }\n    };\n  }\n\n  getTokenToTezPaymentParameters(from: string, minimumXtz: string, minimumToken: string) {\n    return {\n      entrypoint: 'tokenToTezPayment',\n      value: {\n        prim: 'Pair',\n        args: [\n          {\n            prim: 'Pair',\n            args: [\n              {\n                int: minimumToken\n              },\n              {\n                int: minimumXtz\n              }\n            ]\n          },\n          {\n            string: from\n          }\n        ]\n      }\n    };\n  }\n\n  parseTokenTransfer(op: any): { tokenId: string; to: string; amount: string } {\n    const opJson = JSON.stringify(op.parameters);\n    const addresses = opJson.match(/\\{\\\"string\\\":\\\"[^\\\"]*/g)?.map((s) => {\n      return s.slice(11);\n    });\n    const amounts = opJson.match(/\\{\\\"int\\\":\\\"[^\\\"]*/g)?.map((i) => {\n      return i.slice(8);\n    });\n    if (!addresses || !amounts) {\n      return null;\n    }\n    if (addresses.length === 2) {\n      if (amounts.length === 1) {\n        const fa12ref = this.getFA12Transaction(addresses[0], addresses[1], amounts[0]);\n        if (isEqual(fa12ref, op.parameters)) {\n          return {\n            tokenId: `${op.destination}:0`,\n            to: addresses[1],\n            amount: amounts[0]\n          };\n        }\n      } else if (amounts.length === 2) {\n        const fa2ref = this.getFA2Transaction(addresses[0], addresses[1], amounts[1], String(amounts[0]));\n        if (isEqual(fa2ref, op.parameters)) {\n          return {\n            tokenId: `${op.destination}:${amounts[0]}`,\n            to: addresses[1],\n            amount: amounts[1]\n          };\n        }\n      }\n    }\n    return null;\n  }\n  postRpc(path: string, payload: any): Observable<any> {\n    return this.http.post(`${this.nodeURL}/${path}`, payload, httpOptions).pipe(this.retryPipeline(path));\n  }\n  getRpc(path: string): Observable<any> {\n    return this.http.get(`${this.nodeURL}/${path}`).pipe(this.retryPipeline(path));\n  }\n  private retryPipeline(path: string, retries: number = 3): MonoTypeOperatorFunction<unknown> {\n    const retryWithWarning = (i, e) => {\n      if (i < retries) {\n        console.warn(`Retry ${i + 1}: ${path}`, e);\n      }\n      return of(e).pipe(delayOperator(250));\n    };\n    return retryWhen((errors) =>\n      errors.pipe(concatMap((e, i) => iif(() => i >= retries || !(e?.name === 'HttpErrorResponse'), throwError(e), retryWithWarning(i, e))))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { TokenData } from '../token/token.service';\nimport { Account } from '../wallet/wallet';\n\ninterface PrepareTokenTransfer {\n  account: Account;\n  tokenTransfer: string;\n  symbol: string;\n}\nexport enum BuyProvider {\n  Coinbase = 0,\n  Transak,\n  MoonPay\n}\ninterface MetadataUpdated {\n  contractAddress: string;\n  id: string;\n  token: TokenData;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n  public activeAccount = new BehaviorSubject(null);\n  public walletUpdated = new BehaviorSubject(null);\n  public metadataUpdated: BehaviorSubject<MetadataUpdated>;\n  public refreshTokens: BehaviorSubject<null>;\n  public confirmedOp: Subject<string>;\n  public prepareTokenTransfer: Subject<PrepareTokenTransfer>;\n  public nftsUpdated: BehaviorSubject<any>;\n  public origin: BehaviorSubject<string>;\n  public beaconResponse: Subject<boolean>;\n  public logout: Subject<boolean>;\n  public buy: Subject<BuyProvider>;\n  constructor() {\n    this.init();\n    this.logout.subscribe((o) => {\n      if (o) {\n        this.reset();\n      }\n    });\n  }\n  init() {\n    this.metadataUpdated = new BehaviorSubject<MetadataUpdated>(null);\n    this.refreshTokens = new BehaviorSubject<any>([]);\n    this.confirmedOp = new Subject<string>();\n    this.prepareTokenTransfer = new Subject<PrepareTokenTransfer>();\n    this.nftsUpdated = new BehaviorSubject<any>(undefined);\n    this.origin = new BehaviorSubject<string>(null);\n    this.beaconResponse = new Subject<boolean>();\n    this.logout = new Subject<boolean>();\n    this.buy = new Subject<BuyProvider>();\n  }\n  reset() {\n    this.metadataUpdated.next(null);\n    this.refreshTokens.next(null);\n    this.nftsUpdated.next(undefined);\n  }\n}\n","import Big from 'big.js';\n\nexport class Amount {\n  decimalPlaces: number = 6;\n  internalBigInt: Big = Big(0);\n  internalNormalised: number = 0;\n\n  constructor(c: any) {\n    if (c?.rpcAmount === undefined && c?.normalisedAmount === undefined) {\n      return;\n    }\n    this.decimalPlaces = c.decimalPlaces;\n    if (!!c?.rpcAmount) {\n      let multiplierIntValue = Math.round(Math.pow(10, this.decimalPlaces));\n      this.internalNormalised = parseFloat(Big(c.rpcAmount).div(multiplierIntValue).toString() || 0);\n      this.internalBigInt = Big(c.rpcAmount);\n    } else if (!!c?.normalisedAmount) {\n      let multiplierIntValue = Math.round(Math.pow(10, this.decimalPlaces));\n      this.internalNormalised = parseFloat(Big(c.normalisedAmount).toString() || 0);\n      this.internalBigInt = Big(c.normalisedAmount).times(multiplierIntValue);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport dexterCalculations from 'dexCalcs/dist/index-mobile.min';\nimport { Amount } from './classes/Amount';\nimport Big from 'big.js';\nimport { ChartSeries } from '../../../app/components/ui/chart/chart.component';\nimport { CONSTANTS } from '../../../environments/environment';\n@Injectable({ providedIn: 'root' })\nexport class SwapLiquidityService {\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  public storage = {};\n  public dipdupContracts = [];\n\n  constructor() {}\n\n  async fetchContracts(offset = 0): Promise<void> {\n    const baseUrl = `https://dex.dipdup.net/v1/graphql`;\n    const req = {\n      query: `{dipdupContract(where: {}, offset: ${offset}) {address, name, typename, updatedAt, createdAt}}`\n    };\n    try {\n      const response = await (\n        await fetch(baseUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json();\n      if (response?.data?.dipdupContract?.length > 0) {\n        this.dipdupContracts.concat(response.data.dipdupContract);\n        await this.fetchContracts(offset + 100);\n      } else if (offset === 0) {\n        throw new Error();\n      }\n      return;\n    } catch (e) {\n      throw new Error();\n    }\n  }\n\n  async fetchStorage(contract): Promise<void> {\n    try {\n      return await fetch(`${CONSTANTS.API_URL}/contracts/${contract}/storage`)\n        .then((r) => r.json())\n        .then((r) => {\n          this.storage[contract] = {};\n          this.storage[contract].total_pool = r['lqtTotal'];\n          this.storage[contract].tez_pool = r['xtzPool'];\n          this.storage[contract].token_pool = r['tokenPool'];\n        });\n    } catch (e) {\n      throw new Error();\n    }\n  }\n\n  settings(dex: string): {\n    fee: string;\n    burn: string;\n    includeSubsidy: boolean;\n  } {\n    switch (dex) {\n      case 'liquidityBaking':\n        return { fee: '0.1', burn: '0.1', includeSubsidy: false };\n      case 'quipuswap':\n        return { fee: '0.3', burn: '0', includeSubsidy: false };\n      default:\n        return { fee: '0.3', burn: '0', includeSubsidy: false };\n    }\n  }\n\n  createPoolAmounts(): { xtzPool: Amount; tokenPool: Amount } {\n    const xtzPool = new Amount({\n      rpcAmount: parseFloat(this.storage[this.lqdContract]?.tez_pool),\n      decimalPlaces: 6\n    });\n    const tokenPool = new Amount({\n      rpcAmount: parseFloat(this.storage[this.lqdContract]?.token_pool),\n      decimalPlaces: 8\n    });\n    return { xtzPool, tokenPool };\n  }\n\n  calculateXtzToToken(xtzToSell, xtzPool, tokenPool, maxSlippage, dex): { expected; minimum; rate; impactDouble } {\n    const expected = this.xtzToTokenExpectedReturn(xtzToSell, xtzPool, tokenPool, dex);\n    const minimum = this.xtzToTokenMinimumReturn(expected, maxSlippage);\n    const rate = this.xtzToTokenExchangeRateDisplay(xtzToSell, xtzPool, tokenPool, dex);\n    const priceImpact = this.xtzToTokenPriceImpact(xtzToSell, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { expected, minimum, rate, impactDouble };\n  }\n\n  calculateXtzToTokenFromToken(tokenToSell, xtzPool, tokenPool, maxSlippage, dex): { xtz; token } {\n    const result = this.calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, maxSlippage, dex);\n    const expected = this.xtzToTokenExpectedReturn(result.expected, xtzPool, tokenPool, dex);\n    const minimum = this.xtzToTokenMinimumReturn(expected, maxSlippage);\n    const rate = this.xtzToTokenExchangeRateDisplay(result.expected, xtzPool, tokenPool, dex);\n    const priceImpact = this.xtzToTokenPriceImpact(result.expected, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { xtz: result, token: { expected, minimum, rate, impactDouble } };\n  }\n\n  calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, maxSlippage, dex): { expected; minimum; rate; impactDouble } {\n    const expected = this.tokenToXtzExpectedReturn(tokenToSell, xtzPool, tokenPool, dex);\n    const minimum = this.tokenToXtzMinimumReturn(expected, maxSlippage);\n    const rate = this.tokenToXtzExchangeRateDisplay(tokenToSell, xtzPool, tokenPool, dex);\n    const priceImpact = this.tokenToXtzPriceImpact(tokenToSell, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { expected, minimum, rate, impactDouble };\n  }\n\n  calculateTokenToXTZFromXTZ(xtzToSell, xtzPool, tokenPool, maxSlippage, dex): { xtz; token } {\n    const result = this.calculateXtzToToken(xtzToSell, xtzPool, tokenPool, maxSlippage, dex);\n    const expected = this.tokenToXtzExpectedReturn(result.expected, xtzPool, tokenPool, dex);\n    const minimum = this.tokenToXtzMinimumReturn(expected, maxSlippage);\n    const rate = this.tokenToXtzExchangeRateDisplay(result.expected, xtzPool, tokenPool, dex);\n    const priceImpact = this.tokenToXtzPriceImpact(result.expected, xtzPool, tokenPool, dex);\n    const impactDouble = priceImpact ?? 0;\n    return { xtz: { expected, minimum, rate, impactDouble }, token: result };\n  }\n\n  calculateAddLiquidityXTZ(xtz, xtzPool, tokenPool, totalLiquidity, maxSlippage, dex): { liquidityExpected; liquidityMinimum; tokenRequired; exchangeRate } {\n    const tokenRequired = this.addLiquidityTokenRequired(xtz, xtzPool, tokenPool, dex);\n    const liquidityReturned = this.addLiquidityReturn(xtz, xtzPool, totalLiquidity, maxSlippage, dex);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtz, xtzPool, tokenPool, dex);\n    return {\n      liquidityExpected: liquidityReturned?.expected,\n      liquidityMinimum: liquidityReturned?.minimum,\n      tokenRequired,\n      exchangeRate\n    };\n  }\n\n  calculateAddLiquidityToken(token, xtzPool, tokenPool, totalLiquidity, maxSlippage, dex): { liquidityExpected; liquidityMinimum; xtzRequired; exchangeRate } {\n    const xtzRequired = this.addLiquidityXtzRequired(token, xtzPool, tokenPool, dex);\n    const liquidityReturned = this.addLiquidityReturn(xtzRequired, xtzPool, totalLiquidity, maxSlippage, dex);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtzRequired, xtzPool, tokenPool, dex);\n    return {\n      liquidityExpected: liquidityReturned?.expected,\n      liquidityMinimum: liquidityReturned?.minimum,\n      xtzRequired,\n      exchangeRate\n    };\n  }\n\n  calculateRemoveLiquidity(\n    liquidityBurned,\n    xtzPool,\n    tokenPool,\n    totalLiquidity,\n    maxSlippage,\n    dex\n  ): { xtzExpected; xtzMinimum; tokenExpected; tokenMinimum; exchangeRate } {\n    const xtzOut = this.removeLiquidityXtzReceived(liquidityBurned, totalLiquidity, xtzPool, maxSlippage, dex);\n    const tokenOut = this.removeLiquidityTokenReceived(liquidityBurned, totalLiquidity, tokenPool, maxSlippage);\n    const exchangeRate = this.xtzToTokenExchangeRateDisplay(xtzOut.expected, xtzPool, tokenPool, dex);\n\n    return {\n      xtzExpected: xtzOut?.expected,\n      xtzMinimum: xtzOut?.minimum,\n      tokenExpected: tokenOut?.expected,\n      tokenMinimum: tokenOut?.minimum,\n      exchangeRate\n    };\n  }\n\n  xtzToTokenExpectedReturn(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtz = xtzToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n    const result = dexterCalculations.xtzToTokenTokenOutput(\n      xtz.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  xtzToTokenMinimumReturn(tokenAmount: Amount, slippage: number): Amount {\n    const token = tokenAmount.internalBigInt;\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'xtzToTokenMinimumReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n    const result = dexterCalculations.xtzToTokenMinimumTokenOutput(token.toString(), slippage);\n    return new Amount({\n      rpcAmount: result?.value?.toString() || '0',\n      decimalPlaces: tokenAmount.decimalPlaces\n    });\n  }\n\n  xtzToTokenRequiredXtzFor(tokenAmount: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const tokenRequired = tokenAmount.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenXtzInput(\n      tokenRequired,\n      xtzPoolRpc,\n      tokenPoolRpc,\n      tokenAmount.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({ rpcAmount: result.toString() });\n  }\n\n  xtzToTokenExchangeRate(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const xtz = xtzToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenExchangeRate(xtz, xtzPoolRpc, tokenPoolRpc, dex.fee.toString(), dex.burn.toString(), dex.includeSibsidy);\n    return parseFloat(result.toString());\n  }\n\n  xtzToTokenExchangeRateDisplay(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): string {\n    const xtz = xtzToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n    const result = dexterCalculations.xtzToTokenExchangeRateForDisplay(\n      xtz.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return result?.toString() ?? '0';\n  }\n\n  xtzToTokenPriceImpact(xtzToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const xtz = xtzToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.xtzToTokenPriceImpact(\n      xtz.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result?.toString() ?? 0);\n  }\n\n  tokenToXtzExpectedReturn(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n    const result = dexterCalculations.tokenToXtzXtzOutput(\n      token.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: 6\n    });\n  }\n\n  tokenToXtzMinimumReturn(xtzAmount: Amount, slippage: number): Amount {\n    const xtz = xtzAmount.internalBigInt;\n\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'tokenToXtzMinimumReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const result = dexterCalculations.tokenToXtzMinimumXtzOutput(xtz.toString(), slippage);\n    return new Amount({\n      rpcAmount: result?.toString() || '0',\n      decimalPlaces: 6\n    });\n  }\n\n  tokenToXtzRequiredTokenFor(xtzAmount: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtzRequired = xtzAmount.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzTokenInput(\n      xtzRequired,\n      xPool,\n      tPool,\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return new Amount({\n      rpcAmount: result.toString(),\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  tokenToXtzExchangeRate(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzExchangeRate(\n      token.toString(),\n      xtzPoolRpc,\n      tokenPoolRpc,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result.toString());\n  }\n\n  tokenToXtzExchangeRateDisplay(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): string {\n    const token = tokenToSell.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzExchangeRateForDisplay(\n      token.toString(),\n      xPool.toString(),\n      tPool.toString(),\n      tokenPool.decimalPlaces,\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return result?.toString() ?? '0';\n  }\n\n  tokenToXtzMarketRate(xtzPool: Amount, tokenPool: Amount): number {\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzMarketRate(xPool, tPool, tokenPool.decimalPlaces);\n    return parseFloat(parseFloat(result.toString()).toFixed(tokenPool.decimalPlaces));\n  }\n\n  tokenToXtzPriceImpact(tokenToSell: Amount, xtzPool: Amount, tokenPool: Amount, dex): number {\n    const token = tokenToSell.internalBigInt;\n    const xtzPoolRpc = xtzPool.internalBigInt;\n    const tokenPoolRpc = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.tokenToXtzPriceImpact(\n      token.toString(),\n      xtzPoolRpc.toString(),\n      tokenPoolRpc.toString(),\n      dex.fee.toString(),\n      dex.burn.toString(),\n      dex.includeSibsidy\n    );\n    return parseFloat(result?.toString() ?? 0);\n  }\n\n  addLiquidityReturn(xtzToDeposit: Amount, xtzPool: Amount, totalLiquidity: Amount, slippage: number, dex): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'addLiquidityReturn' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const xtzIn = xtzToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const totalLqt = totalLiquidity;\n\n    const result = dexterCalculations.addLiquidityLiquidityCreated(xtzIn.toString(), xPool.toString(), totalLqt.toString(), dex.includeSubsidy);\n    const expected = new Amount({\n      rpcAmount: result?.value ?? 0,\n      decimalPlaces: 0\n    });\n    const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n    const minAmount = new Amount({\n      normalisedAmount: minimum ?? 0,\n      decimalPlaces: 0\n    });\n    return { expected, minimum: minAmount };\n  }\n\n  addLiquidityTokenRequired(xtzToDeposit: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const xtzIn = xtzToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.addLiquidityTokenIn(xtzIn.toString(), xPool.toString(), tPool.toString(), dex.includeSubsidy);\n    return new Amount({\n      rpcAmount: result?.toString() ?? '0',\n      decimalPlaces: tokenPool.decimalPlaces\n    });\n  }\n\n  addLiquidityXtzRequired(tokenToDeposit: Amount, xtzPool: Amount, tokenPool: Amount, dex): Amount {\n    const tokenIn = tokenToDeposit.internalBigInt;\n    const xPool = xtzPool.internalBigInt;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.addLiquidityXtzIn(tokenIn.toString(), xPool.toString(), tPool.toString(), dex.includeSubsidy);\n    return new Amount({ rpcAmount: result?.toString() ?? '0', decimalPlaces: xtzPool.decimalPlaces });\n  }\n\n  removeLiquidityTokenReceived(liquidityBurned: Amount, totalLiquidity: Amount, tokenPool: Amount, slippage: number): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'removeLiquidityTokenReceived' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const lqtBurned = liquidityBurned.internalBigInt;\n    const tLqt = totalLiquidity;\n    const tPool = tokenPool.internalBigInt;\n\n    const result = dexterCalculations.removeLiquidityTokenOut(lqtBurned.toString(), tLqt.toString(), tPool.toString());\n\n    if (!!Big(result?.value).toString()) {\n      const expected = new Amount({\n        rpcAmount: result?.value ?? 0,\n        decimalPlaces: 8\n      });\n      const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n      const minAmount = new Amount({\n        normalisedAmount: minimum,\n        decimalPlaces: 8\n      });\n      return { expected, minimum: minAmount };\n    } else {\n      return undefined;\n    }\n  }\n\n  removeLiquidityXtzReceived(liquidityBurned: Amount, totalLiquidity: Amount, xtzPool: Amount, slippage: number, dex): { expected: Amount; minimum: Amount } {\n    if (slippage < 0 || slippage > 1) {\n      console.log(`slippage value supplied to 'removeLiquidityXtzReceived' was not between 0 and 1: ${slippage}`);\n      return undefined;\n    }\n\n    const lqtBurned = liquidityBurned.internalBigInt;\n    const tLqt = totalLiquidity;\n    const xPool = xtzPool.internalBigInt;\n\n    const result = dexterCalculations.removeLiquidityXtzOut(lqtBurned.toString(), tLqt.toString(), xPool.toString(), dex.includeSubsidy);\n\n    if (!!Big(result?.value).toString()) {\n      const expected = new Amount({\n        rpcAmount: result?.value,\n        decimalPlaces: 6\n      });\n      const minimum = expected.internalNormalised - expected.internalNormalised * slippage;\n      const minAmount = new Amount({\n        normalisedAmount: minimum,\n        decimalPlaces: 6\n      });\n      return { expected, minimum: minAmount };\n    } else {\n      return undefined;\n    }\n  }\n  estimateLiquidityBakingAPY() {\n    return 'APY: ' + dexterCalculations.estimateLiquidityBakingAPY(this.storage[this.lqdContract]?.tez_pool).toFixed(2) + '%';\n  }\n}\n","// https://gitlab.com/tezos-domains/client\nimport { TezosToolkit } from '@taquito/taquito';\nimport { TaquitoTezosDomainsClient } from '@tezos-domains/taquito-client';\nimport { Tzip16Module } from '@taquito/tzip16';\nimport { Injectable } from '@angular/core';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { SupportedNetworkType } from '@tezos-domains/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TezosDomainsService {\n  private client: TaquitoTezosDomainsClient;\n  private queue = [];\n  pending = false;\n  constructor() {\n    const tezosToolkit = new TezosToolkit(CONSTANTS.NODE_URL);\n    tezosToolkit.addExtension(new Tzip16Module());\n    const options = { caching: { enabled: false } };\n    try {\n      this.client = new TaquitoTezosDomainsClient({\n        tezos: tezosToolkit,\n        network: <SupportedNetworkType>CONSTANTS.NETWORK,\n        ...options\n      });\n    } catch (e) {\n      if (e?.message && e.message.includes('Supported built-in networks are:') && !CONSTANTS.MAINNET) {\n        console.error(e);\n        console.warn('Falling back on Ghostnet as network for Tezos Domains initialization');\n        this.client = new TaquitoTezosDomainsClient({\n          tezos: tezosToolkit,\n          network: <SupportedNetworkType>'ghostnet',\n          ...options\n        });\n      } else {\n        throw e;\n      }\n    }\n  }\n  async getAddressFromDomain(domain: string) {\n    const address = await this.client.resolver.resolveNameToAddress(domain);\n    if (!address) {\n      return { pkh: '' };\n    }\n    return { pkh: address };\n  }\n  async getDomainFromAddress(address: string): Promise<string> {\n    if (!this.pending) {\n      this.pending = true;\n      this.collect();\n    }\n    return new Promise((resolve, reject) => {\n      this.queue.push({ address, resolve, reject });\n    });\n  }\n  async collect() {\n    setTimeout(async () => {\n      this.pending = false;\n      const queue = this.queue;\n      this.queue = [];\n      const addresses = queue.map((q) => {\n        return q.address;\n      });\n      const items = await this.getDomainFromAddresses(addresses).catch((e) => {\n        for (const q of queue) {\n          q.reject(e);\n          throw e;\n        }\n      });\n      while (queue.length) {\n        const promise = queue.shift();\n        if (items[promise.address]) {\n          promise.resolve(items[promise.address]);\n        } else {\n          promise.resolve('');\n        }\n      }\n    }, 100);\n  }\n  async getDomainFromAddresses(addresses: any) {\n    const baseUrl = CONSTANTS.MAINNET ? 'https://api.tezos.domains/graphql' : `https://${CONSTANTS.NETWORK}-api.tezos.domains/graphql`;\n    const req = {\n      query: `{reverseRecords(where: {address: {in: ${JSON.stringify(addresses)}}}) {items {address domain: domain {id, name}}}}`\n    };\n    const response = await (\n      await fetch(baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(req)\n      })\n    ).json();\n    const r = {};\n    if (response.data) {\n      for (const item of response.data.reverseRecords.items) {\n        if (item?.address && item?.domain?.name) {\n          r[item.address] = item.domain.name;\n        }\n      }\n    }\n    return r;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TokenResponseType, TokenService } from '../token/token.service';\nimport { ActivityService } from '../activity/activity.service';\nimport { WalletService } from '../wallet/wallet.service';\nimport { Account } from '../wallet/wallet';\nimport Big from 'big.js';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { decode } from 'blurhash';\nimport { combineLatest } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubjectService } from '../subject/subject.service';\nimport { DipDupService } from '../indexer/dipdup/dipdup.service';\n\ninterface TokenWithBalance extends TokenResponseType {\n  balance: string;\n  price: string;\n}\ninterface ContractWithImg {\n  name: string;\n  thumbnailUrl: string;\n  visitUrl: string;\n  tokens: TokenWithBalance[];\n  hidden?: boolean;\n}\ntype ContractsWithBalance = Record<string, ContractWithImg>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenBalancesService {\n  xtzUsdRate: number;\n  balances: TokenWithBalance[] = [];\n  nfts: ContractsWithBalance = null;\n  activeAccount: Account = null;\n  _thumbnailsToCreate = [];\n  constructor(\n    private tokenService: TokenService,\n    private activityService: ActivityService,\n    private walletService: WalletService,\n    private subjectService: SubjectService,\n    private dipdupService: DipDupService\n  ) {\n    combineLatest([\n      this.subjectService.activeAccount,\n      this.subjectService.metadataUpdated,\n      this.activityService.tokenBalanceUpdated,\n      this.subjectService.refreshTokens\n    ])\n      .pipe(debounceTime(3))\n      .subscribe(([a, b, c]) => {\n        if (this.activeAccount !== a) {\n          this.activeAccount = a;\n        }\n        this.reload();\n      });\n    this.reload();\n    this.subjectService.logout.subscribe((o) => {\n      if (!!o) {\n        this.destroy();\n      }\n    });\n  }\n  destroy() {\n    this.balances = [];\n    this.nfts = null;\n  }\n  resolveAsset(token, balances, nfts) {\n    const asset: TokenResponseType = this.tokenService.getAsset(token.tokenId);\n    if (asset) {\n      if (this.isNFT(asset)) {\n        // token balance or NFT?\n        const contractAlias = this.getContractAlias(asset.contractAddress) ?? asset.contractAddress;\n        if (nfts[contractAlias] === undefined) {\n          const CONTRACT_ALIASES = CONSTANTS.CONTRACT_ALIASES[contractAlias as string];\n          if (!CONTRACT_ALIASES?.thumbnailUrl) {\n            if (this._thumbnailsToCreate.filter((obj) => obj.contractAlias === contractAlias).length === 0) {\n              this._thumbnailsToCreate.push({\n                contractAlias,\n                address: asset.contractAddress\n              });\n            }\n          }\n          const name = CONTRACT_ALIASES?.name ? CONTRACT_ALIASES.name : this.tokenService.getContractName(asset.contractAddress) ?? contractAlias;\n          nfts[contractAlias] = {\n            name,\n            thumbnailUrl: CONTRACT_ALIASES?.thumbnailUrl ?? this.tokenService.getContractLogo(asset.contractAddress),\n            tokens: []\n          };\n          if (CONTRACT_ALIASES?.link) {\n            nfts[contractAlias].visitUrl = CONTRACT_ALIASES.link;\n          }\n        }\n        nfts[contractAlias].tokens.push({ ...asset, balance: token.balance });\n      } else if (!isNaN(asset.decimals)) {\n        const balance = Big(token.balance)\n          .div(10 ** asset.decimals)\n          .toFixed();\n        balances.push({ ...asset, balance });\n      }\n    } else {\n      if (nfts['unknown'] === undefined) {\n        const hidden = this.nfts !== null && this.nfts['unknown'] === undefined;\n        nfts['unknown'] = {\n          name: 'Unknown tokens',\n          thumbnailUrl: '../../../assets/img/unknown-token-grayscale.svg',\n          tokens: [],\n          hidden\n        };\n        if (hidden) {\n          setTimeout(() => {\n            if (this.nfts['unknown'] !== undefined) {\n              this.nfts['unknown'].hidden = false;\n            }\n          }, 10000);\n        }\n      }\n      const placeholder = this.tokenService.getPlaceholderToken(token.tokenId);\n      placeholder.name = `${placeholder.contractAddress.slice(0, 8)}... (${placeholder.id.toString()})`;\n      delete placeholder.decimals;\n      nfts['unknown'].tokens.push(placeholder);\n    }\n  }\n  reload() {\n    if (!this.activeAccount?.tokens) {\n      return;\n    }\n    const balances: TokenWithBalance[] = [];\n    const nfts: ContractsWithBalance = {};\n    for (let token of this.walletService.wallet.getAccount(this.activeAccount.address).tokens) {\n      if (token?.balance && token?.balance != '0') {\n        this.resolveAsset(token, balances, nfts);\n      }\n    }\n    this.balances = balances;\n    this.nfts = this.orderedNfts(nfts);\n    this.mergeMarket();\n\n    if (this._thumbnailsToCreate.length) {\n      this._thumbnailsToCreate.forEach(({ contractAlias, address }) => {\n        if (!this.nfts[contractAlias].thumbnailUrl) {\n          this.nfts[contractAlias].thumbnailUrl = this.getThumbnailUrl(address);\n        }\n      });\n      this._thumbnailsToCreate = [];\n    }\n    this.subjectService.nftsUpdated.next({ nfts: this.nfts, balances: this.balances });\n  }\n  orderedNfts(nfts: ContractsWithBalance): ContractsWithBalance {\n    const _nfts: ContractsWithBalance = {};\n    const aliases = Object.keys(CONSTANTS.CONTRACT_ALIASES);\n    for (let alias of aliases) {\n      if (nfts[alias]) {\n        _nfts[alias] = nfts[alias];\n        delete nfts[alias];\n      }\n    }\n    const keys = Object.keys(nfts);\n    for (let key of keys) {\n      if (key !== 'unknown') {\n        _nfts[key] = nfts[key];\n        delete nfts[key];\n      }\n    }\n    if (nfts['unknown']) {\n      // property last\n      _nfts['unknown'] = nfts['unknown'];\n      delete nfts['unknown'];\n    }\n    return _nfts;\n  }\n  getContractAlias(address: string) {\n    const keys = Object.keys(CONSTANTS.CONTRACT_ALIASES);\n    for (const key of keys) {\n      if (CONSTANTS.CONTRACT_ALIASES[key].address.includes(address)) {\n        return key;\n      }\n    }\n    return undefined;\n  }\n  getThumbnailUrl(address: string): string {\n    const pixels = decode(address.slice(0, 22), 5, 5);\n    const canvas = document.createElement('canvas');\n    canvas.width = canvas.height = 5;\n    const ctx = canvas.getContext('2d');\n    const imageData = ctx.createImageData(5, 5);\n    imageData.data.set(pixels);\n    ctx.putImageData(imageData, 0, 0);\n    return canvas.toDataURL();\n  }\n\n  isNFT(asset: TokenResponseType): boolean {\n    if (!asset) {\n      return false;\n    }\n    if (CONSTANTS.MAINNET) {\n      return !(\n        CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${asset.contractAddress}:${asset.id}`) ||\n        this.dipdupService.tokens.get(`${asset.contractAddress}:${asset.id}`)\n      );\n    } else {\n      return (asset?.isBooleanAmount || asset?.decimals == 0) && !CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${asset.contractAddress}`) ? true : false;\n    }\n  }\n  mergeMarket() {\n    Object.keys(this.balances).forEach((key) => {\n      let midPrice = undefined;\n      const tokenId: string = `${this.balances[key]?.contractAddress}:${this.balances[key]?.id}`;\n      if ((midPrice = this.dipdupService.tokens.get(tokenId))) {\n        this.balances[key].price = midPrice * parseFloat(this.balances[key].balance) * this.walletService.wallet.XTZrate;\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObjktService {\n  private queue = [];\n  pending = false;\n  constructor() {}\n\n  async resolveToken(contractAddress, id) {\n    const req = {\n      query: `{\n        token(where: {fa_contract: {_eq: \"${contractAddress}\"}, token_id: {_eq: \"${id}\"}}) {\n          highest_offer\n          lowest_ask\n          metadata\n          name\n          attributes {\n            attribute {\n              name\n              type\n              value\n            }\n          }\n        }\n      }`\n    };\n    try {\n      return (\n        await (\n          await fetch('https://data.objkt.com/v2/graphql', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(req)\n          })\n        ).json()\n      )?.data?.token[0];\n    } catch {\n      return undefined;\n    }\n  }\n  async resolveCollection(address): Promise<any> {\n    while (this.queue.length >= 500) {\n      // max 500 results per call\n      await this.sleep(3000);\n    }\n    if (!this.pending) {\n      this.pending = true;\n      this.collect();\n    }\n    return new Promise((resolve, reject) => {\n      this.queue.push({ address, resolve, reject });\n    });\n  }\n\n  async collect() {\n    setTimeout(async () => {\n      this.pending = false;\n      const queue = this.queue;\n      this.queue = [];\n      const addresses = queue.map((q) => {\n        return q.address;\n      });\n      const items = await this.resolveCollections(addresses).catch((e) => {\n        for (const q of queue) {\n          q.reject(e);\n          throw e;\n        }\n      });\n      while (queue.length) {\n        const promise = queue.shift();\n        if (items[promise.address]?.name) {\n          promise.resolve(items[promise.address]);\n        } else {\n          promise.resolve(null);\n        }\n      }\n    }, 3000);\n  }\n\n  async resolveCollections(contractAddresses: string[]) {\n    const req = {\n      query: `{\n        fa(where: {contract: {_in: ${JSON.stringify(contractAddresses)}}}) {\n          contract\n          name\n          logo\n        }\n      }`\n    };\n    const _objkts = (\n      await (\n        await fetch('https://data.objkt.com/v2/graphql', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(req)\n        })\n      ).json()\n    )?.data?.fa;\n    const objkts: any = {};\n    if (_objkts) {\n      for (const objkt of _objkts) {\n        objkts[objkt.contract] = { name: objkt.name, logo: objkt.logo };\n      }\n    }\n    console.log('resolveCollections', objkts);\n    return objkts;\n  }\n  private async sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CONSTANTS, TRUSTED_TOKEN_CONTRACTS, BLACKLISTED_TOKEN_CONTRACTS } from '../../../environments/environment';\nimport { IndexerService } from '../indexer/indexer.service';\nimport Big from 'big.js';\nimport { SubjectService } from '../subject/subject.service';\nimport { filter } from 'rxjs/operators';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { ObjktService } from '../indexer/objkt/objkt.service';\nimport { DipDupService } from '../indexer/dipdup/dipdup.service';\n\nexport interface TokenResponseType {\n  contractAddress: string;\n  id: string;\n  decimals: number;\n  artifactAsset?: Asset;\n  displayAsset: Asset;\n  thumbnailAsset: Asset;\n  name: string;\n  symbol: string;\n  description: string;\n  category: string;\n  kind: string;\n  isTransferable?: boolean;\n  isBooleanAmount?: boolean;\n  shouldPreferSymbol?: boolean;\n  series?: string;\n  ttl?: number;\n  status: Status;\n  isUnknownToken?: boolean;\n}\nexport type Asset = string | CachedAsset;\nexport interface CachedAsset {\n  uri: string;\n  mimeType: string;\n}\n\nexport type ContractsType = Record<string, ContractType>;\nexport type ContractType = FA12 | FA2;\nexport interface TokensInterface {\n  category: string;\n  objkt?: {\n    name?: string;\n    logo?: string;\n    updated: number;\n  };\n}\nenum Status {\n  Rejected = -1,\n  Pending = 0,\n  Approved = 1\n}\nexport interface TokenData {\n  name: string;\n  symbol: string;\n  decimals: number;\n  description: string;\n  artifactAsset?: Asset;\n  displayAsset: Asset;\n  thumbnailAsset: Asset;\n  isTransferable?: boolean;\n  isBooleanAmount?: boolean;\n  shouldPreferSymbol?: boolean;\n  series?: string;\n  ttl?: number;\n  status: Status;\n}\nexport interface FA12 extends TokensInterface {\n  kind: 'FA1.2';\n  tokens: {\n    0: TokenData;\n  };\n}\nexport interface FA2 extends TokensInterface {\n  kind: 'FA2';\n  tokens: Record<number | string, TokenData>;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  readonly AUTO_DISCOVER: boolean = true;\n  readonly version: string = '1.0.13';\n  private contracts: ContractsType = {};\n  private exploredIds: Record<string, { firstCheck: number; lastCheck: number; counter: number }> = {};\n  private pendingSave = null;\n  readonly storeKey = 'tokenMetadata';\n  readonly unlockablesKey = 'unlockables';\n  queue = [];\n  workers = 0;\n  constructor(\n    public indexerService: IndexerService,\n    private subjectService: SubjectService,\n    private dipdupService: DipDupService,\n    private router: Router,\n    private objktService: ObjktService\n  ) {\n    this.contracts = JSON.parse(JSON.stringify(CONSTANTS.ASSETS));\n    this.loadMetadata();\n    this.saveMetadata();\n    this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n      if (r.url.indexOf('/account') === -1) {\n        document.documentElement.className = '';\n      }\n    });\n  }\n  getAsset(tokenId: string): TokenResponseType {\n    if (!tokenId || !tokenId.includes(':')) {\n      return null;\n    }\n    const tokenIdArray = tokenId.split(':');\n    const contractAddress: string = tokenIdArray[0];\n    const id: string = tokenIdArray[1] ? String(tokenIdArray[1]) : null;\n    const contract: ContractType = this.contracts[contractAddress];\n    if (id != null) {\n      if (contract) {\n        let token: TokenResponseType = contract.tokens[id];\n        if (!token) {\n          // check ranges\n          const ids = Object.keys(contract.tokens);\n          for (const idx of ids) {\n            if (idx.includes('-')) {\n              const span = idx.split('-');\n              if (span.length === 2 && !isNaN(Number(span[0])) && !isNaN(Number(span[1]))) {\n                const first = Big(span[0]);\n                const last = Big(span[1]);\n                if (first.gte(id) && last.lte(id)) {\n                  token = JSON.parse(JSON.stringify(contract.tokens[idx]));\n                  token.name = `${JSON.parse(JSON.stringify(contract.tokens[idx].name))} #${Big(id).minus(first).plus(1)}`;\n                  break;\n                }\n              }\n            }\n          }\n        }\n        if (token) {\n          if (token.status < 0) {\n            return {\n              kind: contract.kind,\n              category: contract.category,\n              id,\n              contractAddress,\n              ...token,\n              thumbnailAsset: '',\n              displayAsset: ''\n            };\n          }\n          return {\n            kind: contract.kind,\n            category: contract.category,\n            id,\n            contractAddress,\n            ...token\n          };\n        }\n      }\n    }\n    return null;\n  }\n  getContractName(contractAddress: string) {\n    return this.contracts[contractAddress]?.objkt?.name ?? null;\n  }\n  getContractLogo(contractAddress: string) {\n    return this.contracts[contractAddress]?.objkt?.logo ?? null;\n  }\n  getContractAddressFromAsset(uri: string) {\n    const contractAddresses = Object.keys(this.contracts);\n    for (const contractAddress of contractAddresses) {\n      const tokens = this.contracts[contractAddress].tokens;\n      for (const id in tokens) {\n        if (tokens[id]?.thumbnailAsset?.uri === uri || tokens[id]?.displayAsset?.uri === uri || tokens[id]?.artifactAsset?.uri === uri) {\n          return contractAddress;\n        }\n      }\n    }\n    return '';\n  }\n  isKnownTokenId(tokenId: string): boolean {\n    return this.getAsset(tokenId) !== null;\n  }\n  knownTokenIds(): string[] {\n    const tokenIds: string[] = [];\n    const contractKeys = Object.keys(this.contracts);\n    if (contractKeys) {\n      for (const contractKey of contractKeys) {\n        const tokenKeys = Object.keys(this.contracts[contractKey].tokens);\n        if (tokenKeys) {\n          for (const tokenKey of tokenKeys) {\n            tokenIds.push(`${contractKey}:${tokenKey}`);\n          }\n        }\n      }\n    }\n    return tokenIds;\n  }\n  isCategoryType(address, regex: RegExp): boolean {\n    return regex.test(this.contracts[address]?.category);\n  }\n  isKnownTokenContract(address: string): boolean {\n    return this.contracts[address] !== undefined;\n  }\n  addAsset(contractAddress: string, contract: ContractType) {\n    if (!this.contracts[contractAddress]) {\n      this.contracts[contractAddress] = contract;\n      this.checkObjktData(contractAddress, contract);\n    } else {\n      const currentKeys = Object.keys(this.contracts[contractAddress].tokens);\n      const newKeys = Object.keys(contract.tokens);\n      for (const key of newKeys) {\n        if (!currentKeys.includes(key)) {\n          this.contracts[contractAddress].tokens[key] = contract.tokens[key];\n        } else if (JSON.stringify(contract.tokens[key]) !== JSON.stringify(this.contracts[contractAddress].tokens[key])) {\n          this.contracts[contractAddress].tokens[key] = contract.tokens[key];\n        }\n      }\n    }\n  }\n  async checkObjktData(contractAddress: string, contract: ContractType) {\n    let check = false;\n    if (!contract.objkt) {\n      check = true;\n    } else if (contract?.objkt?.updated) {\n      const diff = Date.now() - contract.objkt.updated;\n      if (!contract?.objkt?.name) {\n        if (diff > 1000 * 60 * 60 * 24) {\n          check = true;\n        }\n      }\n    }\n    if (check) {\n      const _objkt = await this.objktService.resolveCollection(contractAddress);\n      const objkt: any = { updated: Date.now() };\n      if (_objkt?.name) {\n        objkt.name = _objkt.name;\n        if (_objkt.logo) {\n          objkt.logo = _objkt.logo;\n        }\n      }\n      this.contracts[contractAddress].objkt = objkt;\n      this._saveMetadata();\n      this.subjectService.metadataUpdated.next(null);\n    }\n  }\n  async searchAllMetadata(unknownTokenIds: any) {\n    if (unknownTokenIds.length) {\n      for (const tokenId of unknownTokenIds) {\n        this.searchMetadata(tokenId);\n      }\n    }\n  }\n  async recheckMetadata(tokens) {\n    if (tokens?.length) {\n      for (let token of tokens) {\n        const tokenObject = this.getAsset(token.tokenId);\n        if (tokenObject?.ttl) {\n          const exp = this.exploredIds[token.tokenId];\n          const now = new Date().getTime();\n          if (now - exp.lastCheck > tokenObject.ttl * 1000) {\n            console.log('recheck metadata for', token.tokenId);\n            this.exploredIds[token.tokenId].lastCheck = now;\n            this.exploredIds[token.tokenId].counter = ++exp.counter || 0;\n            this.saveMetadata();\n            if (!this.queue.includes(token.tokenId)) {\n              this.searchMetadata(token.tokenId, true);\n            }\n          }\n        }\n      }\n    }\n  }\n  private async searchMetadata(tokenId: string, force = false) {\n    if ((!this.isKnownTokenId(tokenId) && !this.queue.includes(tokenId) && this.explore(tokenId)) || force) {\n      this.queue.push(tokenId);\n      if (this.workers < 64) {\n        this.startWorker();\n      }\n    }\n  }\n  async startWorker() {\n    this.workers++;\n    while (this.queue.length) {\n      const tokenId = this.queue.shift();\n      try {\n        const a = tokenId.split(':');\n        const contractAddress = a[0];\n        const id = String(a[1]);\n        const recentDay = this.exploredIds[tokenId]?.lastCheck - this.exploredIds[tokenId]?.firstCheck < 1000 * 3600 * 24;\n        const skipTzkt = this.isKnownTokenId(tokenId) && this.exploredIds[tokenId]?.counter % 5 === 2 && recentDay;\n        const metadata = await this.indexerService.getTokenMetadata(contractAddress, id, skipTzkt);\n        this.handleMetadata(metadata, contractAddress, id);\n      } catch (e) {}\n    }\n    this.workers--;\n  }\n  handleMetadata(metadata: any, contractAddress: string, id: string) {\n    const tokenId = `${contractAddress}:${id}`;\n    if (metadata && (metadata.name || metadata.symbol) && !isNaN(metadata.decimals) && metadata.decimals >= 0) {\n      const contract: ContractType = {\n        kind: metadata.tokenType ? metadata.tokenType : 'FA2',\n        category: metadata.tokenCategory ? metadata.tokenCategory : '',\n        tokens: {}\n      };\n      const token: TokenData = {\n        name: metadata.name ? metadata.name : '',\n        symbol: metadata.symbol ? metadata.symbol : '',\n        decimals: Number(metadata.decimals),\n        description: metadata.description ? metadata.description : '',\n        artifactAsset: metadata.artifactUri ?? '',\n        displayAsset: metadata.displayUri ?? '',\n        thumbnailAsset: metadata.thumbnailUri ?? '',\n        isTransferable: metadata?.isTransferable === false ? metadata.isTransferable : true,\n        isBooleanAmount: metadata?.isBooleanAmount ? metadata.isBooleanAmount : false,\n        status:\n          TRUSTED_TOKEN_CONTRACTS.includes(contractAddress) || CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(tokenId) || this.dipdupService.tokens.get(tokenId)\n            ? 1\n            : 0\n      };\n      if (metadata?.ttl) {\n        token.ttl = Math.max(Number(metadata.ttl), 30);\n      }\n      if (metadata?.series) {\n        token.series = metadata.series;\n      }\n      if (CONSTANTS.ASSETS[contractAddress]?.tokens[id]) {\n        contract.tokens[id] = { ...token, ...CONSTANTS.ASSETS[contractAddress].tokens[id] };\n      } else {\n        contract.tokens[id] = token;\n      }\n      this.addAsset(contractAddress, contract);\n      this.saveMetadata();\n      this.subjectService.metadataUpdated.next({\n        contractAddress,\n        id,\n        token\n      });\n    }\n  }\n  explore(tokenId: string): boolean {\n    const now = new Date().getTime();\n    if (!this.exploredIds[tokenId]) {\n      this.exploredIds[tokenId] = {\n        firstCheck: now,\n        lastCheck: now,\n        counter: 0\n      };\n      this.saveMetadata();\n      return true;\n    } else {\n      const token = this.exploredIds[tokenId];\n      let t1 = 2 ** token.counter * 250;\n      t1 = t1 < 20000 ? 20000 : t1;\n      const t2 = now - token.lastCheck;\n      if (t1 > t2) {\n        return false;\n      }\n      this.exploredIds[tokenId].lastCheck = now;\n      this.exploredIds[tokenId].counter = ++token.counter;\n      this.saveMetadata();\n      return true;\n    }\n  }\n  private getCounter(tokenId: string) {\n    return this.exploredIds[tokenId].counter;\n  }\n  resetCounters() {\n    const ids = Object.keys(this.exploredIds);\n    if (ids) {\n      for (const id of ids) {\n        this.exploredIds[id].counter = 0;\n      }\n      this.saveMetadata(true);\n    }\n  }\n  resetAllMetadata() {\n    this.exploredIds = {};\n    this.contracts = JSON.parse(JSON.stringify(CONSTANTS.ASSETS));\n    this.saveMetadata(true);\n    this.loadMetadata();\n    this.subjectService.metadataUpdated.next(null);\n  }\n  searchTimeMs(tokenId: string) {\n    if (this.exploredIds[tokenId]) {\n      const token = this.exploredIds[tokenId];\n      return token.lastCheck - token.firstCheck;\n    }\n    return 0;\n  }\n  getPlaceholderToken(tokenId: string): TokenResponseType {\n    const tokenIdArray = tokenId.split(':');\n    const contractAddress: string = tokenIdArray[0];\n    const id: string = tokenIdArray[1] ? String(tokenIdArray[1]) : '';\n    return {\n      contractAddress,\n      id,\n      decimals: 0,\n      displayAsset: '',\n      thumbnailAsset: '',\n      name: '[Unknown token]',\n      symbol: '',\n      description: '',\n      category: '',\n      kind: 'FA2',\n      status: 0,\n      isUnknownToken: true\n    };\n  }\n  saveMetadata(force = false) {\n    if (force) {\n      this._saveMetadata();\n      return;\n    }\n    if (!this.pendingSave) {\n      this.pendingSave = setTimeout(() => {\n        this.pendingSave = null;\n        this._saveMetadata();\n      }, 1000);\n    }\n  }\n  private _saveMetadata() {\n    localStorage.setItem(\n      this.storeKey,\n      JSON.stringify({\n        contracts: this.contracts,\n        exploredIds: this.exploredIds,\n        version: this.version\n      })\n    );\n  }\n  loadMetadata(): any {\n    const metadataJson = localStorage.getItem(this.storeKey);\n    if (metadataJson) {\n      const metadata = JSON.parse(metadataJson);\n      if (metadata?.version === this.version) {\n        if (metadata?.contracts) {\n          const contractAddresses = Object.keys(metadata.contracts);\n          for (const address of contractAddresses) {\n            for (const id of Object.keys(metadata.contracts[address].tokens)) {\n              if (metadata.contracts[address].tokens[id]?.status === 0) {\n                if (\n                  TRUSTED_TOKEN_CONTRACTS.includes(address) ||\n                  CONSTANTS.NFT_CONTRACT_OVERRIDES.includes(`${address}:${id}`) ||\n                  this.dipdupService.tokens.get(`${address}:${id}`)\n                ) {\n                  metadata.contracts[address].tokens[id].status = 1; // flip status if it have been marked as trusted\n                }\n                if (BLACKLISTED_TOKEN_CONTRACTS.includes(address)) {\n                  metadata.contracts[address].tokens[id].status = -1;\n                }\n              }\n            }\n            this.addAsset(address, metadata.contracts[address]);\n          }\n        }\n        if (metadata?.exploredIds) {\n          this.exploredIds = metadata.exploredIds;\n        }\n      } else {\n        // clear all metadata\n      }\n    }\n  }\n  formatAmount(tokenKey: string, amount: string, baseUnit = true): string {\n    if (!tokenKey) {\n      return `${Big(amount)\n        .div(10 ** (baseUnit ? 6 : 0))\n        .toFixed()} tez`;\n    } else {\n      const token = this.getAsset(tokenKey);\n      if (token) {\n        if ((!token.shouldPreferSymbol && token.name) || !token.symbol) {\n          if (token.isBooleanAmount) {\n            if (parseInt(amount) > 1) {\n              return `${amount} ${token.name}`;\n            }\n            return `${token.name}`;\n          } else {\n            return `${Big(amount)\n              .div(10 ** (baseUnit ? token.decimals : 0))\n              .toFixed()} ${token.name}`;\n          }\n        } else {\n          return `${Big(amount)\n            .div(10 ** (baseUnit ? token.decimals : 0))\n            .toFixed()} ${token.symbol}`;\n        }\n      } else {\n        return '[Unknown token]';\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport DirectWebSdk from 'customauth';\nimport FetchNodeDetails from '@toruslabs/fetch-node-details';\nimport TorusUtils from '@toruslabs/torus.js';\nimport { OperationService } from '../../services/operation/operation.service';\nimport { InputValidationService } from '../../services/input-validation/input-validation.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { MessageService } from '../message/message.service';\n\nconst GOOGLE = 'google';\nconst REDDIT = 'reddit';\nconst TWITTER = 'twitter';\nconst FACEBOOK = 'facebook';\nconst EMAIL = 'email';\nconst AUTH_DOMAIN = 'https://dev-0li4gssz.eu.auth0.com';\nconst AUTH_DOMAIN_MAINNET = 'https://kukai.eu.auth0.com';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TorusService {\n  torus: any = undefined;\n  nodeDetails: { torusNodeEndpoints: string[]; torusNodePub: any[] } = null;\n  public readonly verifierMap: any;\n  private readonly proxy: any;\n  verifierMaps = {\n    testnet: {\n      [GOOGLE]: {\n        name: 'Google',\n        typeOfLogin: 'google',\n        clientId: '952872982551-od475jfe3ach7dghacin634rbkcqhpll.apps.googleusercontent.com',\n        verifier: 'kukai-google',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [REDDIT]: {\n        name: 'Reddit',\n        typeOfLogin: 'jwt',\n        clientId: '7xLcBa3xd4VTmlGbClU3qXeBZGta3OvM',\n        verifier: 'tezos-reddit-testnet',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [TWITTER]: {\n        name: 'Twitter',\n        typeOfLogin: 'twitter',\n        clientId: 'vKFgnaYZzKLUnhxnX5xqTqeMcumdVTz1',\n        verifier: 'tezos-twitter-test',\n        caseSensitiveVerifierID: false,\n        lookups: true\n      },\n      [FACEBOOK]: {\n        name: 'Facebook',\n        typeOfLogin: 'facebook',\n        clientId: '213778980232619',\n        verifier: 'tezos-facebook-testnet',\n        caseSensitiveVerifierID: false\n      },\n      [EMAIL]: {\n        name: 'Email',\n        typeOfLogin: 'jwt',\n        clientId: 'L98HOmUY0hxLGX9k8AHEZxb1dj9Y3uZw',\n        verifier: 'kukai-google',\n        subVerifier: 'web-kukai-email',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      }\n    },\n    mainnet: {\n      [GOOGLE]: {\n        name: 'Google',\n        typeOfLogin: 'google',\n        clientId: '952872982551-49mfvktoios59oj2kmiknlltfq9pvi6c.apps.googleusercontent.com',\n        verifier: 'tezos-google',\n        subVerifier: 'kukai-web',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [REDDIT]: {\n        name: 'Reddit',\n        typeOfLogin: 'jwt',\n        clientId: 'zyQ9tnKfdg3VNyj6MGhZq4dHbBzbmEvl',\n        verifier: 'tezos-reddit',\n        subVerifier: 'web-kukai',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      },\n      [TWITTER]: {\n        name: 'Twitter',\n        typeOfLogin: 'twitter',\n        clientId: '3aCoxh3pw8g8JeFsdlJNUGwdgtLwdwgE',\n        verifier: 'tezos-twitter',\n        caseSensitiveVerifierID: false,\n        lookups: true\n      },\n      [FACEBOOK]: {\n        name: 'Facebook',\n        typeOfLogin: 'facebook',\n        clientId: '523634882377310',\n        verifier: 'tezos-facebook',\n        caseSensitiveVerifierID: false\n      },\n      [EMAIL]: {\n        name: 'Email',\n        typeOfLogin: 'jwt',\n        clientId: 'LTg6fVsacafGmhv14TZlrWF1EavwQoDZ',\n        verifier: 'tezos-google',\n        subVerifier: 'web-kukai-email',\n        caseSensitiveVerifierID: false,\n        lookups: true,\n        aggregated: true\n      }\n    }\n  };\n  verifierMapKeys: any;\n  constructor(private operationService: OperationService, private inputValidationService: InputValidationService, private messageService: MessageService) {\n    if (CONSTANTS.MAINNET) {\n      this.verifierMap = this.verifierMaps.mainnet;\n      this.proxy = {\n        address: '0x638646503746d5456209e33a2ff5e3226d698bea',\n        network: 'mainnet'\n      };\n    } else {\n      this.verifierMap = this.verifierMaps.testnet;\n      this.proxy = {\n        address: '0xd084604e5FA387FbC2Da8bAab07fDD6aDED4614A',\n        network: 'testnet'\n      };\n    }\n    this.verifierMapKeys = Object.keys(this.verifierMap);\n  }\n  async initTorus() {\n    if (this.torus === undefined) {\n      this.torus = null;\n      try {\n        const torusdirectsdk = new DirectWebSdk({\n          baseUrl: `${location.origin}/serviceworker`,\n          redirectToOpener: true,\n          enableLogging: !(this.proxy.network === 'mainnet'),\n          proxyContractAddress: this.proxy.address,\n          network: this.proxy.network\n        });\n        await torusdirectsdk.init({ skipSw: false });\n        this.torus = torusdirectsdk;\n      } catch (error) {\n        this.torus = undefined;\n        console.error(error, 'oninit caught');\n      }\n    }\n  }\n  async lookupPkh(selectedVerifier: string, verifierId: string): Promise<any> {\n    const fetchNodeDetails = new FetchNodeDetails({\n      network: this.proxy.network,\n      proxyAddress: this.proxy.address\n    });\n    const torus = new TorusUtils();\n    const verifier = this.verifierMap[selectedVerifier].verifier;\n    if (!this.nodeDetails) {\n      const { torusNodeEndpoints, torusNodePub, torusIndexes } = await fetchNodeDetails.getNodeDetails({ verifier: selectedVerifier, verifierId });\n      this.nodeDetails = { torusNodeEndpoints, torusNodePub }; // Cache node details\n    }\n    let sanitizedVerifierId = verifierId;\n    if (!this.verifierMap[selectedVerifier].caseSensitiveVerifierID && selectedVerifier !== 'twitter') {\n      sanitizedVerifierId = sanitizedVerifierId.toLocaleLowerCase();\n    }\n    let twitterId = '';\n    if (selectedVerifier === 'twitter') {\n      const username = sanitizedVerifierId.replace('@', '');\n      const { id } = await this.twitterLookup(username);\n      if (this.inputValidationService.twitterId(id)) {\n        sanitizedVerifierId = `twitter|${id}`;\n        twitterId = id;\n      } else {\n        throw new Error('Twitter handle not found');\n      }\n    }\n    const pk: any = await torus.getPublicAddress(\n      this.nodeDetails.torusNodeEndpoints,\n      this.nodeDetails.torusNodePub,\n      { verifier, verifierId: sanitizedVerifierId },\n      true\n    );\n    const pkh = this.operationService.spPointsToPkh(pk.X, pk.Y);\n    return { pkh, twitterId };\n  }\n  async twitterLookup(username?: string, id?: string) {\n    let req = {};\n    if ((id && username) || (!id && !username)) {\n      console.log({ username, id });\n      throw new Error('Invalid input');\n    } else if (id) {\n      req = { id };\n    } else {\n      req = { username: username.replace('@', '') };\n    }\n    return await fetch(`https://backend.kukai.network/twitter-lookup`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(req)\n    }).then((ans) => {\n      return ans.json();\n    });\n  }\n  async loginTorus(selectedVerifier: string, verifierId = '', skipTorusKey = 0, checkIfNewKey = false): Promise<any> {\n    if (!CONSTANTS.MAINNET && document?.location?.host === 'localhost:4200' && !['google', 'twitter', 'email'].includes(selectedVerifier)) {\n      return this.mockLogin(selectedVerifier); // mock locally\n    }\n    try {\n      const jwtParams: any = this._loginToConnectionMap()[selectedVerifier] || {};\n      if (verifierId && selectedVerifier === GOOGLE) {\n        jwtParams.login_hint = verifierId;\n        console.log('login_hint: ' + verifierId);\n      }\n      if (verifierId && selectedVerifier === EMAIL) {\n        jwtParams.login_hint = verifierId;\n      }\n      const { typeOfLogin, clientId, verifier, aggregated } = this.verifierMap[selectedVerifier];\n      const loginDetails = aggregated\n        ? await this.torus.triggerAggregateLogin({\n            login_hint: verifierId,\n            aggregateVerifierType: 'single_id_verifier',\n            verifierIdentifier: verifier,\n            subVerifierDetailsArray: [\n              {\n                clientId,\n                typeOfLogin: typeOfLogin,\n                verifier: this.verifierMap[selectedVerifier].subVerifier,\n                jwtParams\n              }\n            ],\n            skipTorusKey,\n            checkIfNewKey\n          })\n        : await this.torus.triggerLogin({\n            verifier,\n            typeOfLogin,\n            clientId,\n            jwtParams,\n            skipTorusKey,\n            checkIfNewKey\n          });\n      if (aggregated) {\n        loginDetails.userInfo = loginDetails.userInfo[0];\n      }\n      if (selectedVerifier === FACEBOOK) {\n        console.log('Invalidating access token...');\n        fetch(`https://graph.facebook.com/me/permissions?access_token=${loginDetails.userInfo.accessToken}`, { method: 'DELETE', mode: 'cors' });\n      }\n      const keyPair = skipTorusKey && !loginDetails?.privateKey ? { pk: '', pkh: '' } : this.operationService.spPrivKeyToKeyPair(loginDetails.privateKey);\n      console.log('DirectAuth KeyPair', keyPair);\n      if (loginDetails?.existingPk) {\n        loginDetails.userInfo.preexistingPkh = this.operationService.spPointsToPkh(loginDetails.existingPk.X, loginDetails.existingPk.Y);\n        loginDetails.userInfo.isNewKey = !loginDetails?.existingPk;\n      }\n      if (loginDetails?.userInfo?.typeOfLogin === 'jwt') {\n        loginDetails.userInfo.typeOfLogin = selectedVerifier;\n      }\n      console.log('DirectAuth UserInfo', loginDetails.userInfo);\n      return { keyPair, userInfo: loginDetails.userInfo };\n    } catch (e) {\n      console.error(e, 'login caught');\n      return { keyPair: null, userInfo: null };\n    }\n  }\n  async getTorusKeyPair(selectedVerifier: string, verifierId: string): Promise<any> {\n    const { keyPair } = await this.loginTorus(selectedVerifier, verifierId);\n    return keyPair;\n  }\n  _loginToConnectionMap = () => {\n    return {\n      [TWITTER]: {\n        domain: CONSTANTS.MAINNET ? AUTH_DOMAIN_MAINNET : AUTH_DOMAIN\n      },\n      [FACEBOOK]: {\n        scope: 'public_profile email'\n      },\n      [REDDIT]: {\n        domain: CONSTANTS.MAINNET ? AUTH_DOMAIN_MAINNET : AUTH_DOMAIN,\n        connection: 'Reddit',\n        verifierIdField: 'name',\n        isVerifierIdCaseSensitive: false\n      },\n      [EMAIL]: {\n        domain: CONSTANTS.MAINNET ? AUTH_DOMAIN_MAINNET : AUTH_DOMAIN,\n        connection: '',\n        verifierIdField: 'name',\n        isVerifierCaseSensitive: false\n      }\n    };\n  };\n  private async mockLogin(typeOfLogin: string): Promise<any> {\n    const keyPair = {\n      sk: 'spsk1VfCfhixtzGvUSKDre6jwyGbXFm6aoeLGnxeVLCouueZmkgtJF',\n      pk: 'sppk7cZsZeBApsFgYEdWuSwj92YCWkJxMmBfkN3FeKRmEB7Lk5pmDrT',\n      pkh: 'tz2WKg52VqnYXH52TZbSVjT4hcc8YGVKi7Pd'\n    };\n    const userInfo = {\n      typeOfLogin,\n      verifierId: typeOfLogin !== 'google' ? 'MockUser' : 'mock@user.com',\n      name: typeOfLogin !== 'twitter' ? 'Mock User' : '@MockUser'\n    };\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({ keyPair, userInfo });\n      }, 1000);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CONSTANTS } from '../../../environments/environment';\n\n@Injectable()\nexport class TzrateService {\n  public apiUrl = 'https://api.coingecko.com/api/v3/simple/price?ids=tezos&vs_currencies=usd';\n  constructor(private http: HttpClient, private walletService: WalletService) {}\n\n  getTzrate() {\n    if (CONSTANTS.MAINNET) {\n      this.http.get(this.apiUrl).subscribe(\n        (price: any) => {\n          this.walletService.wallet.XTZrate = price.tezos.usd;\n          this.updateFiatBalances();\n        },\n        (err) => console.log('Failed to get xtz price: ' + JSON.stringify(err))\n      );\n    } else {\n      this.walletService.wallet.XTZrate = 0;\n      this.updateFiatBalances();\n    }\n  }\n  updateFiatBalances() {\n    const accounts = this.walletService.wallet.getAccounts();\n    let tot = 0;\n    let change = false;\n    for (const account of accounts) {\n      if (account.balanceXTZ !== null) {\n        account.balanceUSD = Number((account.balanceXTZ / 1000000) * this.walletService.wallet.XTZrate);\n        tot += account.balanceUSD;\n        change = true;\n      }\n    }\n    if (change) {\n      this.walletService.wallet.totalBalanceUSD = Number(tot);\n      this.walletService.storeWallet();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { filter } from 'rxjs/operators';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnlockableService {\n  readonly settingsKey = 'settings';\n  unlockables: any;\n  queue = [];\n  workers = 0;\n  constructor(public indexerService: IndexerService, private router: Router) {\n    this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n      if (r.url.indexOf('/account') === -1) {\n        document.documentElement.className = '';\n      }\n    });\n  }\n\n  toggleFeature(type, feat): boolean {\n    this.unlockables = localStorage.getItem(this.settingsKey);\n    if (this.unlockables) {\n      try {\n        this.unlockables = JSON.parse(this.unlockables);\n        this.unlockables[type] = this.unlockables[type] === feat ? '' : feat;\n        localStorage.setItem(this.settingsKey, JSON.stringify(this.unlockables));\n        if (this.unlockables[type]) {\n          document.documentElement.classList.add(feat);\n        } else {\n          document.documentElement.classList.remove(feat);\n        }\n        return this.unlockables[type];\n      } catch (e) {\n        return false;\n      }\n    } else {\n      this.unlockables = {};\n      this.unlockables[type] = feat;\n      localStorage.setItem(this.settingsKey, JSON.stringify(this.unlockables));\n      document.documentElement.classList.add(feat);\n      return true;\n    }\n  }\n  restoreFeatures() {\n    this.unlockables = localStorage.getItem(this.settingsKey);\n    if (this.unlockables) {\n      try {\n        this.unlockables = JSON.parse(this.unlockables);\n        for (let feat of Object.keys(this.unlockables)) {\n          if (!!this.unlockables[feat]) {\n            document.documentElement.classList.add(this.unlockables[feat]);\n          }\n        }\n      } catch (e) {}\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { KeyPair, WalletType, Activity } from './../../interfaces';\nimport {\n  WalletObject,\n  HdWallet,\n  FullWallet,\n  LegacyWalletV1,\n  LegacyWalletV2,\n  LegacyWalletV3,\n  ImplicitAccount,\n  LedgerWallet,\n  TorusWallet,\n  EmbeddedTorusWallet,\n  OriginatedAccount,\n  WatchWallet\n} from './wallet';\nimport { EncryptionService } from '../encryption/encryption.service';\nimport { OperationService } from '../operation/operation.service';\nimport { TorusService } from '../torus/torus.service';\nimport { utils, hd } from '@tezos-core-tools/crypto-utils';\nimport { BehaviorSubject } from 'rxjs';\nimport { SubjectService } from '../subject/subject.service';\n\n@Injectable()\nexport class WalletService {\n  storeKey = 'kukai-wallet';\n  storageId = 0;\n  wallet: WalletObject;\n\n  constructor(\n    private encryptionService: EncryptionService,\n    private operationService: OperationService,\n    private torusService: TorusService,\n    private subjectService: SubjectService\n  ) {}\n  /*\n    Wallet creation\n  */\n  createNewWallet(): string {\n    return utils.generateMnemonic(24);\n  }\n  async createEncryptedWallet(mnemonic: string, password: string, passphrase: string = '', hdSeed: boolean): Promise<any> {\n    const seed = utils.mnemonicToSeed(mnemonic, passphrase, hdSeed);\n    const entropy: Buffer = Buffer.from(utils.mnemonicToEntropy(mnemonic));\n    let keyPair: KeyPair;\n    if (!hdSeed) {\n      keyPair = this.operationService.seed2keyPair(seed);\n    } else {\n      keyPair = hd.keyPairFromAccountIndex(seed, 0);\n    }\n    const encrypted = await this.encryptionService.encrypt(seed, password, 3);\n    const encryptedSeed: string = encrypted.chiphertext;\n    const iv: string = encrypted.iv;\n    /*\n      Warning: Make sure to never reuse IV for AES-GCM\n    */\n    const iv2: string = this.encryptionService.shiftIV(iv, 1);\n    const encryptedEntropy: string = (await this.encryptionService.encrypt(entropy, password, 3, iv2)).chiphertext;\n    return {\n      data: this.exportKeyStoreInit(hdSeed ? WalletType.HdWallet : WalletType.LegacyWallet, encryptedSeed, encryptedEntropy, iv),\n      pkh: keyPair.pkh,\n      pk: keyPair.pk,\n      seed: seed\n    };\n  }\n  async getKeys(pwd: string, pkh?: string): Promise<KeyPair> {\n    let seed;\n    if (this.wallet instanceof LegacyWalletV1) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.salt, 1);\n    } else if (this.wallet instanceof LegacyWalletV2) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.IV, 2);\n    } else if (this.wallet instanceof LegacyWalletV3 || this.wallet instanceof HdWallet) {\n      seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, pwd, this.wallet.IV, 3);\n    } else if (this.wallet instanceof LedgerWallet) {\n      const keyPair: KeyPair = {\n        sk: null,\n        pk: this.wallet.implicitAccounts[0].pk,\n        pkh: this.wallet.implicitAccounts[0].pkh\n      };\n      return keyPair;\n    } else if (this.wallet instanceof EmbeddedTorusWallet && this.wallet?.sk) {\n      return this.operationService.spPrivKeyToKeyPair(this.wallet.sk);\n    } else if (this.wallet instanceof TorusWallet || (this.wallet instanceof EmbeddedTorusWallet && !this.wallet?.sk)) {\n      const keyPair = await this.torusService.getTorusKeyPair(this.wallet.verifier, this.wallet.id);\n      if (this.wallet.getImplicitAccount(keyPair.pkh)) {\n        return keyPair;\n      } else {\n        throw new Error('Signed with wrong account');\n      }\n      return null;\n    } else {\n      return null;\n    }\n    if (!seed) {\n      return null;\n    }\n    if (this.wallet instanceof HdWallet) {\n      if (!pkh) {\n        throw new Error('No pkh provided');\n      }\n      const account = this.wallet.getImplicitAccount(pkh);\n      if (!account.derivationPath) {\n        throw new Error('No derivationPath found');\n      }\n      return hd.seedToKeyPair(seed, account.derivationPath);\n    } else if (this.wallet instanceof LegacyWalletV1) {\n      const keyPair = this.operationService.seed2keyPair(seed);\n      if (!keyPair.pkh || !pkh || keyPair.pkh !== pkh) {\n        return null;\n      } else {\n        return keyPair;\n      }\n    } else {\n      return this.operationService.seed2keyPair(seed);\n    }\n  }\n  async revealMnemonicPhrase(pwd: string): Promise<string> {\n    if (this.wallet && (this.wallet instanceof HdWallet || this.wallet instanceof LegacyWalletV3)) {\n      const iv = this.encryptionService.shiftIV(this.wallet.IV, 1);\n      const entropy = await this.encryptionService.decrypt(this.wallet.encryptedEntropy, pwd, iv, 3);\n      if (entropy) {\n        return utils.entropyToMnemonic(entropy);\n      } else {\n        console.log('Invalid password');\n      }\n    }\n    return '';\n  }\n  addImplicitAccount(pk: string, derivationPath?: string | number) {\n    let pkh;\n    console.log(pk);\n    if (pk && pk.slice(0, 4) === 'sppk') {\n      pkh = this.operationService.pk2pkh(pk);\n    } else {\n      pkh = utils.pkToPkh(pk);\n    }\n    if (pkh) {\n      this.wallet.implicitAccounts.push(new ImplicitAccount(pkh, pk, typeof derivationPath === 'number' ? `44'/1729'/${derivationPath}'/0'` : derivationPath));\n      console.log('Adding new implicit account...');\n      console.log(this.wallet.implicitAccounts[this.wallet.implicitAccounts.length - 1]);\n      this.storeWallet();\n    }\n  }\n  addOriginatedAccount(kt: string, manager: string) {\n    const implicitAccount = this.wallet.getImplicitAccount(manager);\n    if (implicitAccount) {\n      const origAcc = new OriginatedAccount(kt, implicitAccount.pkh, implicitAccount.pk);\n      implicitAccount.originatedAccounts.push(origAcc);\n      this.storeWallet();\n    } else {\n      console.warn(`Manager address $(manager) not found`);\n    }\n  }\n  /*addUnusedAccount(account: any) {\n    if (this.wallet instanceof HdWallet) {\n      this.wallet.unusedAccounts.push(account);\n    }\n  }*/\n  addressExists(address: string): boolean {\n    return this.wallet?.getAccounts().findIndex((a) => a.address === address) !== -1;\n  }\n  async incrementAccountIndex(password: string): Promise<string> {\n    if (this.wallet instanceof HdWallet) {\n      const seed = await this.encryptionService.decrypt(this.wallet.encryptedSeed, password, this.wallet.IV, 3);\n      if (seed) {\n        const keyPair: KeyPair = hd.seedToKeyPair(seed, `44'/1729'/${this.wallet.index}'/0'`);\n        this.addImplicitAccount(keyPair.pk, this.wallet.index);\n        this.wallet.index++;\n        this.storeWallet();\n        return keyPair.pkh;\n      } else {\n        return ''; // Wrong pwd\n      }\n    }\n  }\n  /*\n    Clear wallet data from browser\n  */\n  clearWallet(instanceId: string = '') {\n    this.wallet = null;\n    this.storageId = 0;\n    if (instanceId) {\n      sessionStorage.removeItem(instanceId);\n    } else {\n      localStorage.removeItem(this.storeKey);\n    }\n  }\n  /*\n  Used to decide wallet type\n  */\n  isFullWallet(): boolean {\n    return this.wallet instanceof FullWallet;\n  }\n  isViewOnlyWallet(): boolean {\n    return false;\n  }\n  isObserverWallet(): boolean {\n    return false;\n  }\n  isLedgerWallet(): boolean {\n    return this.wallet instanceof LedgerWallet;\n  }\n  isHdWallet(): boolean {\n    return this.wallet instanceof HdWallet;\n  }\n  isTorusWallet(): boolean {\n    return this.wallet instanceof TorusWallet;\n  }\n  isEmbeddedTorusWallet(): boolean {\n    return this.wallet instanceof EmbeddedTorusWallet;\n  }\n  isWatchWallet(): boolean {\n    return this.wallet instanceof WatchWallet;\n  }\n  isPwdWallet(): boolean {\n    return !this.isTorusWallet() && !this.isLedgerWallet() && !this.isWatchWallet();\n  }\n  exportKeyStoreInit(walletType: WalletType, encryptedSeed: string, encryptedEntropy: string, iv: string) {\n    const data: any = {\n      provider: 'Kukai',\n      version: 3.0,\n      walletType,\n      encryptedSeed,\n      encryptedEntropy,\n      iv\n    };\n    return data;\n  }\n  /*\n    Read and write to localStorage\n  */\n  initStorage(instanceId: string = '') {\n    this.storageId = Date.now();\n    if (instanceId) {\n      sessionStorage.setItem(instanceId, JSON.stringify({ localStorageId: this.storageId }));\n    } else {\n      localStorage.setItem(this.storeKey, JSON.stringify({ localStorageId: this.storageId }));\n    }\n  }\n  storeWallet() {\n    const localStorageId = this.getLocalStorageId();\n    if (this.storageId && localStorageId && this.storageId === localStorageId) {\n      let type = 'unknown';\n      if (this.wallet instanceof HdWallet) {\n        type = 'HdWallet';\n      } else if (this.wallet instanceof LegacyWalletV1) {\n        type = 'LegacyWalletV1';\n      } else if (this.wallet instanceof LegacyWalletV2) {\n        type = 'LegacyWalletV2';\n      } else if (this.wallet instanceof LegacyWalletV3) {\n        type = 'LegacyWalletV3';\n      } else if (this.wallet instanceof LedgerWallet) {\n        type = 'LedgerWallet';\n      } else if (this.wallet instanceof EmbeddedTorusWallet) {\n        type = 'EmbeddedTorusWallet';\n      } else if (this.wallet instanceof TorusWallet) {\n        type = 'TorusWallet';\n      } else if (this.wallet instanceof WatchWallet) {\n        type = 'WatchWallet';\n      }\n      this.getStorage().setItem(\n        this.wallet instanceof EmbeddedTorusWallet ? this.wallet.instanceId : this.storeKey,\n        JSON.stringify({\n          type,\n          localStorageId: this.storageId,\n          data: this.wallet\n        })\n      );\n    } else {\n      console.log('Outdated storage id');\n    }\n    this.subjectService.walletUpdated.next(null);\n  }\n  getLocalStorageId() {\n    const walletData = this.wallet instanceof EmbeddedTorusWallet ? sessionStorage.getItem(this.wallet.instanceId) : localStorage.getItem(this.storeKey);\n    if (walletData) {\n      const parsed = JSON.parse(walletData);\n      if (parsed && parsed.localStorageId) {\n        return parsed.localStorageId;\n      }\n    }\n    return 0;\n  }\n\n  loadStoredWallet(instanceId = '') {\n    const walletData = instanceId ? sessionStorage.getItem(instanceId) : localStorage.getItem(this.storeKey);\n    if (walletData && walletData !== 'undefined') {\n      const parsedWalletData = JSON.parse(walletData);\n      console.log(parsedWalletData);\n      if (parsedWalletData.type && parsedWalletData.data && parsedWalletData.localStorageId) {\n        this.storageId = parsedWalletData.localStorageId;\n        const wd = parsedWalletData.data;\n        this.deserializeStoredWallet(wd, parsedWalletData.type);\n      } else {\n        console.log('couldnt load a wallet');\n        this.clearWallet(instanceId);\n      }\n    } else {\n      console.log('couldnt load a wallet');\n      this.clearWallet(instanceId);\n    }\n  }\n  deserializeStoredWallet(wd: any, type: string) {\n    switch (type) {\n      case 'HdWallet':\n        this.wallet = new HdWallet(wd.IV, wd.encryptedSeed, wd.encryptedEntropy);\n        if (this.wallet instanceof HdWallet) {\n          this.wallet.index = wd.index;\n        }\n        break;\n      case 'LegacyWalletV1':\n        this.wallet = new LegacyWalletV1(wd.salt, wd.encryptedSeed);\n        break;\n      case 'LegacyWalletV2':\n        this.wallet = new LegacyWalletV2(wd.IV, wd.encryptedSeed);\n        break;\n      case 'LegacyWalletV3':\n        this.wallet = new LegacyWalletV3(wd.IV, wd.encryptedSeed, wd.encryptedEntropy);\n        break;\n      case 'LedgerWallet':\n        this.wallet = new LedgerWallet();\n        break;\n      case 'TorusWallet':\n        this.wallet = new TorusWallet(wd.verifier, wd.id, wd.name);\n        this.torusService.initTorus();\n        break;\n      case 'EmbeddedTorusWallet':\n        this.wallet = new EmbeddedTorusWallet(wd.verifier, wd.id, wd.name, wd.origin, wd.sk, wd.instanceId);\n        this.torusService.initTorus();\n        break;\n      case 'WatchWallet':\n        this.wallet = new WatchWallet();\n      default:\n    }\n    this.wallet.XTZrate = wd.XTZrate;\n    this.wallet.totalBalanceUSD = wd.totalBalanceUSD;\n    this.wallet.totalBalanceXTZ = wd.totalBalanceXTZ;\n    if (wd.lookups) {\n      this.wallet.lookups = wd.lookups;\n    }\n    for (const implicit of wd.implicitAccounts) {\n      const impAcc: ImplicitAccount = new ImplicitAccount(implicit.pkh, implicit.pk, implicit.derivationPath ? implicit.derivationPath : null);\n      impAcc.balanceUSD = implicit.balanceUSD;\n      impAcc.balanceXTZ = implicit.balanceXTZ;\n      impAcc.delegate = implicit.delegate;\n      impAcc.state = implicit.state;\n      impAcc.activities = implicit.activities;\n      if (implicit.tokens) {\n        impAcc.tokens = implicit.tokens;\n      }\n      for (const originated of implicit.originatedAccounts) {\n        const origAcc = new OriginatedAccount(originated.address, impAcc.pkh, impAcc.pk);\n        origAcc.balanceUSD = originated.balanceUSD;\n        origAcc.balanceXTZ = originated.balanceXTZ;\n        origAcc.delegate = originated.delegate;\n        origAcc.state = originated.state;\n        origAcc.activities = originated.activities;\n        impAcc.originatedAccounts.push(origAcc);\n      }\n      this.wallet.implicitAccounts.push(impAcc);\n    }\n  }\n  private getStorage() {\n    return this.isEmbeddedTorusWallet() ? sessionStorage : localStorage;\n  }\n}\n","export type WalletObject = LegacyWalletV1 | LegacyWalletV2 | LegacyWalletV3 | LedgerWallet | HdWallet | TorusWallet | WatchWallet;\n\nexport class Wallet {\n  totalBalanceXTZ: number | null;\n  totalBalanceUSD: number | null;\n  XTZrate: number | null;\n  implicitAccounts: ImplicitAccount[];\n  lookups: any[];\n  constructor() {\n    this.totalBalanceXTZ = null;\n    this.totalBalanceUSD = null;\n    this.XTZrate = null;\n    this.implicitAccounts = [];\n    this.lookups = [];\n  }\n  getAccounts(): Account[] {\n    const accounts: Account[] = [];\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        accounts.push(implicitAccount);\n        if (implicitAccount.originatedAccounts.length) {\n          for (const originatedAccount of implicitAccount.originatedAccounts) {\n            accounts.push(originatedAccount);\n          }\n        }\n      }\n    }\n    return accounts;\n  }\n  getImplicitAccounts(): ImplicitAccount[] {\n    return this.implicitAccounts;\n  }\n  getAccount(address: string): Account {\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        if (implicitAccount.address === address) {\n          return implicitAccount;\n        }\n        if (implicitAccount.originatedAccounts.length) {\n          for (const originatedAccount of implicitAccount.originatedAccounts) {\n            if (originatedAccount.address === address) {\n              return originatedAccount;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getImplicitAccount(pkh: string): ImplicitAccount {\n    if (this.implicitAccounts.length) {\n      for (const implicitAccount of this.implicitAccounts) {\n        if (implicitAccount.pkh === pkh) {\n          return implicitAccount;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport class FullWallet extends Wallet {\n  encryptedSeed: string;\n  constructor(encryptedSeed: string) {\n    super();\n    this.encryptedSeed = encryptedSeed;\n  }\n}\n\nexport class LegacyWalletV1 extends FullWallet {\n  salt: string;\n  constructor(salt: string, encrypedSeed: string) {\n    super(encrypedSeed);\n    this.salt = salt;\n  }\n}\n\nexport class LegacyWalletV2 extends FullWallet {\n  IV: string;\n  constructor(IV: string, encryptedSeed: string) {\n    super(encryptedSeed);\n    this.IV = IV;\n  }\n}\n\nexport class LegacyWalletV3 extends FullWallet {\n  encryptedEntropy: string;\n  IV: string;\n  constructor(IV: string, encryptedSeed: string, encryptedEntropy: string) {\n    super(encryptedSeed);\n    this.IV = IV;\n    this.encryptedEntropy = encryptedEntropy;\n  }\n}\n\nexport class HdWallet extends FullWallet {\n  encryptedEntropy: string;\n  IV: string;\n  index: number;\n  constructor(IV: string, encryptedSeed: string, encryptedEntropy: string) {\n    super(encryptedSeed);\n    this.encryptedEntropy = encryptedEntropy;\n    this.IV = IV;\n    this.index = 0;\n  }\n}\n\nexport class TorusWallet extends Wallet {\n  verifier: string;\n  id: string;\n  name: string;\n  constructor(verifier: string, id: string, name: string) {\n    super();\n    this.verifier = verifier;\n    this.id = id;\n    this.name = name;\n  }\n  displayName() {\n    if (['twitter', 'facebook'].includes(this.verifier)) {\n      return this.name;\n    }\n    return this.id;\n  }\n}\nexport class EmbeddedTorusWallet extends TorusWallet {\n  origin: string;\n  sk: string;\n  instanceId: string;\n  constructor(verifier: string, id: string, name: string, origin: string, sk: string, instanceId: string) {\n    super(verifier, id, name);\n    this.origin = origin;\n    this.sk = sk;\n    this.instanceId = instanceId;\n  }\n}\nexport class LedgerWallet extends Wallet {\n  constructor() {\n    super();\n  }\n}\n\nexport class WatchWallet extends Wallet {\n  constructor() {\n    super();\n  }\n}\n\n// Accounts\n\nexport abstract class Account {\n  balanceXTZ: number | null;\n  balanceUSD: number | null;\n  delegate: string;\n  state: string;\n  activities: Activity[] | null;\n  tokens: Token[] | null;\n  pkh: string;\n  pk: string;\n  address: string;\n  constructor(pkh: string, pk: string, address: string) {\n    this.balanceXTZ = null;\n    this.balanceUSD = null;\n    this.activities = null;\n    this.tokens = null;\n    this.delegate = '';\n    this.state = '';\n    this.pkh = pkh;\n    this.pk = pk;\n    this.address = address;\n  }\n  public abstract isImplicit(): boolean;\n  shortAddress(): string {\n    return this.address.slice(0, 7) + '...' + this.address.slice(-4);\n  }\n  getTokenBalance(tokenId: string): string {\n    if (this.tokens?.length) {\n      for (const token of this.tokens) {\n        if (tokenId === token.tokenId) {\n          return token.balance;\n        }\n      }\n    }\n    return '';\n  }\n  getTokenBalances(): Token[] {\n    return this.tokens ?? [];\n  }\n  updateTokenBalance(tokenId: string, balance: string) {\n    if (!this.tokens || !tokenId) {\n      this.tokens = [];\n    }\n    if (tokenId && this.tokens.length) {\n      for (let i = 0; i < this.tokens.length; i++) {\n        if (tokenId === this.tokens[i].tokenId) {\n          if (this.tokens[i].balance !== balance) {\n            if (balance === '0' || (balance && balance.slice(0, 1) === '-')) {\n              this.tokens.splice(i, 1);\n            } else {\n              this.tokens[i].balance = balance;\n            }\n          }\n          return;\n        }\n      }\n    }\n    if (tokenId.length > 37 && balance && balance !== '0' && balance.slice(0, 1) !== '-') {\n      this.tokens.unshift({ tokenId, balance });\n    }\n  }\n}\n\nexport class ImplicitAccount extends Account {\n  originatedAccounts: OriginatedAccount[];\n  derivationPath?: string;\n  constructor(pkh: string, pk: string, derivationPath?: string) {\n    super(pkh, pk, pkh);\n    this.originatedAccounts = [];\n    if (derivationPath) {\n      this.derivationPath = derivationPath;\n    }\n  }\n  isImplicit(): boolean {\n    return true;\n  }\n}\n\nexport class OriginatedAccount extends Account {\n  constructor(ktAddress: string, managerPkh: string, managerPk: string) {\n    super(managerPkh, managerPk, ktAddress);\n  }\n  isImplicit(): boolean {\n    return false;\n  }\n}\n\nexport enum OpStatus {\n  FAILED = -1,\n  UNCONFIRMED = 0,\n  HALF_CONFIRMED = 0.5, // confirmed but not indexed fully yet\n  CONFIRMED = 1\n}\nexport class Activity {\n  type: string;\n  block: string;\n  status: OpStatus;\n  amount: string;\n  source: {\n    address: string;\n    alias?: string;\n  };\n  destination: {\n    address: string;\n    alias?: string;\n  };\n  fee?: string;\n  hash: string;\n  counter?: number;\n  timestamp: number | null;\n  tokenId?: string;\n  entrypoint?: string;\n  opId?: string;\n}\nexport class Token {\n  tokenId: string;\n  balance: string;\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\nimport { Constants, DisplayLinkOption } from '../app/interfaces';\n\nexport const environment = {\n  production: false\n};\nconst _CONSTANTS: Constants = {\n  NETWORK: 'limanet',\n  NAME: 'Testnet / Limanet',\n  TEZOS_DOMAIN: {\n    TOP_DOMAINS: ['lim']\n  },\n  MAINNET: false,\n  NODE_URL: 'https://limanet.ecadinfra.com',\n  API_URL: 'https://api.limanet.tzkt.io/v1',\n  BLOCK_EXPLORER_URL: 'https://limanet.tzkt.io',\n  HARD_LIMITS: {\n    hard_gas_limit_per_operation: 1040000,\n    hard_gas_limit_per_block: 5200000,\n    hard_storage_limit_per_operation: 60000\n  },\n  CONTRACT_ALIASES: {},\n  ASSETS: {},\n  NFT_CONTRACT_OVERRIDES: [],\n  CONTRACT_OVERRIDES: {},\n  FEATURE_CONTRACTS: {}\n};\nconst _TRUSTED_TOKEN_CONTRACTS = [];\nconst _BLACKLISTED_TOKEN_CONTRACTS = [];\nconst _MODEL_3D_WHITELIST = [];\n\nexport const CONSTANTS = JSON.parse(JSON.stringify(_CONSTANTS));\nexport const TRUSTED_TOKEN_CONTRACTS = JSON.parse(JSON.stringify(_TRUSTED_TOKEN_CONTRACTS));\nexport const BLACKLISTED_TOKEN_CONTRACTS = JSON.parse(JSON.stringify(_BLACKLISTED_TOKEN_CONTRACTS));\nexport const MODEL_3D_WHITELIST = JSON.parse(JSON.stringify(_MODEL_3D_WHITELIST));\n","import { Constants } from './../app/interfaces';\nimport {\n  CONSTANTS as _CONSTANTS,\n  TRUSTED_TOKEN_CONTRACTS as _TTC,\n  BLACKLISTED_TOKEN_CONTRACTS as _BLTC,\n  MODEL_3D_WHITELIST as _M3DW\n} from './environment.limanet';\n\nexport const environment = {\n  production: false\n};\nexport const CONSTANTS: Constants = _CONSTANTS;\nexport const TRUSTED_TOKEN_CONTRACTS = _TTC;\nexport const BLACKLISTED_TOKEN_CONTRACTS = _BLTC;\nexport const MODEL_3D_WHITELIST = _M3DW;\n","import { Injectable } from '@angular/core';\nimport { KeyPair, WalletType } from './../../interfaces';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CoordinatorService } from '../coordinator/coordinator.service';\nimport { LegacyWalletV1, LegacyWalletV2, LegacyWalletV3, HdWallet, LedgerWallet, TorusWallet, EmbeddedTorusWallet, WatchWallet } from '../wallet/wallet';\nimport { hd, utils } from '@tezos-core-tools/crypto-utils';\nimport { EncryptionService } from '../encryption/encryption.service';\nimport { TorusService } from '../torus/torus.service';\nimport { IndexerService } from '../indexer/indexer.service';\nimport { OperationService } from '../operation/operation.service';\n\n@Injectable()\nexport class ImportService {\n  constructor(\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private indexerService: IndexerService,\n    private encryptionService: EncryptionService,\n    private torusService: TorusService,\n    private operationService: OperationService\n  ) {}\n  pwdRequired(json: string) {\n    const walletData = JSON.parse(json);\n    if (walletData.provider !== 'Kukai') {\n      throw new Error(`Unsupported wallet format`);\n    }\n    if (walletData.walletType === WalletType.LegacyWallet || walletData.walletType === WalletType.HdWallet) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  async importWalletFromJson(json: any, pwd: string): Promise<boolean> {\n    // From file\n    let seed;\n    let walletData;\n    try {\n      walletData = JSON.parse(json);\n      if (walletData.walletType === WalletType.HdWallet && walletData.version === 3) {\n        //hd\n        seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.iv, 3);\n      } else if (walletData.walletType === WalletType.LegacyWallet) {\n        if (walletData.version === 1) {\n          console.log('v1');\n          seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.pkh.slice(3, 19), 1);\n          if (utils.seedToKeyPair(seed).pkh !== walletData.pkh) {\n            seed = '';\n          }\n        } else if (walletData.version === 2 || walletData.version === 3) {\n          seed = await this.encryptionService.decrypt(walletData.encryptedSeed, pwd, walletData.iv, walletData.version);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n      throw new Error('Failed to decrypt keystore file');\n    }\n    if (seed) {\n      return this.importWalletFromObject(walletData, seed).then(\n        (ans) => {\n          return ans;\n        },\n        (e) => {\n          console.error(e);\n          throw new Error('Failed to fetch account(s). Please check your connection.');\n        }\n      );\n    } else {\n      throw new Error('Wrong password');\n    }\n  }\n  async importWalletFromObject(data: any, seed: any): Promise<boolean> {\n    this.coordinatorService.stopAll();\n    if (data.walletType === WalletType.HdWallet && data.version === 3) {\n      // HD\n      this.walletService.wallet = new HdWallet(data.iv, data.encryptedSeed, data.encryptedEntropy);\n    } else if (data.walletType === WalletType.LegacyWallet) {\n      if (data.version === 3) {\n        this.walletService.wallet = new LegacyWalletV3(data.iv, data.encryptedSeed, data.encryptedEntropy);\n      } else if (data.version === 2) {\n        this.walletService.wallet = new LegacyWalletV2(data.iv, data.encryptedSeed);\n      } else if (data.version === 1) {\n        this.walletService.wallet = new LegacyWalletV1(data.pkh.slice(3, 19), data.encryptedSeed);\n      } else {\n        throw new Error('Unsupported wallet file');\n      }\n    } else {\n      throw new Error('Unsupported wallet file');\n    }\n    let keys: KeyPair;\n    if (seed.length === 32) {\n      keys = utils.seedToKeyPair(seed);\n    } else if (seed.length === 64) {\n      keys = hd.keyPairFromAccountIndex(seed, 0);\n    } else {\n      throw new Error('Invalid seed length');\n    }\n    this.walletService.initStorage();\n    if (this.walletService.wallet instanceof HdWallet) {\n      let index = 0;\n      let isUsedAccount: boolean = true;\n      while (isUsedAccount) {\n        keys = hd.keyPairFromAccountIndex(seed, index);\n        isUsedAccount = await this.indexerService.isUsedAccount(keys.pkh);\n        if (isUsedAccount || index === 0) {\n          this.walletService.addImplicitAccount(keys.pk, index++);\n          await this.findContracts(keys.pkh);\n        }\n      }\n      this.walletService.wallet.index = index;\n    } else {\n      this.walletService.addImplicitAccount(keys.pk);\n      await this.findContracts(keys.pkh);\n    }\n    return true;\n  }\n\n  async importWalletFromPk(pk: string, derivationPath: string, verifierDetails: any = null, sk: string = '', instanceId: string = ''): Promise<boolean> {\n    this.coordinatorService.stopAll();\n    if (derivationPath) {\n      return this.ledgerImport(pk, derivationPath);\n    } else if (verifierDetails) {\n      return this.torusImport(pk, verifierDetails, sk, instanceId);\n    }\n  }\n  async watch(pkh: string) {\n    if (this.operationService.validAddress(pkh)) {\n      const pk = await this.operationService.getManager(pkh).toPromise();\n      if (pk) {\n        this.walletService.initStorage();\n        this.walletService.wallet = new WatchWallet();\n        this.walletService.addImplicitAccount(pk);\n        this.findContracts(this.walletService.wallet.implicitAccounts[0].pkh);\n      } else {\n        console.error('Public key not found');\n      }\n    }\n  }\n  async ledgerImport(pk: string, derivationPath: string) {\n    try {\n      this.walletService.initStorage();\n      this.walletService.wallet = new LedgerWallet();\n      this.walletService.addImplicitAccount(pk, derivationPath);\n      await this.findContracts(this.walletService.wallet.implicitAccounts[0].pkh);\n      return true;\n    } catch (err) {\n      console.warn(err);\n      this.walletService.clearWallet();\n      return false;\n    }\n  }\n  async torusImport(pk: string, verifierDetails: any, sk: string = '', instanceId: string = '') {\n    try {\n      if (verifierDetails.embedded) {\n        this.walletService.initStorage(instanceId);\n        this.walletService.wallet = new EmbeddedTorusWallet(\n          verifierDetails.verifier,\n          verifierDetails.id,\n          verifierDetails.name,\n          verifierDetails.origin,\n          sk,\n          instanceId\n        );\n      } else {\n        this.walletService.initStorage();\n        this.walletService.wallet = new TorusWallet(verifierDetails.verifier, verifierDetails.id, verifierDetails.name);\n      }\n      if (verifierDetails.verifier === 'twitter') {\n        this.updateTwitterName(verifierDetails.id);\n      }\n      if (pk || !verifierDetails?.embedded) {\n        this.walletService.addImplicitAccount(pk);\n      } else {\n        this.walletService.storeWallet();\n      }\n      return true;\n    } catch (err) {\n      console.warn(err);\n      this.walletService.clearWallet(instanceId);\n      return false;\n    }\n  }\n  async updateTwitterName(verifierId: string) {\n    const twitterId = verifierId.split('|')[1];\n    const { username } = await this.torusService.twitterLookup(undefined, twitterId);\n    if (username && this.walletService.wallet instanceof TorusWallet) {\n      this.walletService.wallet.name = '@' + username;\n    }\n  }\n  async findContracts(pkh: string) {\n    const addresses = await this.indexerService.getContractAddresses(pkh);\n    for (const KT of addresses) {\n      console.log('Found KT: ' + KT);\n      this.walletService.addOriginatedAccount(KT, pkh);\n    }\n    this.walletService.storeWallet();\n  }\n}\n","<div class=\"flex-row\" id=\"wrapper\">\n  <div class=\"flex-column left\">\n    <div class=\"flex-column top\">\n      <h1><ng-container *ngIf=\"isMobile\">&nbsp;</ng-container>A Secure Home&nbsp;<br />for your Digital Assets</h1>\n      <h3>Manage your digital assets and seamlessly&nbsp;<br *ngIf=\"!isMobile\" />connect with experiences and apps on Tezos.</h3>\n    </div>\n    <div class=\"flex-column login\">\n      <span>Sign in with social:</span>\n      <div class=\"flex-row social\">\n        <button class=\"flex-row google\" (click)=\"torusLogin('google')\"><img\n            src=\"../../../assets/img/google-logo.svg\">&nbsp;<span>CONTINUE WITH\n            GOOGLE</span></button>\n        <div class=\"flex-row torus\">\n          <img class=\"facebook\" src=\"../../../assets/img/facebook-logo.svg\" (click)=\"torusLogin('facebook')\">\n          <img class=\"twitter\" src=\"../../../assets//img/twitter-logo.svg\" (click)=\"torusLogin('twitter')\">\n          <img class=\"reddit\" src=\"../../../assets/img/reddit-logo.svg\" (click)=\"torusLogin('reddit')\">\n          <img class=\"email\" src=\"../../../assets/img/email-logo-start.svg\" (click)=\"torusLogin('email')\">\n        </div>\n      </div>\n    </div>\n    <div class=\"flex-column bottom\">\n      <img src=\"../../../assets/img/landing-hero.png\" id=\"bg-mobile\">\n      <div id=\"ribbon-mobile\"></div>\n    </div>\n  </div>\n  <div class=\"flex-column right\">\n    <img src=\"../../../assets/img/landing-hero.png\" id=\"bg\">\n    <div id=\"ribbon\"></div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { ActivatedRoute } from '@angular/router';\nimport 'rxjs/add/operator/filter';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ImportService } from '../../../services/import/import.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['../../../../scss/components/views/start/start.component.scss']\n})\nexport class StartComponent implements OnInit, OnDestroy {\n  isMobile = false;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private walletService: WalletService,\n    public translate: TranslateService,\n    public torusService: TorusService,\n    private importService: ImportService,\n    private messageService: MessageService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.subscriptions.add(\n      this.route.queryParams.subscribe(async (params) => {\n        if (params?.devtool === 'watch') {\n          const address = prompt('Enter watch address');\n          if (address) {\n            try {\n              await this.importService.watch(address);\n              this.messageService.startSpinner();\n              this.router.navigate([`/account/${address}`]);\n            } finally {\n              this.messageService.stopSpinner();\n            }\n          }\n        }\n      })\n    );\n    if (!this.walletService.wallet) {\n      this.torusService.initTorus();\n    }\n\n    const e = () => {\n      this.isMobile = !!parseInt(getComputedStyle(document.documentElement).getPropertyValue('--is-mobile'));\n    };\n    window.addEventListener('resize', e);\n    e();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  async torusLogin(verifier: string, verifierId = ''): Promise<void> {\n    this.messageService.startSpinner('Loading wallet...');\n    // const { keyPair, userInfo } = await this.mockLogin();\n    const { keyPair, userInfo } = await this.torusService.loginTorus(verifier).catch(async (e) => await this.messageService.stopSpinner());\n    console.log('login done');\n    if (keyPair) {\n      await this.importService\n        .importWalletFromPk(keyPair.pk, '', {\n          verifier: userInfo.typeOfLogin,\n          id: userInfo.verifierId,\n          name: userInfo.name\n        })\n        .then((success: boolean) => {\n          if (success) {\n            console.log('success');\n            this.router.navigate([`/account/`]);\n            this.messageService.stopSpinner();\n          } else {\n            this.messageService.addError('Torus import failed');\n            this.messageService.stopSpinner();\n          }\n        });\n    } else {\n      await this.messageService.stopSpinner();\n    }\n  }\n\n  private async mockLogin(): Promise<any> {\n    const keyPair = {\n      sk: 'spsk1VfCfhixtzGvUSKDre6jwyGbXFm6aoeLGnxeVLCouueZmkgtJF',\n      pk: 'sppk7cZsZeBApsFgYEdWuSwj92YCWkJxMmBfkN3FeKRmEB7Lk5pmDrT',\n      pkh: 'tz2WKg52VqnYXH52TZbSVjT4hcc8YGVKi7Pd'\n    };\n    const userInfo = {\n      typeOfLogin: 'google',\n      verifierId: 'mock.user@gmail.com',\n      name: 'Mock User'\n    };\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({ keyPair, userInfo });\n      }, 2000);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { saveAs } from 'file-saver';\n\n@Injectable()\nexport class ExportService {\n  constructor() {}\n  downloadWallet(data: any) {\n    const blob = new Blob([JSON.stringify(data, null, 4)], {\n      type: 'application/json'\n    });\n    let filename = 'wallet.tez';\n    if (data.walletType === 1) {\n      filename = 'view-only_wallet.tez';\n    } else if (data.walletType === 2) {\n      filename = 'observer_wallet.tez';\n    } else if (data.walletType === 3) {\n      filename = 'ledger_wallet.tez';\n    } else if (data.walletType === 4) {\n      filename = 'hd-wallet.tez';\n    }\n    saveAs(blob, filename);\n  }\n\n  downloadOperationData(hex: string, signed: boolean) {\n    const data = {\n      hex: hex,\n      signed: signed\n    };\n    let filename;\n    if (signed) {\n      filename = 'signed.tzop';\n    } else {\n      filename = 'unsigned.tzop';\n    }\n    const blob = new Blob([JSON.stringify(data, null, 4)], {\n      type: 'application/json'\n    });\n    saveAs(blob, filename);\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div *ngIf=\"activePanel==1\" class=\"flex-column body\">\n      <h1>Back up your seed</h1>\n      <p class=\"description\">When you create a new wallet, new Tezos Recovery (Seed) Words are generated.<br />Your seed\n        words are\n        the\n        master key of your wallet accounts and any value they hold.</p>\n      <div class=\"whitebox\" (mouseout)=\"mouseOut($event)\" (touchstart)=\"$event.stopPropagation(); this.hideBlur = true;\"\n        (touchend)=\"checkSelection($event)\" (click)=\"$event.stopPropagation()\" (mouseup)=\"checkSelection($event)\">\n        {{ MNEMONIC.string }}<div *ngIf=\"!hideBlur\" class=\"flex-row seed-blur\"\n          (click)=\"$event.stopPropagation(); this.hideBlur = true;\">\n          <span>CLICK HERE TO REVEAL YOUR SEED WORDS</span>\n        </div>\n      </div>\n      <p class=\"description red\">\n        <span *ngIf=\"isSelectedMnemonic\" style=\"margin-top: -4rem\" class=\"warning red\">\n          WARNING: Copying the seed words to your clipboard can result in sensitive leakage. The clipboard is a shared\n          resource that can be monitored by other web pages or browser extensions.<br />\n        </span> Be sure sure to back it up (seed words), write it down, and keep it incredibly safe.\n      </p>\n      <button class=\"button next\" (click)=\"verifyView()\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==2\" class=\"flex-column body\">\n      <h1>Verify your seed</h1>\n      <p class=\"description\">{{ MNEMONIC.verify.length ? 'Fill in the ' + formatVerifyDescription(MNEMONIC.verify[0] +\n        1)\n        + ' to verify\n        your seed backup' : 'Recovery Words (seed) have been verified' }}</p>\n      <progress max=\"{{ MNEMONIC.wordsToVerify }}\"\n        value=\"{{ MNEMONIC.wordsToVerify - MNEMONIC.verify.length }}\"></progress>\n      <div *ngIf=\"MNEMONIC.verify.length\" class=\"flex-row word-verify\">\n        <div class=\"flex-column word-hint\">\n          <span class=\"word-index\">{{ indexFormat(MNEMONIC.verify[0] - 1) }}</span>\n          <span class=\"word-value\"><b>{{ valueFormat(MNEMONIC.verify[0] - 1) }}</b></span>\n        </div>\n        <div class=\"flex-column word-input\">\n          <span class=\"word-index\">\n            <ng-container *ngIf=\"MNEMONIC.verify.length\">Word {{ MNEMONIC.verify[0] + 1 }}</ng-container>\n          </span>\n          <input id=\"wordInput\" class=\"text\" name=\"none\" type=\"text\" (input)=\"checkWord()\" (change)=\"checkWord()\"\n            [(ngModel)]=\"wordInput\" [disabled]=\"!MNEMONIC.verify.length\" autofocus>\n        </div>\n        <div class=\"flex-column word-hint\">\n          <span class=\"word-index\">{{ indexFormat(MNEMONIC.verify[0] + 1) }}</span>\n          <span class=\"word-value\"><b>{{ valueFormat(MNEMONIC.verify[0] + 1) }}</b></span>\n        </div>\n      </div>\n      <button *ngIf=\"!MNEMONIC.verify.length\" class=\"button next\" (click)=\"pwdView()\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==3\" class=\"flex-column body\">\n      <h1>Set a password</h1>\n      <p class=\"description bold blue\">This password will be used to create an encrypted keystore file.</p>\n      <p class=\"description\">When performing operations that need to be signed with your\n        secret key, this password will be required</p>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.PASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd1\" (keyup)=\"calcStrength()\">\n      <small class=\"strength\"> {{ 'NEWWALLETCOMPONENT.PASSWORDSTRENGTH' | translate }} — <b\n          [style.color]=\"pwdStrength === 'Catastrophic!' ? 'darkred' : pwdStrength === 'Very weak!' ? 'red' : pwdStrength === 'Weak!' ? 'orange' : pwdStrength === 'Strong!' ? 'green' : 'red'\">{{\n          pwdStrength }}</b></small>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.CONFIRMPASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd2\" (keydown.enter)=\"encryptWallet($event)\">\n      <button class=\"button next\" [style.visibility]=\"!pwd1 ? 'hidden' : ''\" (click)=\"encryptWallet($event)\">Next</button>\n    </div>\n    <div *ngIf=\"activePanel==4\" class=\"flex-column body\">\n      <h1>Wallet created!</h1>\n      <p class=\"description bold\">Your wallet is now set up and ready to be used.</p>\n      <p class=\"description\">Download your encrypted keystore file and import it when you want to access your wallet.\n      </p>\n      <div class=\"whitebox final\">\n        <p class=\"description bold pkh\">Your public account address:<br />{{ getPkh() }}</p>\n      </div>\n      <button class=\"button next\" (click)=\"download()\">Download</button>\n      <button class=\"button next\" [style.visibility]=\"!ekfDownloaded ? 'hidden' : ''\" (click)=\"done()\">Open\n        Wallet</button>\n    </div>\n    <span class=\"flex-row step-counter\">\n      <ng-container *ngFor=\"let _ of [1, 2, 3, 4]\">\n        <div class=\"dot\" [class]=\"_ === activePanel ? 'selected' : ''\"></div>\n      </ng-container>\n    </span>\n  </div>\n</form>","import { Component, OnInit, Input, HostBinding } from '@angular/core';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { ExportService } from '../../../../../services/export/export.service';\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-wallet',\n  templateUrl: './new-wallet.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class NewWalletComponent implements OnInit {\n  wordInput: string;\n  @HostBinding('class.tacos') showTacos = false;\n  @Input() pwd1 = '';\n  @Input() pwd2 = '';\n  @Input() userMnemonic = '';\n  hideBlur = false;\n  isSelectedMnemonic = false;\n  pwdStrength = '';\n  ekfDownloaded = false;\n  activePanel = 0;\n  data: any;\n  seed: any;\n  pkh: string;\n  pk: string;\n  MNEMONIC: {\n    string: string;\n    array: string[];\n    verify: number[];\n    wordsToVerify: number;\n  };\n  longClickTs = 0;\n  constructor(\n    private translate: TranslateService,\n    private walletService: WalletService,\n    private messageService: MessageService,\n    private exportService: ExportService,\n    private importService: ImportService,\n    private inputValidationService: InputValidationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.generateSeed();\n  }\n  generateSeed(): void {\n    const mnemonic = this.walletService.createNewWallet();\n    this.MNEMONIC = {\n      string: mnemonic,\n      array: mnemonic.split(' '),\n      verify: [],\n      wordsToVerify: 5\n    };\n    // shuffle\n    const mnemonicLength = this.MNEMONIC.array.length;\n    while (this.MNEMONIC.verify.length < this.MNEMONIC.wordsToVerify) {\n      const index = Math.floor(Math.random() * Math.floor(mnemonicLength));\n      if (!this.MNEMONIC.verify.includes(index)) {\n        this.MNEMONIC.verify.push(index);\n      }\n    }\n    this.MNEMONIC.verify.sort((a, b) => a - b);\n    this.activePanel++;\n  }\n  checkWord(): void {\n    this.wordInput = this.wordInput.toLowerCase().trim();\n    if (this.wordInput === this.MNEMONIC.array[this.MNEMONIC.verify[0]]) {\n      this.MNEMONIC.verify.shift();\n      this.wordInput = '';\n    }\n    if (!this.MNEMONIC.verify) {\n      // Remove focus from input box\n      document.getElementById('wordInput').blur();\n    }\n  }\n  formatVerifyDescription(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return 'Seed backup has been verified!';\n    }\n    switch (index) {\n      case 1:\n      case 21:\n        return `${index}st word`;\n      case 2:\n      case 22:\n        return `${index}nd word`;\n      case 3:\n      case 23:\n        return `${index}rd word`;\n      default:\n        return `${index}th word`;\n    }\n  }\n  indexFormat(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return '';\n    } else if (index < 0 || index >= this.MNEMONIC.array.length) {\n      return '';\n    } else {\n      return 'Word ' + (index + 1);\n    }\n  }\n  valueFormat(index: number): string {\n    if (this.MNEMONIC.verify.length === 0) {\n      return '';\n    } else if (index < 0 || index > this.MNEMONIC.array.length) {\n      return '';\n    } else {\n      return this.MNEMONIC.array[index];\n    }\n  }\n  verifyView(): void {\n    if (this.MNEMONIC.verify.length) {\n      this.activePanel++;\n    } else {\n      throw new Error('Unexpected verify array');\n    }\n  }\n  pwdView(): void {\n    this.activePanel++;\n    this.userMnemonic = '';\n  }\n\n  mnemonicMatch(): boolean {\n    return this.MNEMONIC.string === this.userMnemonic;\n  }\n  async encryptWallet(e: Event): Promise<boolean> {\n    e.preventDefault();\n    if (this.validPwd()) {\n      this.messageService.startSpinner('Encrypting wallet...');\n      const pwd = this.pwd1;\n      this.pwd1 = '';\n      this.pwd2 = '';\n      const ans = await this.walletService.createEncryptedWallet(this.MNEMONIC.string, pwd, '', true);\n      this.seed = ans.seed;\n      this.data = ans.data;\n      this.pkh = ans.pkh;\n      this.pk = ans.pk;\n      this.MNEMONIC.string = '';\n      this.MNEMONIC.array = [];\n      this.MNEMONIC.verify = [];\n      this.activePanel++;\n      this.messageService.stopSpinner();\n      if (document.body.offsetWidth >= 480) {\n        this.showTacos = true;\n      }\n    }\n    return false;\n  }\n  validPwd(): boolean {\n    if (!this.inputValidationService.password(this.pwd1)) {\n      this.messageService.addWarning(this.translate.instant('MNEMONICIMPORTCOMPONENT.PASSWORDWEAK'), 5);\n      return false;\n    } else if (this.pwd1 !== this.pwd2) {\n      this.messageService.addWarning(this.translate.instant('MNEMONICIMPORTCOMPONENT.NOMATCHPASSWORDS'), 5);\n      return false;\n    } else {\n      return true;\n    }\n  }\n  calcStrength(): void {\n    this.pwdStrength = this.inputValidationService.passwordStrengthDisplay(this.pwd1);\n  }\n  async done(): Promise<void> {\n    const seed = this.seed;\n    this.seed = null;\n    await this.importService.importWalletFromObject(this.data, seed);\n    this.walletService.storeWallet();\n    this.data = null;\n    this.messageService.addSuccess('Your new wallet is now set up and ready to use!');\n    this.router.navigate([`/account/`]);\n  }\n  export(): string {\n    return JSON.stringify(this.data);\n  }\n  getPkh(): string {\n    return this.pkh;\n  }\n  download(): void {\n    this.exportService.downloadWallet(this.data);\n    this.ekfDownloaded = true;\n  }\n  mouseOut(e): void {\n    e.stopPropagation();\n    this.hideBlur = false;\n    window.getSelection()?.removeAllRanges();\n  }\n  checkSelection(ev): void {\n    ev.stopPropagation();\n    if (this.isTextSelected()) {\n      this.isSelectedMnemonic = true;\n    }\n  }\n  private isTextSelected(): boolean {\n    let selection: Selection;\n    if (window.getSelection) {\n      selection = window.getSelection();\n    } else if (document.getSelection) {\n      selection = document.getSelection();\n    } else return false;\n    return !selection?.isCollapsed;\n  }\n}\n","<div class=\"flex-column card\">\n  <a routerLink=\"/\"><button class=\"flex-row back\"><img src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n  <div *ngIf=\"activePanel === 0\" class=\"flex-column body\">\n    <h1>Import wallet</h1>\n    <div class=\"flex-row import-options\">\n      <span [class.selected]=\"importOption===0\" (click)=\"reset(); importOption = 0\">Keystore File</span>\n      <span [class.selected]=\"importOption===1\" (click)=\"reset(); importOption = 1\">Seed Words</span>\n      <span [class.selected]=\"importOption===2\" (click)=\"reset(); importOption = 2\">Fundraiser</span>\n    </div>\n    <ng-container *ngIf=\"importOption === 0\">\n      <form autocomplete=\"off\">\n        <p class=\"description\">\n          Import your wallet from an encrypted keystore file (<span style=\"text-transform: lowercase;\">.tez</span>)\n        </p>\n        <input #keyStore name=\"none\" type=\"file\" (change)=\"handleFileInput($event.target.files)\"\n          accept=\".tez{{ firefox ? ', application/json' : '' }}\" id=\"file\" name=\"file\">\n        <div class=\"flex-row button input-file-wrapper\">\n          <label for=\"file\" class=\"flex-row button input-file\" [class.loaded]=\"walletJson\"\n            (click)=\"keyStore?.nativeElement?.click();\">\n            <ng-container *ngIf=\"!walletJson\"><span class=\"b\">Browse</span><img\n                src=\"../../../../../assets/img/import-plus.png\" /></ng-container>\n            <ng-container *ngIf=\"walletJson\">\n              <div class=\"flex-row body\"><img src=\"../../../../../assets/img/lock.png\" />&nbsp;&nbsp;<span\n                  class=\"flex-row filename\">{{\n                  fileName\n                  }}</span>\n              </div>\n              <span class=\"b\">Browse</span>\n            </ng-container>\n          </label>\n        </div>\n        <input *ngIf=\"walletJson\" name=\"none\" type=\"password\" class=\"text\" autocomplete=\"current-password\"\n          (keydown.enter)='!messageService.spinnerOn ? checkImportPwd() : null' id=\"pwd\" [(ngModel)]=\"pwd\" placeholder=\"Password\">\n        <button class=\"button next\" [style.visibility]=\"!walletJson ? 'hidden' : ''\"\n          (click)='!messageService.spinnerOn ? checkImportPwd() : null'>Import</button>\n      </form>\n    </ng-container>\n    <ng-container *ngIf=\"importOption > 0\">\n      <form autocomplete=\"off\">\n        <p class=\"description faucet\" *ngIf=\"importOption === 2\"><span>Please make sure to first <a\n              routerLink=\"/activate\">activate</a> your fundraiser wallet.</span></p>\n        <span class=\"description label\">RECOVERY (SEED) WORDS <span style=\"color: #98a0ab\">12-24 WORDS</span></span>\n        <textarea name=\"none\" class=\"text seed-word\" [(ngModel)]=\"mnemonic\" autocomplete=\"off\" spellcheck=\"false\"\n          [placeholder]=\"'Seed Words (required)'\" (keydown)=\"seedWordKeydown($event)\"></textarea>\n      </form>\n      <ng-container *ngIf=\"importOption === 1\">\n        <app-ui-toggle-advanced style=\"width: 13rem;\" [default]=\"false\" (stateChange)=\"advancedForm = $event\">\n        </app-ui-toggle-advanced>\n        <br /><br />\n        <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"flex-row-wrap import-option-1\">\n          <div class=\"flex-column\">\n            <span class=\"label\"><b>If your seed words are protected by a passphrase, it needs to be entered\n                here</b></span>\n            <input name=\"none\" class=\"text\" type=\"password\" name=\"passphrase\" autocomplete=\"one-time-code\"\n              [(ngModel)]=\"passphrase\" [placeholder]=\"'Passphrase (optional)'\" readonly=\"true\"\n              (click)=\"clickPassword($event)\" (blur)=\"blurPassword($event)\">\n          </div>\n          <div class=\"flex-column\">\n            <span class=\"label\"><b>Provide the public key hash<br /> to verify your passphrase is correct</b></span>\n            <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1... (recommended)'\">\n          </div>\n          <div class=\"flex-row radios\" *ngIf=\"importOption === 1\">\n            <div class=\"flex-row\">\n              <input name=\"none\" (change)=\"hdImport = !hdImport\" type=\"radio\" name=\"walletType\" value=\"hd\" checked>\n              <span>HD wallet</span>\n            </div>\n            <div class=\"flex-row\">\n              <input name=\"none\" (change)=\"hdImport = !hdImport\" type=\"radio\" name=\"walletType\" value=\"legacy\">\n              <span>Legacy wallet</span>\n            </div>\n          </div>\n        </form>\n      </ng-container>\n      <ng-container *ngIf=\"importOption === 2\">\n        <form autocomplete=\"off\">\n          <span class=\"label\">The email used during the fundraiser</span>\n          <input name=\"none\" class=\"text\" type=\"text\" [(ngModel)]=\"email\" [placeholder]=\"'Email (required)'\">\n          <span class=\"label\">The password you chose during the fundraiser</span>\n          <input name=\"none\" class=\"text\" type=\"password\" name=\"tge-password\" autocomplete=\"one-time-code\"\n            [(ngModel)]=\"password\" [placeholder]=\"'Password (required)'\" readonly=\"true\" (click)=\"clickPassword($event)\"\n            (blur)=\"blurPassword($event)\">\n          <span class=\"label\">Provide the public key hash to verify your email and password are correct</span>\n          <input name=\"none\" type=\"text\" class=\"text\" [(ngModel)]=\"pkh\" [placeholder]=\"'tz1... (recomended)'\">\n        </form>\n      </ng-container>\n      <button class=\"button next\" (click)=\"retrieve()\">Import</button>\n    </ng-container>\n  </div>\n  <div *ngIf=\"activePanel==1\" class=\"flex-column body\">\n    <form autocomplete=\"off\">\n      <h1>Set a password</h1>\n      <p class=\"description bold blue\">This password will be used to create an encrypted keystore file.</p>\n      <p class=\"description\">When performing operations that need to be signed with your\n        secret key, this password will be required</p>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.PASSWORD' | translate }}\" class=\"text\"\n        autocomplete=\"new-password\" [(ngModel)]=\"pwd1\" (keyup)=\"calcStrength()\">\n      <small class=\"strength\"> {{ 'NEWWALLETCOMPONENT.PASSWORDSTRENGTH' | translate }} — <b\n          [style.color]=\"pwdStrength === 'Catastrophic!' ? 'darkred' : pwdStrength === 'Very weak!' ? 'red' : pwdStrength === 'Weak!' ? 'orange' : pwdStrength === 'Strong!' ? 'green' : 'red'\">{{\n          pwdStrength }}</b></small>\n      <input name=\"none\" type=\"password\" placeholder=\"{{ 'NEWWALLETCOMPONENT.CONFIRMPASSWORD' | translate }}\"\n        class=\"text\" autocomplete=\"new-password\" [(ngModel)]=\"pwd2\">\n      <button class=\"button next\" [style.visibility]=\"!pwd1 ? 'hidden' : ''\" (click)=\"setPwd()\">Next</button>\n    </form>\n  </div>\n  <div *ngIf=\"activePanel==2\" class=\"flex-column body\">\n    <h1>Wallet created!</h1>\n    <p class=\"description bold\">Your wallet is now set up and ready to be used.</p>\n    <p class=\"description\">Download your encrypted keystore file and import it when you want to access your wallet.\n    </p>\n    <div class=\"whitebox final\">\n      <p class=\"description bold pkh\">Your public account address:<br />{{ showPkh() }}</p>\n    </div>\n    <button class=\"button next\" (click)=\"download()\">Download</button>\n    <button class=\"button next\" [style.visibility]=\"!Downloaded ? 'hidden' : ''\" (click)=\"done()\">Open Wallet</button>\n  </div>\n</div>","import { Component, OnInit, HostBinding, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core'; // Multiple instances created ?\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\nimport { ExportService } from '../../../../../services/export/export.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { utils, hd } from '@tezos-core-tools/crypto-utils';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport * as bip39 from 'bip39';\n\n@Component({\n  selector: 'app-mnemonic-import-wallet',\n  templateUrl: './mnemonic-import.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class MnemonicImportComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.tacos') showTacos = false;\n  @Input('keyStore') keyStore;\n  MIN_PWD_LENGTH = 9;\n  mnemonic: string;\n  email: string;\n  password: string;\n  passphrase: string;\n  pkh: string;\n  importOption = 0;\n  activePanel = 0;\n  hdImport = true;\n  wallet: any;\n  walletJson: string;\n  pwd = '';\n  pwd1: string;\n  pwd2: string;\n  pwdStrength = '';\n  Downloaded = false;\n  fileName = '';\n  showWrongFileUploadMsg: false;\n  browser = 'unknown';\n  advancedForm = false;\n  bip39Wordlist = bip39.wordlists.english;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    private importService: ImportService,\n    private router: Router,\n    private messageService: MessageService,\n    private walletService: WalletService,\n    private exportService: ExportService,\n    private inputValidationService: InputValidationService\n  ) {\n    this.subscriptions.add(\n      this.router.events.pipe(filter((e) => e instanceof NavigationEnd && e.url.startsWith('/import'))).subscribe(() => {\n        const navigation = this.router.getCurrentNavigation();\n        this.importOption = navigation.extras?.state?.option ? navigation.extras.state.option : 0;\n      })\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    document.documentElement.addEventListener('dragover', this.allowDrop.bind(this));\n    document.documentElement.addEventListener('drop', this.handleFileDragAndDrop.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  clickPassword(e): void {\n    e.target.removeAttribute('readonly');\n    e.target.focus();\n  }\n\n  blurPassword(e): void {\n    e.target.setAttribute('readonly', true);\n  }\n\n  retrieve(): void {\n    if (this.mnemonic) {\n      this.mnemonic = this.mnemonic\n        .toLowerCase()\n        .replace(/(\\r\\n|\\n|\\r)/gm, ' ') // replace \\n\n        .replace(/[^a-z| ]/gm, '') // remove forbidden characters\n        .replace(/\\s+/g, ' ') // remove extra whitespaces\n        .trim();\n    }\n    if (this.importOption === 2) {\n      this.passphrase = this.email + this.password;\n    }\n    const invalidMnemonic = this.inputValidationService.invalidMnemonic(this.mnemonic);\n    if (invalidMnemonic) {\n      this.messageService.addWarning(invalidMnemonic, 10);\n    } else if (this.importOption === 2 && !this.inputValidationService.email(this.email)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDEMAIL').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid email!'\n        )\n      );\n    } else if (this.importOption === 2 && !this.password) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPASSWORD').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid password!'\n        )\n      );\n    } else if (!this.inputValidationService.passphrase(this.passphrase)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPASSPHRASE').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid passphrase!'\n        )\n      );\n    } else if (this.pkh && !this.inputValidationService.address(this.pkh)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPKH').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Invalid public key hash!'\n        )\n      );\n    } else {\n      let pkh = '';\n      if (this.pkh) {\n        if (this.importOption === 1 && this.hdImport) {\n          pkh = hd.keyPairFromAccountIndex(utils.mnemonicToSeed(this.mnemonic, this.passphrase, true), 0).pkh;\n        } else {\n          pkh = utils.seedToKeyPair(utils.mnemonicToSeed(this.mnemonic, this.passphrase, false)).pkh;\n        }\n      }\n      if (this.pkh && pkh !== this.pkh) {\n        if (this.importOption === 2) {\n          this.subscriptions.add(\n            this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDEMAILPASSWORD').subscribe((res: string) => this.messageService.addWarning(res, 5))\n          );\n        } else {\n          this.subscriptions.add(\n            this.translate.get('MNEMONICIMPORTCOMPONENT.INVALIDPASSPHRASE').subscribe((res: string) => this.messageService.addWarning(res, 5))\n          );\n        }\n      } else {\n        this.activePanel++;\n      }\n    }\n  }\n  async setPwd(): Promise<void> {\n    if (this.validPwd()) {\n      const password = this.pwd1;\n      this.pwd1 = '';\n      this.pwd2 = '';\n      await this.messageService.startSpinner('Encrypting wallet...');\n      try {\n        this.wallet = await this.walletService.createEncryptedWallet(this.mnemonic, password, this.passphrase, this.importOption === 1 && this.hdImport);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      this.mnemonic = '';\n      this.passphrase = '';\n      this.email = '';\n      this.password = '';\n      this.activePanel++;\n    }\n  }\n\n  validPwd(): boolean {\n    if (!this.inputValidationService.password(this.pwd1)) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.PASSWORDWEAK').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // 'Password is too weak!'\n        )\n      );\n      return false;\n    } else if (this.pwd1 !== this.pwd2) {\n      this.subscriptions.add(\n        this.translate.get('MNEMONICIMPORTCOMPONENT.NOMATCHPASSWORDS').subscribe(\n          (res: string) => this.messageService.addWarning(res, 10) // Passwords don't match!\n        )\n      );\n      return false;\n    } else {\n      return true;\n    }\n  }\n  calcStrength(): void {\n    this.pwdStrength = this.inputValidationService.passwordStrengthDisplay(this.pwd1);\n  }\n  export(): string {\n    return JSON.stringify(this.wallet.data);\n  }\n  showPkh(): string {\n    return this.wallet.pkh;\n  }\n  download(): void {\n    this.exportService.downloadWallet(this.wallet.data);\n    this.Downloaded = true;\n  }\n  async done(): Promise<void> {\n    await this.messageService.startSpinner('Loading wallet...');\n    try {\n      await this.importService.importWalletFromObject(this.wallet.data, this.wallet.seed);\n    } finally {\n      this.messageService.stopSpinner();\n    }\n    this.wallet = null;\n    this.router.navigate([`/account/`]);\n    this.subscriptions.add(this.translate.get('MNEMONICIMPORTCOMPONENT.WALLETREADY').subscribe((res: string) => this.messageService.addSuccess(res)));\n  }\n  /* Keystore handling */\n  importPreCheck(keyFile: string): void {\n    this.typeCheckFile(keyFile);\n    if (this.importService.pwdRequired(keyFile)) {\n      this.walletJson = keyFile;\n    } else {\n      throw new Error('Unsupported wallet file');\n    }\n  }\n  typeCheckFile(keyFile: string): void {\n    const obj = JSON.parse(keyFile);\n    // Required\n    try {\n      if (typeof obj.provider !== 'string') {\n        throw new Error('provider not a string!');\n      }\n      if (typeof obj.version !== 'number') {\n        throw new Error('version not a number!');\n      }\n      if (typeof obj.walletType !== 'number') {\n        throw new Error('walletType not a number!');\n      }\n      // Optional\n      if (obj.encryptedSeed && typeof obj.encryptedSeed !== 'string') {\n        throw new Error('encryptedSeed not a string!');\n      }\n      if (obj.pkh && typeof obj.pkh !== 'string') {\n        throw new Error('pkh not a string!');\n      }\n      if (obj.iv && typeof obj.iv !== 'string') {\n        throw new Error('iv not a string!');\n      }\n      if (obj.pk && typeof obj.pk !== 'string') {\n        throw new Error('pk not a string!');\n      }\n      if (obj.encryptedEntropy && typeof obj.encryptedEntropy !== 'string') {\n        throw new Error('encryptedEntropy not a string!');\n      }\n    } catch (e) {\n      this.messageService.addError(e);\n      throw e;\n    }\n  }\n  async checkImportPwd(): Promise<void> {\n    if (!this.walletJson) {\n      this.messageService.addWarning('No keystore file imported', 5);\n    } else if (this.pwd) {\n      await this.messageService.startSpinner('Importing wallet...');\n      try {\n        await this.import(this.walletJson, this.pwd);\n        this.pwd = '';\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.addWarning('No password provided', 5);\n    }\n  }\n  async import(keyFile: string, pwd: string): Promise<void> {\n    this.typeCheckFile(keyFile);\n    await this.importService\n      .importWalletFromJson(keyFile, pwd)\n      .then((success: boolean) => {\n        if (success) {\n          this.router.navigate(['/account/']);\n        } else {\n          console.log(success);\n          this.messageService.addError('Something went wrong');\n        }\n      })\n      .catch((e) => {\n        this.messageService.addError(e);\n        this.walletService.clearWallet();\n        this.messageService.stopSpinner();\n      });\n  }\n  allowDrop(e): void {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  handleFileDragAndDrop(e): void {\n    e.preventDefault();\n    this.handleFileInput(e.dataTransfer.files);\n  }\n  handleFileInput(files: FileList): boolean {\n    let fileToUpload = files.item(0);\n    if (!fileToUpload) {\n      return false;\n    } else if (!this.validateFile(fileToUpload.name)) {\n      let fileNotSupported = '';\n      this.subscriptions.add(this.translate.get('IMPORTCOMPONENT.FILENOTSUPPORTED').subscribe((res: string) => (fileNotSupported = res)));\n      this.messageService.add(fileNotSupported);\n\n      console.log('Selected file format is not supported');\n      fileToUpload = null;\n      this.walletJson = null;\n      return false;\n    } else {\n      const reader = new FileReader();\n      reader.readAsText(fileToUpload);\n      reader.onload = () => {\n        if (typeof reader.result === 'string') {\n          try {\n            this.importPreCheck(reader.result);\n          } catch (e) {\n            this.messageService.addError(e, 5);\n            this.walletJson = null;\n          }\n          if (this.walletJson) {\n            this.fileName = fileToUpload.name;\n          }\n        } else {\n          this.walletJson = null;\n          throw new Error('Not a string import');\n        }\n      };\n    }\n  }\n  validateFile(name: string): boolean {\n    const ext = name.substring(name.lastIndexOf('.') + 1);\n    if (ext.toLowerCase() === 'tez' || ext.toLowerCase() === 'json') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  seedWordKeydown(e): boolean {\n    if (\n      !((e.keyCode >= 65 && e.keyCode <= 90) || [8, 9, 13, 32, 37, 38, 39, 40, 46].includes(e.keyCode)) ||\n      (e.keyCode === 32 &&\n        e.target.value?.slice(-1) === ' ' &&\n        e.target?.selectionStart === e.target?.selectionEnd &&\n        e.target?.selectionStart === e.target?.value.length)\n    ) {\n      return false;\n    }\n\n    let word = '';\n    let words = [];\n    let wordPos = -1;\n    let charPos = -1;\n    if (e.metaKey === false && e.ctrlKey === false && e.keyCode >= 65 && e.keyCode <= 90) {\n      const first = e.target.value.slice(0, e.target.selectionStart) + (e.target.selectionStart === e.target.selectionEnd ? e.key : '');\n      const second = e.target.value.slice(e.target.selectionStart);\n      const firstSplit = first.split(' ');\n      words = (first + second).split(' ');\n      wordPos = firstSplit.length - 1;\n      word = words[wordPos];\n      let n = -1;\n      firstSplit.pop();\n      firstSplit.forEach((item) => {\n        n += item.length;\n        n++;\n      });\n      charPos = e.target.selectionStart - 1 - n;\n    } else {\n      words = e.target.value.split(' ');\n    }\n    if (e.metaKey === false && e.ctrlKey === false && e.keyCode >= 65 && e.keyCode <= 90) {\n      if (e.target.selectionStart !== e.target.selectionEnd) {\n        if (e.target.value[e.target.selectionStart] === e.key) {\n          const selection = e.target.value.slice(e.target.selectionStart, e.target.selectionEnd);\n          if (selection.includes(' ')) {\n            return true;\n          }\n          ++e.target.selectionStart;\n          if (e.target.selectionStart === e.target.selectionEnd && words.length < 24) {\n            e.target.value = e.target.value.slice(0, e.target.selectionStart) + ' ' + e.target.value.slice(e.target.selectionStart);\n            this.mnemonic = e.target.value;\n          }\n          e.target.setAttribute('data-selection-start', e.target.selectionStart);\n          e.target.setAttribute('data-selection-end', e.target.selectionEnd);\n          return false;\n        } else {\n          return true;\n        }\n      }\n      if (word) {\n        const r = this.bip39Wordlist.filter((w) => w.startsWith(word));\n        // only suggest word if added char is in the end of current word\n        if (r.length === 1 && (e.target.selectionEnd !== e.target.selectionStart || charPos + 1 === word.length)) {\n          words = words.map((w) => (w === word ? r[0] : w));\n          const offset = r[0].length - word.length;\n          let selStart = e.target.selectionStart;\n          e.target.value = words.join(' ');\n          if (offset === 0 && words.length < 24 && wordPos === words.length - 1) {\n            e.target.value = e.target.value + ' ';\n            selStart++;\n          }\n          this.mnemonic = e.target.value;\n          e.target.selectionStart = selStart + 1;\n          e.target.selectionEnd = e.target.selectionStart + offset;\n          e.target.setAttribute('data-selection-start', e.target.selectionStart);\n          e.target.setAttribute('data-selection-end', e.target.selectionEnd);\n          return false;\n        }\n      }\n    } else if (\n      [9, 13, 32].includes(e.keyCode) &&\n      e.target.selectionStart !== e.target.selectionEnd &&\n      Number(e.target.getAttribute('data-selection-start')) === e.target.selectionStart &&\n      Number(e.target.getAttribute('data-selection-end')) === e.target.selectionEnd\n    ) {\n      let selEnd = e.target.selectionEnd;\n      const words = e.target.value?.split(' ');\n      if (e.target.value.length === selEnd && words?.length < 24) {\n        e.target.value += ' ';\n        selEnd += 1;\n      }\n      this.mnemonic = e.target.value;\n      e.target.selectionStart = e.target.selectionEnd = selEnd;\n      e.target.setAttribute('data-selection-start', e.target.selectionStart);\n      e.target.setAttribute('data-selection-end', e.target.selectionStart);\n      return false;\n    } else if (e.keyCode === 9) {\n      return false;\n    } else if (e.keyCode === 8) {\n      e.target.setAttribute('data-selection-start', e.target.selectionStart);\n      e.target.setAttribute('data-selection-end', e.target.selectionStart);\n    }\n    return true;\n  }\n\n  reset(): void {\n    this.advancedForm = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport 'babel-polyfill';\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport TransportWebHID from '@ledgerhq/hw-transport-webhid';\nimport Tezos from '@obsidiansystems/hw-app-xtz';\nimport { OperationService } from '../operation/operation.service';\nimport { MessageService } from '../message/message.service';\n\n@Injectable()\nexport class LedgerService {\n  transport: any;\n  constructor(private operationService: OperationService, private messageService: MessageService) {}\n  async setTransport() {\n    if (!this.transport) {\n      console.log('Trying to use WebHID for transport...');\n      try {\n        this.transport = await TransportWebHID.create();\n        console.log('Transport is now set to use WebHID!');\n      } catch (e) {\n        this.transport = null;\n        console.warn(\"Couldn't set WebHID as transport!\");\n        console.error(e);\n      }\n    }\n    if (!this.transport) {\n      try {\n        this.transport = await TransportU2F.create();\n        console.warn('Transport is now set to use U2F!');\n      } catch (e) {\n        this.transport = null;\n        console.log(\"Couldn't set U2F as transport!\");\n        console.error(e);\n      }\n    }\n  }\n  async transportCheck() {\n    if (!this.transport) {\n      await this.setTransport();\n    }\n    if (!this.transport) {\n      this.messageService.addError('Failed to set transport. Please make sure your browser supports WebHID or U2F');\n      throw new Error('NO_TRANSPORT_FOUND');\n    }\n  }\n  async getPublicAddress(path: string) {\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    const result = await xtz\n      .getAddress(path, true)\n      .then((res) => {\n        return this.sanitize(res, true);\n      })\n      .catch((e) => {\n        if (e.message) {\n          this.messageService.addError(e.message);\n        } else {\n          this.messageService.addError(e);\n        }\n        throw e;\n      });\n    const pk = this.operationService.hex2pk(result.publicKey);\n    return pk;\n  }\n  async signOperation(op: string, path: string) {\n    if (!['03', '05'].includes(op.slice(0, 2))) {\n      throw new Error('Invalid prefix');\n    }\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    console.log('op', op);\n    const result = await xtz\n      .signOperation(path, op)\n      .then((res) => {\n        return this.sanitize(res, false);\n      })\n      .catch((e) => {\n        console.warn(e);\n        this.messageService.addError(e, 0);\n        return null;\n      });\n    console.log(JSON.stringify(result));\n    if (result?.signature) {\n      return result.signature;\n    } else {\n      return null;\n    }\n  }\n  async signHash(hash: string, path: string) {\n    if (hash.length !== 64) {\n      throw new Error('Invalid hash!');\n    }\n    await this.transportCheck();\n    const xtz = new Tezos(this.transport);\n    const result = await xtz\n      .signHash(path, hash)\n      .then((res) => {\n        return this.sanitize(res, false);\n      })\n      .catch((e) => {\n        console.warn(e);\n        this.messageService.addError(e, 0);\n        return null;\n      });\n    console.log(JSON.stringify(result));\n    if (result?.signature) {\n      return result.signature;\n    } else {\n      return null;\n    }\n  }\n  private sanitize(res: any, getPk: boolean) {\n    res = JSON.parse(JSON.stringify(res));\n    if (getPk && typeof res?.publicKey !== 'string') {\n      throw Error('Invalid pk');\n    }\n    if (!getPk && typeof res?.signature !== 'string') {\n      throw Error('Invalid signature');\n    }\n    return res;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LedgerService } from '../../../../../services/ledger/ledger.service';\nimport { ImportService } from '../../../../../services/import/import.service';\nimport { MessageService } from '../../../../../services/message/message.service';\nimport { InputValidationService } from '../../../../../services/input-validation/input-validation.service';\nimport { utils } from '@tezos-core-tools/crypto-utils';\n\n@Component({\n  selector: 'app-connect-ledger',\n  templateUrl: './connect-ledger.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/login.component.scss']\n})\nexport class ConnectLedgerComponent implements OnInit {\n  activePanel = 0;\n  defaultPath = \"44'/1729'/0'/0'\";\n  defaultText = 'Default derivation path';\n  path: string;\n  pendingLedgerConfirmation = false;\n  isHDDerivationPathCustom = false;\n  browser = 'unknown';\n\n  constructor(\n    private router: Router,\n    private ledgerService: LedgerService,\n    private importService: ImportService,\n    private messageService: MessageService,\n    private inputValidationService: InputValidationService\n  ) {}\n\n  ngOnInit(): void {\n    this.path = this.defaultText;\n    this.checkBrowser();\n  }\n  checkBrowser(): void {\n    try {\n      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n        this.browser = 'firefox';\n      } else if ((navigator as any)?.userAgentData?.brands?.some((b) => b.brand === 'Google Chrome' || 'Chromium')) {\n        this.browser = 'chromium';\n      } else if ((navigator as any)?.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.platform.indexOf('Mac') === -1) {\n        this.browser = 'safari';\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  async getPk(): Promise<void> {\n    const path: string = this.path.replace(this.defaultText, this.defaultPath);\n    if (this.inputValidationService.derivationPath(path)) {\n      this.pendingLedgerConfirmation = true;\n      try {\n        this.messageService.startSpinner('Waiting for Ledger confirmation...');\n        const pk = await this.ledgerService.getPublicAddress(path);\n        console.log('getPK => ' + pk);\n        await this.importFromPk(pk, path);\n      } catch (e) {\n        throw e;\n      } finally {\n        this.pendingLedgerConfirmation = false;\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.addWarning('Invalid derivation path');\n    }\n  }\n  async importFromPk(pk: string, path: string): Promise<void> {\n    if (utils.validPublicKey(pk)) {\n      if (await this.importService.importWalletFromPk(pk, path)) {\n        this.router.navigate([`/account/`]);\n      } else {\n        this.messageService.addError('Failed to import Ledger wallet');\n      }\n    } else {\n      this.messageService.addError('Not a valid public key');\n    }\n  }\n  setDefaultPath(v): void {\n    if (this.isHDDerivationPathCustom) {\n      this.path = this.defaultText;\n    } else {\n      this.path = this.defaultPath;\n    }\n    this.isHDDerivationPathCustom = v;\n  }\n}\n","<form autocomplete=\"off\">\n  <div class=\"flex-column card\">\n    <a routerLink=\"/\"><button class=\"flex-row back\"><img\n          src=\"../../../../../assets/img/left-arrow.svg\">BACK</button></a>\n    <div class=\"flex-column body\">\n      <h1>Connect your Ledger</h1>\n      <p class=\"description\">Keep the private keys safely on your Ledger device and use Kukai to access the Tezos\n        blockchain.</p>\n      <p class=\"description\">You need to open the Tezos Wallet app on your Ledger device and set the derivation path.\n      </p>\n      <input name=\"none\" type=\"text\" class=\"text\" [disabled]=\"!isHDDerivationPathCustom\" [(ngModel)]=\"path\"\n        value=\"'44\\'/1729\\'/0\\'/0\\''\">\n      <app-ui-toggle-advanced style=\"width: 24rem;\" [default]=\"false\" [text]=\"'Use custom HD derivation path:'\"\n        (stateChange)=\"setDefaultPath($event)\"></app-ui-toggle-advanced>\n      <br /><br /><br />\n      <button class=\"button next\" (click)=\"getPk()\" [disabled]=\"browser === 'safari'\">{{ browser !== 'safari' ?\n        'Connect' : 'Ledger support with Safari is currently unavailable' }}</button>\n    </div>\n  </div>\n</form>","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '404.component.html',\n  styleUrls: ['../../../../scss/components/views/error/error.scss']\n})\nexport class P404Component {\n  constructor() {}\n}\n","<div id=\"error\" class=\"flex-column\">\n  <h1>404</h1>\n  <h4>Oops! You're lost.</h4>\n  <p>The page you are looking for was not found.</p>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '500.component.html',\n  styleUrls: ['../../../../scss/components/views/error/error.scss']\n})\nexport class P500Component {\n  constructor() {}\n}\n","<div id=\"error\" class=\"flex-column\">\n  <h1>500</h1>\n  <h4>Houston, we have a problem!</h4>\n  <p>The page you are looking for is temporarily unavailable.</p>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/agreement/terms-of-use/terms-of-use.component.scss']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n  getHostName(): string {\n    return location.hostname;\n  }\n}\n","<div class=\"legal\">\n  <H1>Privacy Policy</H1>\n  <H5>Introduction</H5>\n  <p>Kukai Digital Wallet (“hereinafter Kukai, collectively encompassing {{getHostName()}}) is committed to ensuring the\n    privacy of all our users. We take our duty to process your personal data very seriously. This policy represents our\n    commitment to your right to privacy, giving you a clear explanation about how we use your information and your\n    rights over that information.</p>\n\n  <p>It’s possible to use {{getHostName()}} (“hereinafter website”) without submitting any personal information.</p>\n\n  <H5>Scope of Privacy Policy</H5>\n  <p>This privacy policy applies only to your use of our Tezos digital wallet, Kukai. Our website may contain links to\n    other websites, which are not hosted by Kukai. Please note that we have no control over how your data is collected,\n    stored, or used by other websites and we advise you to check the privacy policies of any such websites before\n    providing any data to them.</p>\n\n  <H5>What types of information do we collect and how?</H5>\n  <p>Kukai does not keep, process, or store any user data, however some services that Kukai relies on may store some\n    user data. Kukai uses Cloudflare services, which collects anonymized website traffic data.</p>\n\n  <p>Data protection laws require us to have a legal justification to process your personal information. Please note,\n    that to use Kukai digital wallet, no personal information is needed to use or access our website or to use our\n    digital wallet. Once again, Kukai does not store user data on any servers.</p>\n\n  <p>Please note, our website and forum may contain links to other websites which are not hosted by Kukai. Please note\n    that we have no control over how your data is collected, stored, or used by other websites and we advise you to\n    check the privacy policies of any such websites before providing any data to them.</p>\n\n  <H5>Legal obligation</H5>\n  <p>As Kukai does not keep, maintain, or process any personal information, Kukai will attempt to fulfill any legal\n    obligations placed upon us, through a lawfully valid legal order by a court of competent jurisdiction.</p>\n\n  <H5>Jurisdiction</H5>\n  <p>Our website is under Swedish jurisdiction and is subject to Swedish laws (which would negate the above retention\n    rules), and similar. Furthermore, our service providers could also be subject to similar orders without our\n    knowledge.</p>\n\n  <p>We take appropriate security measures to ensure that your digital wallet is secured, accurate and up to date.\n    However the transmission of information over the Internet is never completely secure, so while we do our best to\n    protect any information, however, we cannot guarantee the security of information transmitted to our website.</p>\n\n  <H5>Retention Period For Data</H5>\n  <p>We do not hold, store, maintain, or use any personal information as no personal information is needed to use our\n    digital wallet.</p>\n\n  <H5>Access to and your rights over your personal information and removal of User data:</H5>\n  <p>We do not hold, store, use, or maintain any personal user information. For a User to delete any data from the use\n    of our digital wallet please follow the following instructions: </p>\n\n  <p>Log out from the app to remove all user data from the browser cache.</p>\n\n  <p>For more information please see: <a href=\"https://www.tezos.help/kukai-data-removal/index.html\">https://www.tezos.help/kukai-data-removal/index.html</a></p>\n\n  <H5>Complaints</H5>\n  <p>If you wish to lodge a complaint about our handling of your personal data please get in touch with us on the\n    details above with the details of your complaint at contact@kukai.app. We aim to respond to all complaints within 14\n    working days. All legal requests will be reviewed by our legal department and appropriate action will be taken. If\n    you have a legal request, please contact us at: legal@kukai.app.</p>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-terms-of-use',\n  templateUrl: './terms-of-use.component.html',\n  styleUrls: ['../../../../../../scss/components/views/start/agreement/terms-of-use/terms-of-use.component.scss']\n})\nexport class TermsOfUseComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"legal\">\n  <H1>TERMS OF USE</H1>\n  <p><i>Last Updated: June 30, 2020</i></p>\n  <p class=\"notice\">IMPORTANT NOTICE: THIS AGREEMENT IS SUBJECT TO BINDING ARBITRATION AND A WAIVER OF CLASS ACTION RIGHTS AS DETAILED\n    IN SECTION 13. PLEASE READ THE AGREEMENT CAREFULLY.</p>\n\n  <H4>1. Acceptance of terms</H4>\n  <p>Kukai Wallet (hereinafter “Kukai,” “we,” “us,” or “our”) provides a platform for managing Tezos accounts, and\n    allowing ordinary websites and applications to interact with the blockchain network, while keeping the user in\n    control over what transactions they approve, through our website located at https://kukai.app/ (the “Site”), which\n    includes text, images, audio, code and other materials (collectively, the “Content”) and all of the features, and\n    services provided. The Site and any other features, tools, materials, or other services offered from time to time by\n    Kukai Wallet are referred to here as the “Services.” Please read these Terms of Use (the “Terms”) carefully before\n    using the Services. By using or otherwise accessing the Services, or clicking to accept or agree to these Terms\n    where that option is made available, you (1) accept and agree to these Terms, (2) consent to the collection, use,\n    disclosure and other handling of information as described in our Privacy Policy and (3) agree to any additional\n    terms, rules and conditions of participation issued by Kukai Wallet from time to time. If you do not agree to any of\n    the Terms, then you may not access or use the Content or Services.</p>\n\n  <H4>2. Modification of Terms of Use</H4>\n  <p>Except for Section 13, providing for arbitration and waiver of class action rights, Kukai Wallet reserves the\n    right, at its sole discretion, to modify or replace the Terms at any time without notice. We will always try to\n    provide advance notice, however, we reserve the right to modify or replace the Terms at our discretion. The most\n    current version of these Terms will be posted on our Site. You shall be responsible for reviewing and becoming\n    familiar with any such modifications. Use of the Services by you after any modification to the Terms constitutes\n    your acceptance of the Terms as modified.</p>\n\n  <H4>3. Eligibility</H4>\n  <p>You hereby represent and warrant that you are fully able and competent to enter into the terms, conditions,\n    obligations, affirmations, representations and warranties set forth in these Terms and to abide by and comply with\n    these Terms.</p>\n\n  <p>Kukai Wallet is a global platform and by accessing the Content or Services, you are representing and warranting\n    that you are of the legal age of majority in your jurisdiction as is required to access such Services and Content\n    and enter into arrangements as provided by the Services. You further represent that you are otherwise legally\n    permitted to use the service in your jurisdiction including owning cryptographic tokens of value, and interacting\n    with the Services or Content in any way. You further represent you are responsible for ensuring compliance with the\n    laws of your jurisdiction and acknowledge that Kukai Wallet is not liable for your compliance with such laws.</p>\n\n  <p>In addition, you represent to us that you and your financial institutions, or any party that owns or controls you\n    or your financial institutions, are (1) not subject to sanctions or otherwise designated on any list of prohibited\n    or restricted parties, including but not limited to the lists maintained by the United Nations Security Council, the\n    U.S. Government (e.g., the Specially Designated Nationals List and Foreign Sanctions Evaders List of the U.S.\n    Department of Treasury and the Entity List of the U.S. Department of Commerce), the European Union or its Member\n    States, or other applicable government authority and (2) not located in any country to which the United States has\n    embargoed goods or has otherwise applied any sanctions.</p>\n\n  <H4>4. Account Password and Security</H4>\n  <p>When setting up an account within Kukai Wallet, you will be responsible for keeping your own account secrets, which\n    may be a word seed phrase, an account file, or other locally stored secret information. Kukai Wallet encrypts this\n    information locally with a password you provide, that we never send to our servers. You agree to (a) never use the\n    same password for Kukai Wallet that you have ever used outside of this service, (b) keep your secret information and\n    password confidential and do not share them with anyone else and (c) immediately notify Kukai Wallet of any\n    unauthorized use of your account or breach of security. Kukai Wallet cannot and will not be liable for any loss or\n    damage arising from your failure to comply with this section.\n\n  <H4>5. DISCLAIMERS- RISKS</H4>\n\n  <H5>5.1. Warranty Disclaimer</H5>\n  <p>You expressly understand and agree that your use of the Services is at your sole risk. The Services (including the\n    Site and the Content) are provided on an “as is” and “as available” basis, without warranties of any kind, either\n    express or implied, including, without limitation, implied warranties of merchantability, fitness for a particular\n    purpose or non-infringement. You acknowledge that Kukai Wallet has no control over, and no duty to take any action\n    regarding: which users gain access to or use the Services; what effects the Content may have on you; how you may\n    interpret or use the Content; or what actions you may take as a result of having been exposed to the Content. You\n    release Kukai Wallet from any and all liability for you having acquired or not acquired Content through the\n    Services. Kukai Wallet makes no representations concerning any Content contained in or accessed through the\n    Services, and Kukai Wallet will not be responsible or liable for the accuracy, copyright compliance, legality or\n    decency of material contained in or accessed through the Services.</p>\n\n  <p>We do not represent or warrant that access to the Services will be continuous, uninterrupted, timely or secure. You\n    acknowledge and accept that the Services (a) may contain bugs, errors and defects, (b) may function improperly or be\n    subject to periods of downtime and unavailability, (c) may result in total or partial loss or corruption of data and\n    (d) may be modified at any time, including through the release of subsequent versions, all with or without notice to\n    you.</p>\n\n  <p>You acknowledge that Kukai Wallet is not responsible for transferring, safeguarding, or maintaining your private\n    keys or any digital currency associated therewith. If you lose, mishandle or have stolen associated digital currency\n    private keys, you acknowledge that you may not be able to recover associated digital currency, and that Kukai Wallet\n    is not responsible for such loss. You acknowledge that Kukai Wallet is not responsible for any loss, damage or\n    liability arising from your failure to comply with the terms hereunder.</p>\n\n  <H5>5.2 Sophistication and Risk of Cryptographic Systems</H5>\n  <p>By utilizing the Services or interacting with the Content or platform in any way, you represent that you understand\n    the inherent risks associated with cryptographic systems; and warrant that you have an understanding of the usage\n    and intricacies of the native cryptographic token Tezos (xtz), smart contract based tokens, and blockchain-based\n    software systems.</p>\n\n  <H5>5.3 Risk of Regulatory Actions in One or More Jurisdictions</H5>\n  <p>Kukai Wallet and any supported cryptographic token and blockchain could be impacted by one or more regulatory\n    inquiries or regulatory action, which could impede or limit the ability of Kukai Wallet to continue to develop, or\n    which could impede or limit your ability to access or use the Services or the underlying blockchain network.</p>\n\n  <H5>5.4 Risk of Weaknesses or Exploits in the Field of Cryptography</H5>\n  <p>You acknowledge and understand that Cryptography is a progressing field. Advances in code cracking or technical\n    advances such as the development of quantum computers may present risks to cryptocurrencies and Services of Content,\n    which could result in the theft or loss of your cryptographic tokens or property. To the extent possible, Kukai\n    Wallet intends to update the protocol underlying Services to account for any advances in cryptography and to\n    incorporate additional security measures, but does not guarantee or otherwise represent full security of the system.\n    By using the Services or accessing Content, you acknowledge these inherent risks.</p>\n\n  <H5>5.5 Volatility of Cryptocurrencies</H5>\n  <p>You understand that Tezos and other blockchain technologies and associated cryptographic tokens are highly volatile\n    due to many factors including but not limited to adoption, speculation, technology and security risks. You also\n    acknowledge that the cost of transacting on such technologies is variable and may increase at any time causing\n    impact to any activities taking place on the blockchain network. You acknowledge these risks and agree that Kukai\n    Wallet cannot be held liable for such fluctuations or increased costs.</p>\n\n  <H5>5.6 Application Security</H5>\n  <p>You further acknowledge that blockchain applications are code subject to flaws and acknowledge that you are solely\n    responsible for evaluating any code provided by the Services or Content and the trustworthiness of any third-party\n    websites, products, smart-contracts, or Content you access or use through the Services. You further expressly\n    acknowledge and represent that blockchain applications can be written maliciously or negligently, that Kukai Wallet\n    cannot be held liable for your interaction with such applications and that such applications may cause the loss of\n    property or even identity. This warning and others later provided by Kukai Wallet in no way evidence or represent an\n    on-going duty to alert you to all of the potential risks of utilizing the Services or Content. The code to Kukai\n    Wallet can be found at: https://github.com/kukai-wallet/kukai.</p>\n\n  <H4>6. Indemnity</H4>\n  <p>You agree to release and to indemnify, defend and hold harmless Kukai Wallet and its principles, subsidiaries,\n    affiliates and agencies, as well as the officers, directors, employees, shareholders and representatives of any of\n    the foregoing entities, from and against any and all losses, liabilities, expenses, damages, costs (including\n    attorneys’ fees and court costs) claims or actions of any kind whatsoever arising or resulting from your use of the\n    Services, your violation of these Terms, and any of your acts or omissions that implicate publicity rights,\n    defamation or invasion of privacy, and privacy laws. Kukai Wallet reserves the right, at its own expense, to assume\n    exclusive defense and control of any matter otherwise subject to indemnification by you and, in such case, you agree\n    to cooperate with Kukai Wallet in the defense of such matter.</p>\n\n  <H4>7. Limitation on Liability</H4>\n  <p>YOU ACKNOWLEDGE AND AGREE THAT YOU ASSUME FULL RESPONSIBILITY FOR YOUR USE OF THE SITE AND THE SERVICES. YOU\n    ACKNOWLEDGE AND AGREE THAT ANY INFORMATION YOU SEND OR RECEIVE DURING YOUR USE OF THE SITE AND THE SERVICES MAY NOT\n    BE SECURE AND MAY BE INTERCEPTED OR LATER ACQUIRED BY UNAUTHORIZED PARTIES. YOU ACKNOWLEDGE AND AGREE THAT YOUR USE\n    OF THE SITE AND THE SERVICES IS AT YOUR OWN RISK. RECOGNIZING SUCH, YOU UNDERSTAND AND AGREE THAT, TO THE FULLEST\n    EXTENT PERMITTED BY APPLICABLE LAW, NEITHER KUKAI WALLET NOR ITS SUPPLIERS OR LICENSORS WILL BE LIABLE TO YOU FOR\n    ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY OR OTHER DAMAGES OF ANY KIND,\n    INCLUDING WITHOUT LIMITATION DAMAGES FOR LOSS OF PROFITS, GOODWILL, USE, DATA OR OTHER TANGIBLE OR INTANGIBLE LOSSES\n    OR ANY OTHER DAMAGES BASED ON CONTRACT, TORT, STRICT LIABILITY OR ANY OTHER THEORY (EVEN IF KUKAI WALLET HAD BEEN\n    ADVISED OF THE POSSIBILITY OF SUCH DAMAGES), RESULTING FROM THE SITE OR SERVICES; THE USE OR THE INABILITY TO USE\n    THE SITE OR THE SERVICES; UNAUTHORIZED ACCESS TO OR ALTERATION OF YOUR TRANSMISSIONS OR DATA; STATEMENTS OR CONDUCT\n    OF ANY THIRD PARTY ON THE SITE OR THE SERVICES; ANY ACTIONS WE TAKE OR FAIL TO TAKE AS A RESULT OF COMMUNICATIONS\n    YOU SEND TO US; HUMAN ERRORS; TECHNICAL MALFUNCTIONS; FAILURES, INCLUDING PUBLIC UTILITY OR TELEPHONE OUTAGES;\n    OMISSIONS, INTERRUPTIONS, LATENCY, DELETIONS OR DEFECTS OF ANY DEVICE OR NETWORK, PROVIDERS, OR SOFTWARE (INCLUDING,\n    BUT NOT LIMITED TO, THOSE THAT DO NOT PERMIT PARTICIPATION IN THE SERVICES); ANY INJURY OR DAMAGE TO COMPUTER\n    EQUIPMENT; INABILITY TO FULLY ACCESS THE SITE OR THE SERVICES OR ANY OTHER WEBSITE; THEFT, TAMPERING, DESTRUCTION,\n    OR UNAUTHORIZED ACCESS TO, IMAGES OR OTHER CONTENT OF ANY KIND; DATA THAT IS PROCESSED LATE OR INCORRECTLY OR IS\n    INCOMPLETE OR LOST; TYPOGRAPHICAL, PRINTING OR OTHER ERRORS, OR ANY COMBINATION THEREOF; OR ANY OTHER MATTER\n    RELATING TO THE SITE OR ANY OTHER ASPECT OF THE SERVICES.</p>\n\n  <p>SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF CERTAIN WARRANTIES OR THE LIMITATION OR EXCLUSION OF LIABILITY FOR\n    INCIDENTAL OR CONSEQUENTIAL DAMAGES. ACCORDINGLY, SOME OF THE ABOVE LIMITATIONS MAY NOT APPLY TO YOU.</p>\n\n  <H4>8. Intellectual Property</H4>\n  <H5>8.1 Our Proprietary Rights</H5>\n  <p>All title, ownership and intellectual property rights in and to the Services are owned by Kukai Wallet or its\n    licensors. You acknowledge and agree that the Services contains proprietary and confidential information that is\n    protected by applicable intellectual property and other laws. Except as expressly authorized by Kukai Wallet, you\n    agree not to copy, modify, rent, lease, loan, sell, distribute, perform, display or create derivative works based on\n    the Site, or the Services, in whole or in part.</p>\n\n  <H5>8.2 Limited License</H5>\n  <p>We grant you limited, non-exclusive, revocable permission to make use of the Site, and the Services (collectively\n    referred to as, “Access”). This Access shall remain in effect until and unless terminated by you or us. You promise\n    and agree that you will not redistribute or transfer the Services.</p>\n\n  <p>The Kukai Wallet software application, including without limitation the Site, and the Services, are not sold or\n    transferred to you, and Kukai Wallet and its licensors retain ownership of all copies of the software applications\n    even after installation on your personal computers, mobile handsets, tablets, wearable devices, speakers and/or\n    other devices (“Devices”).</p>\n\n  <p>All Kukai Wallet trademarks, service marks, trade names, logos, domain names, and any other features of the Kukai\n    Wallet brand (“Kukai Wallet Brand Features”) are the sole property of Kukai Wallet or its licensors. The Terms do\n    not grant you any rights to use any Kukai Wallet Brand Features whether for commercial or non-commercial use.</p>\n\n  <p>You agree to abide by our user guidelines and not to use the Services or any part thereof in any manner not\n    expressly permitted by the Terms. Except for the rights expressly granted to you in the Terms, Kukai Wallet grants\n    no right, title, or interest to you in the Site or the Services.</p>\n\n  <p>Third party software (for example, open source software libraries) included in the Services are made available to\n    you under the relevant third party software library’s license terms.</p>\n\n  <p>Notwithstanding anything herein to the contrary, nothing in the Terms entitles you to copy, modify, fork, merge,\n    combine with another program or create a derivative work of the Services, including without limitation the Site.</p>\n\n  <H4>9. Links</H4>\n  <p>The Services provide, or third parties may provide, links to other World Wide Web or accessible sites, applications\n    or resources. Because Kukai Wallet has no control over such sites, applications and resources, you acknowledge and\n    agree that Kukai Wallet is not responsible for the availability of such external sites, applications or resources,\n    and does not endorse and is not responsible or liable for any content, advertising, products or other materials on\n    or available from such sites or resources. You further acknowledge and agree that Kukai Wallet shall not be\n    responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in\n    connection with use of or reliance on any such content, goods or services available on or through any such site or\n    resource.</p>\n\n  <H4>10. Termination and Suspension</H4>\n  <p>Kukai Wallet may terminate or suspend all or part of the Services and your Kukai Wallet access immediately, without\n    prior notice or liability, if you breach any of the terms or conditions of the Terms. Upon termination of your\n    access, your right to use the Services will immediately cease.</p>\n\n  <p>The following provisions of the Terms survive any termination of these Terms: INDEMNITY; WARRANTY DISCLAIMERS;\n    LIMITATION ON LIABILITY; OUR PROPRIETARY RIGHTS; LINKS; TERMINATION; NO THIRD PARTY BENEFICIARIES; BINDING\n    ARBITRATION AND CLASS ACTION WAIVER; GENERAL INFORMATION.</p>\n\n  <H4>11. No Third Party Beneficiaries</H4>\n  <p>You agree that, except as otherwise expressly provided in these Terms, there shall be no third party beneficiaries\n    to the Terms.</p>\n\n  <H4>12. Notice and Procedure For Making Claims of Copyright Infringement</H4>\n  <p>If you believe that your copyright or the copyright of a person on whose behalf you are authorized to act has been\n    infringed, please provide Kukai Wallet’s Copyright Agent a written Notice containing the following information:</p>\n\n  <p>- an electronic or physical signature of the person authorized to act on behalf of the owner of the copyright or\n    other intellectual property interest;\n    <BR>- a description of the copyrighted work or other intellectual property that you claim has been infringed;\n    <BR>- a description of where the material that you claim is infringing is located on the Services;\n    your address, telephone number, and email address;\n    <BR>- a statement by you that you have a good faith belief that the disputed use is not authorized by the copyright\n    owner, its agent, or the law;\n    <BR>- a statement by you, made under penalty of perjury, that the above information in your Notice is accurate and\n    that you are the copyright or intellectual property owner or authorized to act on the copyright or intellectual\n    property owner’s behalf.</p>\n\n  <p>Kukai Wallet’s Copyright Agent can be reached at:</p>\n\n  <p>Email: legal@kukai.app</p>\n\n  <H4>13. Binding Arbitration and Class Action Waiver</H4>\n\n  <p>PLEASE READ THIS SECTION CAREFULLY – IT MAY SIGNIFICANTLY AFFECT YOUR LEGAL RIGHTS, INCLUDING YOUR RIGHT TO FILE A\n    LAWSUIT IN COURT</p>\n\n  <H5>13.1 Initial Dispute Resolution</H5>\n\n  <p>The parties shall use their best efforts to engage directly to settle any dispute, claim, question, or disagreement\n    and engage in good faith negotiations which shall be a condition to either party initiating a lawsuit or\n    arbitration.</p>\n\n  <H5>13.2 Binding Arbitration</H5>\n\n  <p>If the parties do not reach an agreed upon solution within a period of 30 days from the time informal dispute\n    resolution under the Initial Dispute Resolution provision begins, then either party may initiate arbitration as the\n    sole means to resolve all claims, subject to the terms set forth below. Specifically, all claims arising out of or\n    relating to these Terms (including their formation, performance and breach), the parties’ relationship with each\n    other and/or your use of the Services shall be finally settled by binding arbitration administered by the American\n    Arbitration Association in accordance with the provisions of its Commercial Arbitration Rules and the supplementary\n    procedures for consumer related disputes of the American Arbitration Association (the “AAA”), excluding any rules or\n    procedures governing or permitting class actions.</p>\n\n  <p>The arbitrator, and not any federal, state or local court or agency, shall have exclusive authority to resolve all\n    disputes arising out of or relating to the interpretation, applicability, enforceability or formation of these\n    Terms, including, but not limited to any claim that all or any part of these Terms are void or voidable, or whether\n    a claim is subject to arbitration. The arbitrator shall be empowered to grant whatever relief would be available in\n    a court under law or in equity. The arbitrator’s award shall be written, and binding on the parties and may be\n    entered as a judgment in any court of competent jurisdiction.</p>\n\n  <p>The parties understand that, absent this mandatory provision, they would have the right to sue in court and have a\n    jury trial. They further understand that, in some instances, the costs of arbitration could exceed the costs of\n    litigation and the right to discovery may be more limited in arbitration than in court.</p>\n\n  <H5>13.3 Location</H5>\n\n  <p>Binding arbitration shall take place in Louisiana. You agree to submit to the personal jurisdiction of any federal\n    or state court in Orleans Parish, Louisiana, in order to compel arbitration, to stay proceedings pending\n    arbitration, or to confirm, modify, vacate or enter judgment on the award entered by the arbitrator.</p>\n\n  <H5>13.4 Class Action Waiver</H5>\n\n  <p>The parties further agree that any arbitration shall be conducted in their individual capacities only and not as a\n    class action or other representative action, and the parties expressly waive their right to file a class action or\n    seek relief on a class basis. YOU AND KUKAI WALLET AGREE THAT EACH MAY BRING CLAIMS AGAINST THE OTHER ONLY IN YOUR\n    OR ITS INDIVIDUAL CAPACITY, AND NOT AS A PLAINTIFF OR CLASS MEMBER IN ANY PURPORTED CLASS OR REPRESENTATIVE\n    PROCEEDING. If any court or arbitrator determines that the class action waiver set forth in this paragraph is void\n    or unenforceable for any reason or that an arbitration can proceed on a class basis, then the arbitration provision\n    set forth above shall be deemed null and void in its entirety and the parties shall be deemed to have not agreed to\n    arbitrate disputes.</p>\n\n  <H5>13.5 Exception - Litigation of Intellectual Property and Small Claims Court Claims</H5>\n\n  <p>Notwithstanding the parties’ decision to resolve all disputes through arbitration, either party may bring an action\n    in state or federal court to protect its intellectual property rights (“intellectual property rights” means patents,\n    copyrights, moral rights, trademarks, and trade secrets, but not privacy or publicity rights). Either party may also\n    seek relief in a small claims court for disputes or claims within the scope of that court’s jurisdiction.</p>\n\n  <H5>13.6 Choice of Law</H5>\n\n  <p>The Terms and the relationship between you and Kukai Wallet shall be governed by the laws of the State of Louisiana\n    without regard to conflict of law provisions.</p>\n\n  <H4>14. GENERAL INFORMATION</H4>\n\n  <H5>14.1 Entire Agreement</H5>\n\n  <p>These Terms (and any additional terms, rules and conditions of participation that Kukai Wallet may post on the\n    Services) constitute the entire agreement between you and Kukai Wallet with respect to the Services and supersedes\n    any prior agreements, oral or written, between you and Kukai Wallet. In the event of a conflict between these Terms\n    and the additional terms, rules and conditions of participation, the latter will prevail over the Terms to the\n    extent of the conflict.</p>\n\n  <H5>14.2 Waiver and Severability of Terms</H5>\n\n  <p>The failure of Kukai Wallet to exercise or enforce any right or provision of the Terms shall not constitute a\n    waiver of such right or provision. If any provision of the Terms is found by an arbitrator or court of competent\n    jurisdiction to be invalid, the parties nevertheless agree that the arbitrator or court should endeavor to give\n    effect to the parties’ intentions as reflected in the provision, and the other provisions of the Terms remain in\n    full force and effect.</p>\n\n  <H5>14.3 Statute of Limitations</H5>\n\n  <p>You agree that regardless of any statute or law to the contrary, any claim or cause of action arising out of or\n    related to the use of the Services or the Terms must be filed within one (1) year after such claim or cause of\n    action arose or be forever barred.</p>\n\n  <H5>14.4 Section Titles</H5>\n\n  <p>The section titles in the Terms are for convenience only and have no legal or contractual effect.</p>\n\n  <H5>14.5 Communications</H5>\n\n  <p>Users with questions, complaints or claims with respect to the Services may contact us using the relevant contact\n    information set forth above or email us at: contact@kukai.app</p>\n</div>","import { Injectable } from '@angular/core';\nimport { KeyPair } from '../../interfaces';\nimport { WalletService } from '../wallet/wallet.service';\nimport { CONSTANTS } from '../../../environments/environment';\nimport { Parser } from '@taquito/michel-codec';\nimport { valueEncoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { OperationService } from '../operation/operation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmbeddedAuthService {\n  constructor(private walletService: WalletService, private operationService: OperationService) {}\n  async authenticate(authReq: any, origin: string, keyPair: KeyPair = null): Promise<{ message: string; signature: string }> {\n    if (!origin) {\n      throw new Error('NO_DOMAIN_FOUND');\n    } else if ((!this.walletService?.wallet || !this.walletService.isEmbeddedTorusWallet()) && !keyPair) {\n      throw new Error('NO_WALLET_FOUND');\n    }\n    if (!keyPair) {\n      keyPair = await this.walletService.getKeys('', this.walletService.wallet.implicitAccounts[0].pkh).catch((e) => {\n        throw new Error('NO_KEYS_FOUND');\n      });\n    }\n    const authMessage: string = this.createAuthMessage(authReq?.id, authReq?.nonce, origin, keyPair.pk, keyPair.pkh);\n    const signature = this.signMessage(authMessage, keyPair.sk);\n    return { message: authMessage, signature };\n  }\n  async signExprSilent(hexExpr: string): Promise<string> {\n    const keyPair = await this.walletService.getKeys('', this.walletService.wallet.implicitAccounts[0].pkh).catch((e) => {\n      throw new Error('NO_KEYS_FOUND');\n    });\n    const signature: string = this.operationService.sign(hexExpr, keyPair.sk).edsig;\n    return signature;\n  }\n  private createAuthMessage(requestId: string = '', nonce: string = '', domain: string, publicKey: string, address: string): string {\n    if (typeof requestId !== 'string') {\n      throw new Error('INVALID_REQUEST_ID');\n    } else if (typeof nonce !== 'string') {\n      throw new Error('INVALID_NONCE');\n    }\n    const authPayload: any = {\n      requestId,\n      purpose: 'authentication',\n      currentTime: Math.floor(Date.now() / 1000).toString(), // UNIX timestamp\n      nonce,\n      network: this._network(),\n      publicKey,\n      address,\n      domain\n    };\n    if (!requestId) {\n      delete authPayload.requestId;\n    }\n    if (!nonce) {\n      delete authPayload.nonce;\n    }\n    return `Tezos Signed Message: ${JSON.stringify(authPayload)}`;\n  }\n  _network(): string {\n    return CONSTANTS.NETWORK;\n  }\n  private signMessage(message: string, sk: string): string {\n    const parser = new Parser();\n    const expr = parser.parseMichelineExpression(`\"${message.replace(/\"/g, '\\\\\"')}\"`);\n    const hexMessage = `05${valueEncoder(expr)}`;\n    const signature: string = this.operationService.sign(hexMessage, sk).edsig;\n    return signature;\n  }\n}\n","import { Account } from '../../../services/wallet/wallet';\nimport { Template } from 'kukai-embed';\nexport interface PrepareRequest {\n  account: Account;\n  tokenTransfer: string;\n  symbol: string;\n}\nexport interface TemplateRequest {\n  template: Template;\n  ops?: FullyPreparedTransaction[];\n  partialOps?: PartiallyPreparedTransaction[];\n  fee?: TemplateFee;\n}\nexport interface TemplateFee {\n  network: string;\n  storage: string;\n  total: string;\n}\n\nexport interface ConfirmSwapRequest {\n  account: Account;\n  transactions: FullyPreparedTransaction[];\n  externalReq: boolean;\n}\n\nexport enum LqdEntrypoints {\n  addLiquidity = 'addLiquidity',\n  removeLiquidity = 'removeLiquidity',\n  xtzToToken = 'xtzToToken',\n  tokenToXtz = 'tokenToXtz'\n}\n\nexport interface ConfirmRequest {\n  account: Account;\n  tokenTransfer: string;\n  transactions: FullyPreparedTransaction[];\n  externalReq: boolean;\n}\nexport interface PartiallyPreparedTransaction {\n  kind: 'transaction';\n  amount: string;\n  destination: string;\n  parameters?: any;\n  meta?: {\n    alias: string;\n    verifier: string;\n    twitterId?: string;\n  };\n  gasRecommendation?: string;\n  storageRecommendation?: string;\n}\nexport interface FullyPreparedTransaction extends PartiallyPreparedTransaction {\n  fee: string;\n  gasLimit: string;\n  storageLimit: string;\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"flex-row content\">\n    <div class=\"flex-column liquidity-baking\">\n      <div class=\"flex-row main-container\">\n        <div class=\"flex-column right\" [class.expanded]=\"advancedForm\" [class.loaded]=\"chartInit\" [class.expanded-00]=\"moreInfo && mode === Mode.swap\" [class.expanded-01]=\"advancedForm && mode === Mode.swap\" [class.expanded-10]=\"moreInfo && advancedForm && mode === Mode.swap\" [class.expanded-11]=\"mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-100]=\"moreInfo && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-101]=\"advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-110]=\"moreInfo && advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.addLiquidity\" [class.expanded-111]=\"mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1000]=\"moreInfo && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1001]=\"advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\" [class.expanded-1010]=\"moreInfo && advancedForm && mode === Mode.liquidity && entrypoint === LqdEntrypoints.removeLiquidity\">\n          <app-ui-chart #leftChart class=\"popout\" [design]=\"'default'\" [type]=\"'line'\" [units]=\"units\" [datas]=\"chartDatas\"\n            [attributes]=\"attributes\" (drawn)=\"chartInit = true;\"></app-ui-chart>\n            <div class=\"filler\" [style.display]=\"chartInit ? '' : 'none'\"></div>\n        </div>\n        <div class=\"flex-column left\" [class.expanded]=\"advancedForm\">\n          <div class=\"flex-column top\">\n            <div class=\"flex-row container-toggle\">\n              <button [class.active]=\"mode === Mode.swap\" (click)=\"toggleMode(Mode.swap)\">SWAP</button>\n              <button [class.active]=\"mode === Mode.liquidity\" (click)=\"toggleMode(Mode.liquidity)\">LIQUIDITY</button>\n            </div>\n            <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n                src=\"../../../../../assets/img/close-btn-x.png\" />\n            </div>\n          </div>\n          <app-ui-chart #miniChart class=\"popout-mini\" [design]=\"'mini'\" [type]=\"'line'\" [units]=\"units\"\n            [data]=\"chartData\" [datas]=\"chartDatas\" [attributes]=\"attributes\">\n          </app-ui-chart>\n          <ng-container *ngIf=\"mode === Mode.liquidity\">\n            <form autocomplete=\"off\">\n              <div class=\"flex-column container-toggle-secondary\">\n                <div class=\"flex-row buttons\">\n                  <button [class.active]=\"entrypoint === LqdEntrypoints.addLiquidity\" (click)=\"toggleDirection(0)\">\n                    ADD\n                  </button>\n                  <button [class.active]=\"entrypoint === LqdEntrypoints.removeLiquidity\" (click)=\"toggleDirection(1)\">\n                    REMOVE\n                  </button>\n                </div>\n              </div>\n              <div class=\"flex-column container-inputs\" [class.liquidity]=\"entrypoint === LqdEntrypoints.addLiquidity\">\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRaw\" [placeholder]=\"'0'\" value=\"\"\n                        (paste)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\"\n                        (input)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.addLiquidity ? 'XTZ' : 'SIRS' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.addLiquidity ? 'assets/img/tezos-xtz-logo.svg' : 'assets/img/tokens/sirius.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">{{ entrypoint === LqdEntrypoints.addLiquidity ? 'Add' : 'Remove' }}</div>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.removeLiquidity\" class=\"hint\" (click)=\"updateMaxAmount('qtyRaw')\">Balance: <span class=\"max\">{{lqdBalance}}</span></span>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"hint\">Balance: {{xtzBalance}}</span>\n                </div>\n                <div *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"seperator files add\">\n                  <span class=\"img-wrap\"><img\n                      [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n                </div>\n                <div *ngIf=\"entrypoint === LqdEntrypoints.addLiquidity\" class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRawOut\" placeholder=\"0\" [value]=\"qtyRawOut\"\n                        (input)=\"sanitizeNumberInput($event, 8, 'qtyRawOut')\"\n                        (paste)=\"sanitizeNumberInput($event, 8, 'qtyRawOut')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ 'tzBTC' }}</span>\n                      <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">Add</div>\n                  <span class=\"hint\" (click)=\"updateMaxAmount('qtyRawOut')\">Balance: <span class=\"max\">{{ tzBTCBalance\n                      }}</span></span>\n                </div>\n              </div>\n            </form>\n          </ng-container>\n          <ng-container *ngIf=\"mode === Mode.swap\">\n            <form autocomplete=\"off\">\n              <div class=\"flex-column container-inputs\">\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRaw\" [placeholder]=\"'0'\" value=\"\"\n                        (paste)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\"\n                        (input)=\"sanitizeNumberInput($event, qty.decimalPlaces, 'qtyRaw')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.xtzToToken ? 'XTZ' : 'tzBTC' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.xtzToToken ? 'assets/img/tezos-xtz-logo.svg' : 'assets/img/tokens/tzbtc.png'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">From</div>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.xtzToToken\" class=\"hint\">Balance: {{ xtzBalance}}</span>\n                  <span *ngIf=\"entrypoint === LqdEntrypoints.tokenToXtz\" class=\"hint\" (click)=\"updateMaxAmount('qtyRaw')\">Balance: <span class=\"max\">{{tzBTCBalance}}</span></span>\n                </div>\n                <div class=\"seperator files add\" (click)=\"toggleDirection()\">\n                  <span class=\"img-wrap\"><img\n                      [src]=\"simSemaphore ? 'assets/img/feeLoader.gif' : 'assets/img/swap.svg'\" /></span>\n                </div>\n                <div class=\"flex-column currency\">\n                  <div class=\"flex-row inputs\">\n                    <div class=\"flex-row right\">\n                      <input type=\"text\" inputmode=\"decimal\" [value]=\"qtyRawOut\" [placeholder]=\"'0'\"\n                        (paste)=\"sanitizeNumberInput($event, qtyOut.decimalPlaces, 'qtyRawOut')\"\n                        (input)=\"sanitizeNumberInput($event, qtyOut.decimalPlaces, 'qtyRawOut')\" />\n                    </div>\n                    <div class=\"flex-row left\">\n                      <span class=\"symbol\">{{ entrypoint === LqdEntrypoints.xtzToToken ? 'tzBTC' : 'XTZ' }}</span>\n                      <img\n                        [src]=\"entrypoint === LqdEntrypoints.xtzToToken ? 'assets/img/tokens/tzbtc.png' : 'assets/img/tezos-xtz-logo.svg'\" />\n                    </div>\n                  </div>\n                  <div class=\"tag\">Expected</div>\n                      <span *ngIf=\"entrypoint === LqdEntrypoints.tokenToXtz\" class=\"hint\">Balance: {{ xtzBalance }}</span>\n                      <span *ngIf=\"entrypoint === LqdEntrypoints.xtzToToken\" class=\"hint\">Balance: {{ tzBTCBalance }}</span>\n                </div>\n              </div>\n            </form>\n          </ng-container>\n          <div *ngIf=\"expectedRate\" class=\"flex-row item expected-rate\">\n            <span class=\"flex-row key\">Exchange Rate:</span>\n            <span class=\"value\">{{ expectedRate }}</span>\n          </div>\n          <div class=\"flex-column more-info-toggle\" [class.expanded]=\"moreInfo\">\n            <div class=\"flex-row item\" (click)=\"moreInfo = !moreInfo\">\n              <span class=\"value\">{{ 'View Details' }} <span *ngIf=\"impactDouble >= 0.04\" class=\"price-impact\">Price\n                  Impact {{ impactDouble | percent:'1.2-2' }}</span></span>\n              <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n            </div>\n          </div>\n          <div *ngIf=\"moreInfo\" class=\"more-info-body\"\n            [class.expanded]=\"moreInfo\">\n            <div class=\"flex-row item\">\n              <span class=\"flex-row key\">Price Impact:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The impact your transaction is expected to make on the exchange rate. The size of your swap relative to the size of the pool determines the impact. Note: This impact is what you are accepting in addition to the slippage.\n                </div>\n              </span>\n              <span class=\"value\" [class.warning]=\"impactDouble > 0.04\">{{impactDouble > 0.005 ? (impactDouble | percent:'1.2-2') : \"<0.5%\"}}</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.xtzToToken === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumToken?.internalNormalised | number:'1.2-8') || 0}} tzBTC</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.tokenToXtz === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumXtz?.internalNormalised | number:'1.6-6') || 0}} XTZ</span>\n            </div>\n            <div\n              *ngIf=\"(LqdEntrypoints.removeLiquidity === entrypoint)\"\n              class=\"item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span><br />\n              <span class=\"value\">{{(minimumXtz?.internalNormalised | number:'1.6-6') || 0}} XTZ + {{\n                (minimumToken?.internalNormalised | number:'1.2-8') || 0}} tzBTC</span>\n            </div>\n            <div *ngIf=\"(LqdEntrypoints.addLiquidity === entrypoint)\" class=\"flex-row item\">\n              <span class=\"flex-row key\">Minimum Received:&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n                </div>\n              </span>\n              <span class=\"value\">{{(minimumLqd?.internalNormalised | number:'1.0-0') || 0}} SIRS</span>\n            </div>\n            <div class=\"flex-column slippage\">\n              <span class=\"flex-row label\">Slippage&nbsp;<img src=\"assets/img/information-circle-outline.svg\"\n                  class=\"info-button\" />\n                <div class=\"body\">\n                  Your transaction will not complete if the exchange rate changes unfavorably by more than this slippage percentage. The slippage does not include the Price Impact, when swapping you are accepting both the Price Impact % and the Slippage %.\n                </div>\n              </span>\n              <div class=\"flex-row inputs\">\n                <button [class.active]=\"slippage === 0.005\" (click)=\"slippage = 0.005; update()\">\n                  0.5%\n                </button>\n                <button [class.active]=\"slippage === 0.01\" (click)=\"slippage = 0.01; update()\">\n                  1%\n                </button>\n                <button [class.active]=\"slippage === 0.03\" (click)=\"slippage = 0.03; update()\">\n                  3%\n                </button>\n                <form autocomplete=\"off\">\n                  <input inputmode=\"decimal\" [class.active]=\"slippage !== 0.03 && slippage !== 0.01 && slippage !== 0.005\"\n                    (input)=\"customSlippage($event)\" (focus)=\"customSlippageFocus($event)\" (blur)=\"customSlippageBlur($event)\"\n                    [placeholder]=\"slippage * 100\" value=\"\" />\n                  <span class=\"placeholder-secondary\">%</span>\n                </form>\n              </div>\n            </div>\n          </div>\n          <div class=\"flex-column more-info-toggle\" [class.expanded]=\"advancedForm\">\n            <div class=\"flex-row item\" (click)=\"advancedForm = !advancedForm\">\n              <span class=\"value\">{{ 'Advanced' }}</span>\n              <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n            </div>\n          </div>\n          <form *ngIf=\"advancedForm\" autocomplete=\"off\" class=\"more-info-body\" [class.expanded]=\"advancedForm\">\n            <div class=\"flex-row\">\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Gas limit</label>\n                <input inputmode=\"decimal\" type=\"text\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n                  (paste)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n                  placeholder={{this.defaultTransactionParams.gas.toString()}} [value]=\"customGasLimit\">\n              </div>\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Fee</label>\n                <input inputmode=\"decimal\" type=\"text\" (input)=\"sanitizeNumberInput($event, 6, 'customFee')\"\n                  (paste)=\"sanitizeNumberInput($event, 6, 'customFee')\" class=\"text\"\n                  placeholder={{this.defaultTransactionParams.fee.toString()}} [value]=\"customFee\">\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Storage limit</label>\n                <input inputmode=\"decimal\" type=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\"\n                  (paste)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\" class=\"text\"\n                  placeholder={{this.defaultTransactionParams.storage.toString()}} [value]=\"customStorageLimit\">\n              </div>\n              <div class=\"flex-column entity\">\n                <label class=\"label\">Max Storage cost</label>\n                <input inputmode=\"decimal\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\" tabindex=-1\n                  readonly>\n              </div>\n            </div>\n          </form>\n          <div class=\"flex-column bottom\">\n            <div class=\"seperator\"></div>\n            <span class=\"form-validity error\">{{ formInvalid || latestSimError }}</span>\n            <button class=\"confirm\" [disabled]=\"formInvalid || latestSimError\" (click)=\"preview()\">Preview</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FullyPreparedTransaction, PartiallyPreparedTransaction, LqdEntrypoints } from '../../misc/send/interfaces';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../services/token-balances/token-balances.service';\nimport { TokenService } from '../../../services/token/token.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\nimport { Amount } from '../../../services/swap-liquidity/classes/Amount';\nimport { ModalComponent } from '../modal.component';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { DefaultTransactionParams } from '../../../interfaces';\nimport Big from 'big.js';\nimport { Account } from '../../../services/wallet/wallet';\nimport assert from 'assert';\nimport { TranslateService } from '@ngx-translate/core';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { take } from 'rxjs/operators';\nimport { ChartComponent, ChartSeries } from '../../ui/chart/chart.component';\nimport { ChartData } from 'chart.js';\nimport { ChartService, ChartTitle } from '../../../services/chart/chart.service';\n\nenum Mode {\n  swap = 'swap',\n  liquidity = 'liquidity'\n}\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-swap-liquidity',\n  templateUrl: './swap-liquidity.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SwapLiquidityComponent extends ModalComponent {\n  @ViewChild('leftChart') leftChart: ChartComponent;\n  @ViewChild('miniChart') miniChart: ChartComponent;\n  @Output() prepareResponse = new EventEmitter();\n  LqdEntrypoints = LqdEntrypoints;\n  Mode = Mode;\n  Object = Object;\n  mode = Mode.swap;\n  entrypoint: string = LqdEntrypoints.xtzToToken;\n  advancedForm = false;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  readonly costPerByte: string = this.estimateService.costPerByte;\n\n  moreInfo = false;\n\n  formInvalid = '';\n  latestSimError = '';\n\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  minimumLqd: Amount = null;\n  minimumXtz: Amount = null;\n  minimumToken: Amount = null;\n  xtzRequired: Amount = null;\n  expectedRate: string;\n  impactDouble: number;\n  qty: Amount = new Amount({\n    normalisedAmount: '',\n    decimalPlaces: 6\n  });\n  qtyRaw = '';\n  qtyOut: Amount = new Amount({\n    normalisedAmount: '',\n    decimalPlaces: 8\n  });\n  qtyRawOut = '';\n  slippage = 0.005;\n\n  xtzBalance = '0';\n  lqdBalance = '0';\n  tzBTCBalance = '0';\n\n  activeAccount = null;\n  transactions: PartiallyPreparedTransaction[] = [];\n\n  balances: any[];\n  name = 'swap-liquidity';\n\n  private subscriptions: Subscription = new Subscription();\n  simSemaphore = 0;\n\n  tooltipValue: string = '--';\n  titleColor = '#333';\n  series = 'day';\n  units = 'tzBTC';\n  attributes: any = {};\n  chartData: ChartData;\n  chartDatas: Array<ChartData> = [];\n  chartOptions = null;\n  popoutOptions: any;\n  chartInit = false;\n\n  constructor(\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalancesService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private swapLiquidityService: SwapLiquidityService,\n    private operationService: OperationService,\n    public torusService: TorusService,\n    private translate: TranslateService,\n    public tezosDomains: TezosDomainsService,\n    private inputValidationService: InputValidationService,\n    private messageService: MessageService,\n    private chartService: ChartService\n  ) {\n    super();\n    const setTokenBalances = () => {\n      this.xtzBalance = Big(this.activeAccount?.balanceXTZ ?? 0)\n        .div(10 ** 6)\n        .toString();\n      this.lqdBalance = this.balances.find((b) => b.contractAddress === this.lqdTokenContract && b.id == 0)?.balance ?? '0';\n      this.tzBTCBalance = this.balances.find((b) => b.contractAddress === this.tzBTCContract && b.id == 0)?.balance ?? '0';\n    };\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        if (!!activeAccount) {\n          this.activeAccount = activeAccount;\n          this.balances = this.tokenBalancesService?.balances;\n          setTokenBalances();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.nftsUpdated.subscribe((p) => {\n        this.balances = p?.balances ?? this.tokenBalancesService?.balances;\n        setTokenBalances();\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.balances = this.tokenBalancesService?.balances;\n        setTokenBalances();\n      })\n    );\n  }\n\n  async initChartsMobile(): Promise<void> {\n    Promise.all([\n      this.chartService.fetchLBGraphData(ChartSeries.day),\n      this.chartService.fetchLBGraphData(ChartSeries.week),\n      this.chartService.fetchLBGraphData(ChartSeries.month),\n      this.chartService.fetchLBGraphData(ChartSeries.year)\n    ]).then((arr) => {\n      this.chartDatas[ChartSeries.day] = arr[0];\n      this.chartDatas[ChartSeries.week] = arr[1];\n      this.chartDatas[ChartSeries.month] = arr[2];\n      this.chartDatas[ChartSeries.year] = arr[3];\n      //prevents race cond\n      if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.leftChart?.toggleSet(ChartTitle.XTZtzBTC);\n        this.miniChart?.toggleSet(ChartTitle.XTZtzBTC);\n      } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.leftChart?.toggleSet(ChartTitle.tzBTCXTZ);\n        this.miniChart?.toggleSet(ChartTitle.tzBTCXTZ);\n      } else if (this.entrypoint === LqdEntrypoints.addLiquidity || this.entrypoint === LqdEntrypoints.removeLiquidity) {\n        this.leftChart?.toggleSet(ChartTitle.totalValueLocked);\n        this.miniChart?.toggleSet(ChartTitle.totalValueLocked);\n      }\n      this.leftChart?.toggleSeries(ChartSeries.day);\n      this.miniChart?.toggleSeries(ChartSeries.week);\n    });\n  }\n\n  async initChartsDesktop(): Promise<void> {\n    Promise.all([\n      this.chartService.fetchLBGraphData(ChartSeries.day),\n      this.chartService.fetchLBGraphData(ChartSeries.week),\n      this.chartService.fetchLBGraphData(ChartSeries.month),\n      this.chartService.fetchLBGraphData(ChartSeries.year)\n    ]).then((arr) => {\n      this.chartDatas[ChartSeries.day] = arr[0];\n      this.chartDatas[ChartSeries.week] = arr[1];\n      this.chartDatas[ChartSeries.month] = arr[2];\n      this.chartDatas[ChartSeries.year] = arr[3];\n      //prevents race cond\n      if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.leftChart?.toggleSet(ChartTitle.XTZtzBTC);\n        this.leftChart?.toggleSeries(ChartSeries.day);\n      } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.leftChart?.toggleSet(ChartTitle.tzBTCXTZ);\n        this.leftChart?.toggleSeries(ChartSeries.day);\n      } else if (this.entrypoint === LqdEntrypoints.addLiquidity || this.entrypoint === LqdEntrypoints.removeLiquidity) {\n        this.leftChart?.toggleSet(ChartTitle.totalValueLocked);\n        this.leftChart?.toggleSeries(ChartSeries.month);\n      }\n    });\n  }\n\n  async initCharts(): Promise<void> {\n    const isMobile = document.documentElement.style.getPropertyValue('--is-mobile');\n    const style = getComputedStyle(document.body);\n    this.titleColor = style.getPropertyValue('--base-font-color');\n    if (isMobile === '1') {\n      await this.initChartsMobile();\n    } else {\n      await this.initChartsDesktop();\n    }\n  }\n\n  birthExchangeRate(): void {\n    let qty = new Amount({\n      normalisedAmount: 1,\n      decimalPlaces: 6\n    });\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const rate = this.swapLiquidityService.xtzToTokenExchangeRateDisplay(qty, xtzPool, tokenPool, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n  }\n\n  async init(): Promise<boolean> {\n    this.qtyRaw = '';\n    this.qty = new Amount({\n      normalisedAmount: 0,\n      decimalPlaces: 6\n    });\n    this.balances = this.tokenBalancesService?.balances;\n    const r = await this.hydratePools();\n    this.attributes = { APY: this.swapLiquidityService.estimateLiquidityBakingAPY() };\n    this.initCharts();\n    this.birthExchangeRate();\n    return r;\n  }\n\n  async open(): Promise<void> {\n    this.subjectService.activeAccount.pipe(take(1)).subscribe(async (activeAccount) => {\n      this.activeAccount = activeAccount;\n      await this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n      if (await this.init()) {\n        super.open();\n      }\n      this.messageService.stopSpinner();\n    });\n  }\n\n  close(): void {\n    this.reset();\n    this.mode = Mode.swap;\n    this.entrypoint = LqdEntrypoints.xtzToToken;\n    this.chartInit = false;\n    super.close();\n  }\n\n  calculateXtzToToken(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 6\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 8\n    });\n    const xtzToSell = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToToken(\n      xtzToSell,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumToken = result.minimum;\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    this.impactDouble = result.impactDouble;\n    this.qtyOut = result.expected;\n    this.qtyRawOut = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n  }\n\n  calculateTokenToXTZFromXTZ(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 8\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 6\n    });\n    const xtzToBuy = this.qtyOut;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZFromXTZ(\n      xtzToBuy,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.xtz.minimum;\n    this.expectedRate = `1 tzBTC ($${Big(result.xtz.rate).times(this.walletService?.wallet?.XTZrate).toFixed(2)}) = ${Big(result.xtz.rate).toFixed(\n      xtzPool.decimalPlaces\n    )} XTZ`;\n    this.impactDouble = result.xtz.impactDouble;\n    this.qty = result.token.expected;\n    this.qtyRaw = result.token.expected?.internalNormalised.toFixed(result.token.expected?.decimalPlaces).toString();\n  }\n\n  calculateTokenToXTZ(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 8\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 6\n    });\n    const tokenToSell = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZ(\n      tokenToSell,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.minimum;\n    this.expectedRate = `1 tzBTC ($${Big(result.rate).times(this.walletService?.wallet?.XTZrate).toFixed(2)}) = ${Big(result.rate).toFixed(\n      xtzPool.decimalPlaces\n    )} XTZ`;\n    this.impactDouble = result.impactDouble;\n    this.qtyOut = result.expected;\n    this.qtyRawOut = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n  }\n\n  calculateXtzToTokenFromToken(): void {\n    this.qty = new Amount({\n      normalisedAmount: parseFloat(this.qtyRaw),\n      decimalPlaces: 6\n    });\n    this.qtyOut = new Amount({\n      normalisedAmount: parseFloat(this.qtyRawOut),\n      decimalPlaces: 8\n    });\n    const tokenToBuy = this.qtyOut;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToTokenFromToken(\n      tokenToBuy,\n      xtzPool,\n      tokenPool,\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumToken = result.token.minimum;\n    this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.token.rate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    this.impactDouble = result.token.impactDouble;\n    this.qty = result.xtz.expected;\n    this.qtyRaw = result.xtz.expected?.internalNormalised.toFixed(result.xtz.expected?.decimalPlaces).toString();\n  }\n\n  calcSwap(type: string = 'qtyRaw'): void {\n    if (type === 'qtyRaw' && this.entrypoint === LqdEntrypoints.xtzToToken) {\n      this.calculateXtzToToken();\n    } else if (type === 'qtyRawOut' && this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calculateTokenToXTZFromXTZ();\n    } else if (type === 'qtyRaw' && this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calculateTokenToXTZ();\n    } else if (type === 'qtyRawOut' && this.entrypoint === LqdEntrypoints.xtzToToken) {\n      this.calculateXtzToTokenFromToken();\n    }\n  }\n\n  calcAddLiquidity(type: string): void {\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    if (type === 'qtyRaw') {\n      const toSell = this.qty;\n      const result = this.swapLiquidityService.calculateAddLiquidityXTZ(\n        toSell,\n        xtzPool,\n        tokenPool,\n        parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n        this.slippage,\n        this.swapLiquidityService.settings('liquidityBaking')\n      );\n      this.minimumLqd = result.liquidityMinimum;\n      this.qtyOut = result.tokenRequired;\n      this.qtyRawOut = result.tokenRequired?.internalNormalised.toFixed(result.tokenRequired?.decimalPlaces).toString();\n      this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.exchangeRate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    } else {\n      const toSell = this.qtyOut;\n      const result = this.swapLiquidityService.calculateAddLiquidityToken(\n        toSell,\n        xtzPool,\n        tokenPool,\n        parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n        this.slippage,\n        this.swapLiquidityService.settings('liquidityBaking')\n      );\n      this.minimumLqd = result.liquidityMinimum;\n      this.qty = this.xtzRequired = result.xtzRequired;\n      this.qtyRaw = result.xtzRequired?.internalNormalised.toFixed(result.xtzRequired?.decimalPlaces).toString();\n      this.expectedRate = `1 XTZ ($${this.walletService?.wallet?.XTZrate.toFixed(2)}) = ${Big(result.exchangeRate).toFixed(tokenPool.decimalPlaces)} tzBTC`;\n    }\n  }\n\n  calcRemoveLiquidity(): void {\n    const lqtToBurn = this.qty;\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateRemoveLiquidity(\n      lqtToBurn,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      this.slippage,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.minimumXtz = result.xtzMinimum;\n    this.minimumToken = result.tokenMinimum;\n  }\n\n  reset(): void {\n    this.minimumLqd = null;\n    this.minimumXtz = null;\n    this.minimumToken = null;\n    this.expectedRate = '';\n    this.impactDouble = undefined;\n    this.xtzRequired = null;\n\n    this.qty = new Amount({\n      normalisedAmount: '',\n      decimalPlaces: 6\n    });\n    this.qtyRaw = '';\n    this.qtyOut = new Amount({\n      normalisedAmount: '',\n      decimalPlaces: 8\n    });\n    this.qtyRawOut = '';\n\n    this.advancedForm = false;\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.defaultTransactionParams = zeroTxParams;\n    this.formInvalid = '';\n    this.latestSimError = '';\n\n    this.slippage = 0.005;\n    this.transactions = [];\n\n    this.moreInfo = false;\n  }\n  async hydratePools(): Promise<boolean> {\n    try {\n      await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    } catch (e) {\n      this.messageService.addError(this.translate.instant('SWAPCOMPONENT.CONTRACTSTORAGEFAILED'));\n      return false;\n    }\n    return true;\n  }\n\n  async update(type: string = 'qtyRaw'): Promise<void> {\n    this.xtzBalance = Big(this.activeAccount?.balanceXTZ ?? 0)\n      .div(10 ** 6)\n      .toString();\n    this.lqdBalance = this.balances.find((b) => b.contractAddress === this.lqdTokenContract && b.id == 0)?.balance ?? '0';\n    this.tzBTCBalance = this.balances.find((b) => b.contractAddress === this.tzBTCContract && b.id == 0)?.balance ?? '0';\n    if (this.entrypoint === LqdEntrypoints.xtzToToken || this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      this.calcSwap(type);\n    } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n      this.qty = new Amount({\n        normalisedAmount: parseFloat(this.qtyRaw),\n        decimalPlaces: 6\n      });\n      this.qtyOut = new Amount({\n        normalisedAmount: parseFloat(this.qtyRawOut),\n        decimalPlaces: 8\n      });\n      this.calcAddLiquidity(type);\n    } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n      this.qty = new Amount({\n        normalisedAmount: parseFloat(this.qtyRaw),\n        decimalPlaces: 0\n      });\n      this.qtyOut = new Amount({\n        normalisedAmount: parseFloat(this.qtyRawOut),\n        decimalPlaces: 0\n      });\n      this.calcRemoveLiquidity();\n    }\n    if (this.qty && this.qty.internalNormalised) {\n      this.estimateFees();\n    }\n  }\n\n  preview(): void {\n    if (!this.qtyRaw) {\n      return;\n    }\n    try {\n      this.prepareResponse.emit(this.getFullyPreparedTxs());\n      ModalComponent.currentModel.next({ name: '', data: {} });\n      this.reset();\n    } catch (e) {\n      this.formInvalid = e.message;\n    }\n  }\n  toggleMode(mode): void {\n    if (mode === this.mode) {\n      return;\n    }\n    this.reset();\n    const chartToggle = (label) => {\n      const style = getComputedStyle(document.body);\n      this.titleColor = style.getPropertyValue('--base-font-color');\n      this.miniChart.toggleSet(label);\n      this.leftChart.toggleSet(label);\n      if (label === ChartTitle.totalValueLocked) {\n        this.miniChart.toggleSeries(ChartSeries.month);\n        this.leftChart.toggleSeries(ChartSeries.month);\n      } else {\n        this.miniChart.toggleSeries(ChartSeries.week);\n        this.leftChart.toggleSeries(ChartSeries.day);\n      }\n    };\n    if (mode === Mode.swap) {\n      this.mode = Mode.swap;\n      this.entrypoint = LqdEntrypoints.xtzToToken;\n      chartToggle(ChartTitle.XTZtzBTC);\n    } else if (mode === Mode.liquidity) {\n      this.mode = Mode.liquidity;\n      this.entrypoint = LqdEntrypoints.addLiquidity;\n      chartToggle(ChartTitle.totalValueLocked);\n    }\n    this.qty = new Amount({\n      normalisedAmount: 0,\n      decimalPlaces: 6\n    });\n    this.birthExchangeRate();\n  }\n  toggleDirection(dir): void {\n    if (this.mode === 'swap') {\n      const chartToggle = (label) => {\n        const style = getComputedStyle(document.body);\n        this.titleColor = style.getPropertyValue('--base-font-color');\n        this.leftChart.toggleSet(label);\n        this.miniChart.toggleSet(label);\n        this.miniChart.toggleSeries(ChartSeries.week);\n      };\n      this.qtyRaw = this.qtyRawOut;\n      if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n        this.entrypoint = LqdEntrypoints.xtzToToken;\n        chartToggle(ChartTitle.XTZtzBTC);\n      } else if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n        this.entrypoint = LqdEntrypoints.tokenToXtz;\n        chartToggle(ChartTitle.tzBTCXTZ);\n      }\n      this.evalAmount();\n    } else {\n      if (dir === 0 && this.entrypoint !== LqdEntrypoints.addLiquidity) {\n        this.reset();\n        this.entrypoint = LqdEntrypoints.addLiquidity;\n        this.qty = new Amount({\n          normalisedAmount: parseFloat(this.qtyRaw),\n          decimalPlaces: 6\n        });\n      } else if (dir === 1 && this.entrypoint !== LqdEntrypoints.removeLiquidity) {\n        this.reset();\n        this.entrypoint = LqdEntrypoints.removeLiquidity;\n        this.qty = new Amount({\n          normalisedAmount: parseFloat(this.qtyRaw),\n          decimalPlaces: 0\n        });\n      }\n      this.birthExchangeRate();\n    }\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && Number(this.customFee)) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorageLimit !== '' && Number(this.customStorageLimit)) {\n      return Number(Big(this.customStorageLimit).mul(this.transactions.length).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorageLimit ? Number(Big(this.customStorageLimit).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  customSlippage(e): void {\n    e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\n    this.slippage = Math.max(Math.min(100, parseFloat(e.target.value || 0) / 100.0), 0);\n    // this.slippageInput.nativeElement.value = this.slippage;\n    this.update();\n  }\n  customSlippageFocus(e): void {\n    if (e.target.value !== '') {\n      e.target.value = e.target.value.replace(/[^0-9\\.]+/g, '');\n      this.slippage = Math.max(Math.min(100, parseFloat(e.target.value || 0) / 100.0), 0);\n      this.update();\n    }\n  }\n  customSlippageBlur(e): void {\n    if (!Number.isNaN(Number(e.target.value)) && e.target.value !== '') {\n      e.target.value = Math.max(Math.min(100, e.target.value), 0);\n    } else {\n      e.target.value = '';\n      this.slippage = 0.005;\n      this.update();\n    }\n  }\n  getMaxAmount(account: Account): { tez; lqd; tzBTC } {\n    if (account) {\n      let accountBalance = Big(this.xtzBalance);\n      accountBalance = accountBalance.minus(this.customFee && Number(this.customFee) ? Number(this.customFee) : this.defaultTransactionParams.fee);\n      accountBalance = accountBalance.minus(\n        this.customStorageLimit && Number(this.customStorageLimit)\n          ? Number(Big(this.customStorageLimit).times(this.costPerByte).div('1000000'))\n          : this.defaultTransactionParams.burn\n      );\n      accountBalance = accountBalance.minus(0.000001); // dust\n      return {\n        tez: accountBalance.toFixed(),\n        lqd: Big(this.lqdBalance).toFixed(),\n        tzBTC: Big(this.tzBTCBalance).toFixed()\n      };\n    }\n  }\n  async estimateFees(): Promise<void> {\n    console.log('estimate..');\n    const prevSimError = this.latestSimError;\n    this.latestSimError = '';\n    let txs: PartiallyPreparedTransaction[] = [];\n    try {\n      txs = this.getMinimalPreparedTxs();\n      this.transactions = txs;\n    } catch (e) {\n      console.log(e);\n    }\n    if (txs?.length) {\n      this.simSemaphore++;\n      this.latestSimError = '';\n      const callback = (res) => {\n        if (res) {\n          this.formInvalid = this.checkBalances();\n          if (res.error) {\n            this.latestSimError = res.error;\n          } else {\n            this.defaultTransactionParams = res;\n            this.latestSimError = '';\n          }\n          console.log(res, txs);\n        } else {\n          console.log('no res');\n        }\n        this.simSemaphore--;\n      };\n      this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.address, undefined, callback);\n    } else {\n      this.latestSimError = prevSimError;\n    }\n  }\n  updateMaxAmount(input: string = 'qtyRaw'): void {\n    if (this.activeAccount) {\n      const balances = this.getMaxAmount(this.activeAccount);\n      if (!balances) {\n        return;\n      }\n      let balance: string = '0.0';\n      if (this.entrypoint === this.LqdEntrypoints.removeLiquidity) {\n        balance = balances?.lqd;\n        this.qtyRaw = balance;\n        this.update('qtyRaw');\n      } else if (this.entrypoint === this.LqdEntrypoints.tokenToXtz) {\n        if (input === 'qtyRaw') {\n          balance = balances?.tzBTC;\n          this.qtyRaw = balance;\n          this.update('qtyRaw');\n        } else {\n          balance = balances?.tez;\n          this.qtyRawOut = balance;\n          this.update('qtyRawOut');\n        }\n      } else if (this.entrypoint === this.LqdEntrypoints.xtzToToken || this.entrypoint === this.LqdEntrypoints.addLiquidity) {\n        if (input === 'qtyRawOut') {\n          balance = balances?.tzBTC;\n          this.qtyRawOut = balance;\n          this.update('qtyRawOut');\n        } else {\n          balance = balances?.tez;\n          this.qtyRaw = balance;\n          this.update('qtyRaw');\n        }\n      }\n    }\n  }\n  getMinimalPreparedTxs(): PartiallyPreparedTransaction[] {\n    if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: this.qty.internalNormalised.toString(),\n          destination: this.lqdContract,\n          parameters: this.operationService.getXTZToTokenParameters(\n            this.activeAccount.address,\n            this.minimumToken.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getApproveAmountParameters(this.lqdContract, this.qty.internalBigInt.toFixed(0).toString())\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.lqdContract,\n          parameters: this.operationService.getTokenToXTZParameters(\n            this.activeAccount.address,\n            this.qty.internalBigInt.toFixed(0).toString(),\n            this.minimumXtz.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.lqdContract,\n          parameters: this.operationService.getRemoveLiquidityParameters(\n            this.activeAccount.address,\n            this.qty.internalBigInt.toFixed(0).toString(),\n            this.minimumXtz.internalBigInt.toFixed(0).toString(),\n            this.minimumToken.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        }\n      ]);\n    } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n      return (this.transactions = [\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getApproveAmountParameters(this.lqdContract, this.qtyOut.internalBigInt.toFixed(0))\n        },\n        {\n          kind: 'transaction',\n          amount: this.qty.internalNormalised.toString(),\n          destination: this.lqdContract,\n          parameters: this.operationService.getAddLiquidityParameters(\n            this.activeAccount.address,\n            this.minimumLqd.internalBigInt.toFixed(0).toString(),\n            this.qtyOut.internalBigInt.toFixed(0).toString(),\n            (Date.now() + 60 * 60 * 1000).toString()\n          )\n        },\n        {\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        }\n      ]);\n    }\n  }\n  getFullyPreparedTxs(): FullyPreparedTransaction[] {\n    assert(!this.simSemaphore, 'Awaiting request');\n    const minimalTxs = this.getMinimalPreparedTxs();\n    this.transactions = minimalTxs;\n    assert(this.inputValidationService.fee(this.customFee), 'Invalid fee');\n    assert(this.inputValidationService.gas(this.customGasLimit), 'Invalid gas limit');\n    assert(this.inputValidationService.gas(this.customStorageLimit), 'Invalid storage limit');\n    assert(!this.checkBalances(), this.checkBalances());\n    assert(minimalTxs.length === this.defaultTransactionParams.customLimits?.length, 'Simulation error');\n    return this.opsWithCustomLimits();\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.defaultTransactionParams.gas.toString()) {\n      extraGas = Number(this.customGasLimit) - this.defaultTransactionParams.gas;\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.defaultTransactionParams.storage.toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.defaultTransactionParams.storage;\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas\n        ? (Number(this.defaultTransactionParams.customLimits[i].gasLimit) + extraGasPerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.defaultTransactionParams.customLimits[i].storageLimit) + extraStoragePerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  checkBalances(): string {\n    if (this.transactions.length > 0 && this.activeAccount) {\n      const balances = this.getMaxAmount(this.activeAccount);\n      if (balances) {\n        const maxTez = Big(balances?.tez).minus(0.000001);\n        const maxLQD = Big(balances.lqd).plus(0.0);\n        const maxtzBTC = Big(balances.tzBTC).plus(0.0);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (this.entrypoint === LqdEntrypoints.xtzToToken) {\n          if (!!maxTez && amount.gt(maxTez)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHFEEORAMOUNT');\n          }\n          if (this.minimumToken && this.minimumToken.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.tokenToXtz) {\n          if (Big(this.qty.internalNormalised).gt(maxtzBTC)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.minimumXtz && this.minimumXtz.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.addLiquidity) {\n          if (!!maxTez && amount.gt(maxTez)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.qtyOut && Big(this.qtyOut.internalNormalised).gt(maxtzBTC)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.xtzRequired && this.xtzRequired.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n          if (this.minimumLqd && this.minimumLqd.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        } else if (this.entrypoint === LqdEntrypoints.removeLiquidity) {\n          if (Big(this.qty.internalNormalised).gt(maxLQD)) {\n            return this.translate.instant('SWAPCOMPONENT.TOOHIGHAMOUNT');\n          }\n          if (this.minimumXtz && this.minimumXtz.internalNormalised === 0) {\n            return this.translate.instant('SWAPCOMPONENT.TOOSMALLAMOUNT');\n          }\n        }\n      }\n    }\n    return '';\n  }\n  sanitizeNumberInput(e, decimalPlaces: number, type = ''): void {\n    const exp = new RegExp(`^\\\\d{0,}(\\\\.\\\\d{0,${decimalPlaces}})?\\$`, 'g');\n    if (type === 'qtyRaw') {\n      if (exp.test(e?.target?.value)) {\n        this.qtyRaw = e?.target?.value;\n      } else {\n        e.target.value = this.qtyRaw;\n      }\n      this.evalAmount('qtyRaw');\n    } else if (type === 'qtyRawOut') {\n      if (exp.test(e?.target?.value)) {\n        this.qtyRawOut = e?.target?.value;\n      } else {\n        e.target.value = this.qtyRawOut;\n      }\n      this.evalAmount('qtyRawOut');\n    } else {\n      if (exp.test(e?.target?.value)) {\n        this[type] = e?.target?.value;\n      } else {\n        e.target.value = this[type];\n      }\n    }\n  }\n  evalAmount(type: string = 'qtyRaw'): void {\n    let qty = this[type];\n    if (parseFloat(qty) < 0.0 || !qty) {\n      this.qtyRawOut = this.qtyRaw = '';\n      return;\n    } else if (isNaN(parseFloat(qty)) && parseFloat(qty) === 0.0) {\n      return;\n    } else if (!isNaN(parseFloat(qty))) {\n      this.update(type);\n    }\n  }\n  openInfoModal(title: string): void {\n    switch (title) {\n      case 'slippage':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message:\n              'Token prices in a pool may change significantly within seconds. Slippage tolerance defines the difference between the expected and current exchange rate that you find acceptable. The higher the slippage tolerance, the more likely a transaction will go through.',\n            title: 'Slippage Information'\n          },\n          forceClose: false\n        });\n        break;\n      case 'pricerate':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The amount of token B you receive for 1 token A, per the current exchange rate.',\n            title: 'Price Rate Information'\n          },\n          forceClose: false\n        });\n        break;\n      case 'impactdouble':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The impact your transaction is expected to make on the exchange rate.',\n            title: 'Price Impact'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of XTZ to be received from the transaction.',\n            title: 'Minimum XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'requiredtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Required tzBTC needed for transaction.',\n            title: 'Required tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of tzBTC to be received from the transaction.',\n            title: 'Minimum tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of SIRS to be received from the transaction.',\n            title: 'Minimum SIRS'\n          },\n          forceClose: false\n        });\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"flex-column confirm-send\" [class.image]=\"tokenBalanceService.isNFT(token)\" [class.batch]=\"parameters\">\n      <form autocomplete=\"off\">\n        <div class=\"flex-row top\">\n          <div class=\"flex-column left\" [style.minHeight]=\"!tokenBalanceService.isNFT(token) ? 'unset' : ''\">\n            <span *ngIf=\"!tokenBalanceService.isNFT(token)\" class=\"key\">SEND AMOUNT:</span>\n            <app-asset class=\"token-image\" [class.balance]=\"!tokenBalanceService.isNFT(token)\"\n              [assets]=\"token ? {displayAsset: token?.displayAsset, thumbnailAsset: token?.thumbnailAsset} : {thumbnailAsset: 'assets/img/tezos-xtz-logo.svg'}\"\n              [priorityList]=\"['thumbnailAsset', 'displayAsset']\" [class.sd]=\"!token\"></app-asset>\n          </div>\n          <div class=\"flex-column right\">\n            <span class=\"flex-row amount\"><span class=\"tez value\">{{ formatAmount(token, totalAmount(),\n                false)\n                }}</span>\n              <ng-container *ngIf=\"!tokenTransfer\"><span class=\"fiat key\">USD: <span class=\"value\">{{'$' +\n                    (totalAmount()\n                    *\n                    walletService.wallet.XTZrate | number:'1.2-2')\n                    }}</span></span>\n              </ng-container>\n            </span>\n            <div class=\"flex-column items\">\n              <span *ngIf=\"tokenBalanceService.isNFT(token)\" class=\"key amount-quantity\">QUANTITY:&nbsp;&nbsp;<span\n                  class=\"value\">{{ getQuantity(totalAmount())\n                  }}</span></span>\n              <span class=\"key\">FEE:&nbsp;&nbsp;<span class=\"value\">{{ (getTotalFee() | number:'1.0-6') + ' tez'\n                  }}</span></span>\n              <span *ngIf=\"getTotalBurn(); let totalBurn\" class=\"key\">STORAGE COST:&nbsp;<span class=\"value\">{{\n                  (totalBurn\n                  |\n                  number:'1.0-6') + ' tez'\n                  }}</span></span>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex-row from\">\n          <div class=\"flex-column left\">\n            <span class=\"key\">FROM: </span>\n          </div>\n          <div class=\"flex-column right\">\n            <div *ngIf=\"getUsername(); let displayName\" class=\"flex-row torus-name\"><img class=\"verifier-logo\"\n                src=\"../../../assets/img/{{ getVerifier() }}-logo.svg\">{{ displayName }}</div>\n            <span class=\"address\">{{\n              activeAccount?.address\n              }}</span>\n          </div>\n        </div>\n        <div *ngIf=\"!parameters\" class=\"flex-row divider\">\n          <span></span><img class=\"icon\" src=\"../../../assets/img/send-down-arrow.png\" /><span></span>\n        </div>\n        <div class=\"flex-row to\">\n          <div class=\"flex-column left\">\n            <span class=\"key\">SEND TO<ng-container *ngIf=\"parameters && transactions?.length > 1\">&nbsp;BATCH\n              </ng-container>: </span>\n          </div>\n          <div class=\"flex-column right\">\n            <div *ngFor=\"let transaction of transactions | slice:0:showAll; index as i\"\n              (click)=\"updateParameters(i, transaction.parameters)\" class=\"flex-column transaction\">\n              <span *ngIf=\"transaction?.meta && transaction.meta?.verifier\" class=\"flex-row torus-to value\"><img\n                  src=\"../../../assets/img/{{ transaction.meta.verifier }}-logo.svg\" class=\"icon\">\n                {{ transaction.meta?.alias }}</span>\n              <span class=\"flex-row single-to\" [class.default]=\"transactions.length === 1\"\n                [class.selectable]=\"transactions.length > 1 && parameters\"\n                [class.active]=\"batchParamIndex === i && transactions.length > 1 && parameters\"><span>{{\n                  transaction?.destination\n                  }}</span></span>\n              <p class=\"previewAttention\" *ngIf=\"tokenTransfer && transaction?.destination.slice(0, 3) === 'KT1'\">\n                Warning:\n                Verify the contract can manage tokens</p>\n            </div>\n            <div *ngIf=\"transactions?.length > 10\" class=\"button show-all\"\n              (click)=\"showAll = showAll === 10 ? undefined : 10\">{{ showAll === 10 ? 'Show All' : 'Show Less' }}</div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <span *ngIf=\"parameters && transactions.length > 1\" class=\"flex-row transfer-amount\"><span class=\"key\">TRANSFER\n            AMOUNT: </span><span class=\"key\">{{ (transactions[batchParamIndex]?.amount | number:'1.0-6')\n            }}</span></span>\n        <div *ngIf=\"parameters && parameters?.entrypoint\" class=\"flex-row contract-call\"><span class=\"key\">CONTRACT\n            CALL:\n          </span><span class=\"key\">{{ parameters?.entrypoint }}</span></div>\n        <app-ui-toggle-advanced style=\"width: calc(100% - 1em);margin: 0 0 2.5em 0;\" *ngIf=\"externalReq\"\n          [default]=\"false\" (stateChange)=\"advancedForm = $event\">\n        </app-ui-toggle-advanced>\n      </form>\n      <div *ngIf=\"advancedForm\" class=\"advanced-form\">\n        <div class=\"flex-column parms-container\">\n          <ng-container *ngIf=\"parameters\">\n            <div class=\"tabs-container\">\n              <ul class=\"flex-row tabs\">\n                <li class=\"tab\" [class.active]=\"parametersFormat === 0\" (click)=\"setParametersFormat(0)\">Micheline</li>\n                <li class=\"tab\" [class.active]=\"parametersFormat === 1\" (click)=\"setParametersFormat(1)\">Tabular</li>\n              </ul>\n            </div>\n            <textarea *ngIf=\"parameters && parametersFormat === 0\" name=\"none\" rows=\"10\"\n              readonly>{{ micheline.value || '' }}</textarea>\n            <ul *ngIf=\"parameters && parametersFormat === 1\" class=\"encoded-parms\">\n              <ng-container *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: transformedParameters, level: 0 }\">\n              </ng-container>\n            </ul>\n            <ng-template #recursiveListTmpl let-list=\"list\" let-level=\"level\">\n              <li *ngFor=\"let item of list\" [class]=\"item?.children?.length ? 'expanded' : ''\"\n                [style.marginLeft]=\"!level ? '0em' : '3em'\">\n                <ng-container *ngIf=\"item?.children\">\n                  <span [class.key]=\"item.children.length ? true : false\"\n                    (click)=\"item.children.length ? toggleTab($event) : null\">{{ item.key }}{{item.key ? ': ' : ' '}}{{\n                    (item.val ?? '') }}</span>\n                  <svg *ngIf=\"item.children.length\" (click)=\"toggleTab($event)\" version=\"1.2\" baseProfile=\"tiny-ps\"\n                    xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 13\" width=\"20\" height=\"13\">\n                    <g id=\"1\">\n                      <g id=\"NFT\">\n                        <g id=\"Line 1\">\n                          <g id=\"Line\">\n                            <path id=\"Rectangle 4\" class=\"shp0\"\n                              d=\"M2.86 -0.02L12.86 10.1L10 12.99L0.01 2.88L2.86 -0.02ZM17.14 -0.02L19.99 2.88L10 12.99L7.14 10.1L17.14 -0.02Z\" />\n                          </g>\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                  <ul *ngIf=\"item.children && item.children.length > 0\">\n                    <ng-container\n                      *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: item.children, level: level+3 }\">\n                    </ng-container>\n                  </ul>\n                </ng-container>\n              </li>\n            </ng-template>\n          </ng-container>\n        </div>\n        <form autocomplete=\"off\" *ngIf=\"externalReq && (!walletService.isLedgerWallet()) || ledgerError\">\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Gas limit</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\"\n                (input)=\"sanitizeNumberInput($event, 'gas')\" (paste)=\"sanitizeNumberInput($event, 'gas')\"\n                [placeholder]=\"getTotalDefaultGas() || '0'\" [(ngModel)]=\"customGasLimit\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Fee</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\" [placeholder]=\"getTotalFee() || '0'\"\n                (paste)=\"sanitizeNumberInput($event)\" (input)=\"sanitizeNumberInput($event)\" [(ngModel)]=\"customFee\">\n            </div>\n          </div>\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Storage limit</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\"\n                (input)=\"sanitizeNumberInput($event, 'storage')\" (paste)=\"sanitizeNumberInput($event, 'storage')\"\n                [placeholder]=\"getTotalDefaultStorage() || '0'\" [(ngModel)]=\"customStorageLimit\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Max storage cost</label>\n              <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\"\n                [placeholder]=\"(getTotalBurn() || '0') + ' tez'\" tabindex=-1 readonly>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"flex-column bottom\">\n        <span [style.visibility]=\"!pwdInvalid ? 'hidden' : ''\" [style.margin]=\"!pwdInvalid ? '0' : ''\"\n          class=\"label danger\">{{ this.pwdInvalid }}</span>\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <span class=\"label\">ENTER YOUR\n            PASSWORD TO CONFIRM:</span>\n          <input name=\"none\" [(ngModel)]=\"password\" autocomplete=\"current-password\" placeholder=\"Password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button class=\"confirm\" *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\"\n          (click)=\"ledgerRetry()\">Sign with\n          Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { EventEmitter, Input, OnChanges, OnDestroy, Output } from '@angular/core';\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { FullyPreparedTransaction, PrepareRequest } from '../../../misc/send/interfaces';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { EstimateService } from '../../../../services/estimate/estimate.service';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { CoordinatorService } from '../../../../services/coordinator/coordinator.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { LedgerService } from '../../../../services/ledger/ledger.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { KeyPair } from '../../../../interfaces';\nimport { emitMicheline, assertMichelsonData } from '@taquito/michel-codec';\nimport Big from 'big.js';\nimport { LedgerWallet, TorusWallet } from '../../../../services/wallet/wallet';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../../modal.component';\nimport { Subscription } from 'rxjs';\nimport { TezosDomainsService } from '../../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { Schema } from '@taquito/michelson-encoder';\nimport { TzktService } from '../../../../services/indexer/tzkt/tzkt.service';\n@Component({\n  selector: 'app-confirm-send',\n  templateUrl: './send-confirmation.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class ConfirmSendComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() confirmRequest: PrepareRequest = null;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  tokenTransfer = '';\n  activeAccount = null;\n  externalReq: boolean = false;\n  transactions: FullyPreparedTransaction[] = [];\n  costPerByte: string = this.estimateService.costPerByte;\n\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  schema = undefined;\n  parameters: any = null;\n  batchParamIndex = 0;\n  micheline: any = null;\n  batchParameters: { num: number; parameters: any }[] = [];\n  parametersFormat = 0;\n  parametersDisplay = '';\n  transformedParameters = [];\n  extractedSchema = [];\n  showAll = 10;\n\n  showFullBatch = false;\n  sendResponse = null;\n  ledgerError = '';\n  password = '';\n  pwdInvalid = '';\n  advancedForm = false;\n  name = 'confirm-send';\n  token = null;\n  domain = undefined;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    private operationService: OperationService,\n    private messageService: MessageService,\n    private coordinatorService: CoordinatorService,\n    private lookupService: LookupService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalanceService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private tzktService: TzktService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.confirmRequest?.currentValue) {\n      this.reset(true);\n      this.externalReq = changes.confirmRequest.currentValue.externalReq;\n      this.tokenTransfer = changes.confirmRequest.currentValue.tokenTransfer;\n      this.activeAccount = changes.confirmRequest.currentValue.account;\n      this.tezosDomainService.getDomainFromAddress(this.activeAccount?.address).then((domain) => {\n        this.domain = domain;\n      });\n      this.transactions = changes.confirmRequest.currentValue.transactions;\n      this.token = this.tokenService.getAsset(this.tokenTransfer);\n      console.log('transactions', this.transactions);\n      if (this.externalReq) {\n        ModalComponent.currentModel.next({\n          name: this.name,\n          data: null\n        });\n      }\n      this.init();\n      if (this.externalReq) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.closeModalAction('silent');\n          }\n        });\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  open(data: any): void {\n    this.customFee = data?.customFee;\n    this.customGasLimit = data?.customGasLimit;\n    this.customStorageLimit = data?.customStorageLimit;\n    super.open();\n  }\n  async init(): Promise<void> {\n    await this.loadParameters();\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      this.ledgerError = '?';\n    }\n  }\n  async loadParameters(): Promise<void> {\n    if (this.transactions.length > 1) {\n      for (const [i, op] of this.transactions.entries()) {\n        if (op.parameters) {\n          this.batchParameters.push({\n            num: i + 1,\n            parameters: op.parameters\n          });\n          if (!this.parameters) {\n            this.updateParameters(i, op.parameters);\n          }\n        }\n      }\n    } else if (this.transactions[0].parameters) {\n      this.updateParameters(0, this.transactions[0].parameters);\n    }\n  }\n  async updateParameters(index: number, parameters: any): Promise<void> {\n    if (!parameters) {\n      return;\n    }\n    this.batchParamIndex = index;\n    this.parameters = parameters;\n    this.parametersToMicheline();\n    this.extractedSchema = undefined;\n    try {\n      const sc = await this.tzktService.getEntrypointMicheline(this.transactions[this.batchParamIndex]?.destination, this.parameters?.entrypoint);\n      this.schema = new Schema(sc);\n      this.extractedSchema = this.schema.Execute(this.parameters.value);\n      this.transformedParameters = this.parametersToTabular(this.extractedSchema);\n      this.parametersFormat = 1;\n    } catch {\n      this.transformedParameters = [{ children: [], key: 'Error', val: 'Failed to fetch annotations!' }];\n    }\n  }\n  setParametersFormat(id: number): void {\n    this.parametersFormat = id;\n  }\n  beaconTokenTransfer(op: any): null | { tokenId: string; to: string; amount: string } {\n    if (op.parameters && this.tokenService.isKnownTokenContract(op.destination)) {\n      return this.operationService.parseTokenTransfer(op);\n    }\n    return null;\n  }\n  parametersToMicheline(): void {\n    if (this.parameters) {\n      try {\n        if (!this.parameters.value || !this.parameters.entrypoint) {\n          throw new Error('entrypoint and value expected');\n        }\n        assertMichelsonData(this.parameters.value);\n        const res = emitMicheline(this.parameters.value, {\n          indent: '  ',\n          newline: '\\n'\n        });\n        this.micheline = {\n          entrypoint: this.parameters.entrypoint,\n          value: res\n        };\n      } catch (e) {\n        console.warn(e);\n        this.micheline = null;\n      }\n    }\n  }\n  parametersToTabular(parameters) {\n    const traverse = (key, val, level) => {\n      const isObject = (key, val, level) => {\n        let arr = [];\n        const entries = Object.entries(val);\n        for (const [key, value] of entries) {\n          if (\n            (typeof value === 'object' && (value as any)?.c == undefined && (value as any)?.e === undefined && (value as any)?.s === undefined) ||\n            ((value as any)?.length > 0 && typeof value !== 'string')\n          ) {\n            arr.push({ key, children: traverse(key, value, level + 1) });\n          } else {\n            arr.push(traverse(key, value, level + 1));\n          }\n        }\n        return arr;\n      };\n\n      const isArray = (key, val, level) => {\n        if (val.length === 1) {\n          return traverse(key, val[0], level + 1);\n        }\n        const arr = [];\n        for (let i = 0; i < val.length; ++i) {\n          if (\n            (typeof val[i] === 'object' && val[i]?.c === undefined && val[i]?.e === undefined && val[i]?.s === undefined) ||\n            ((val[i] as any)?.length > 0 && typeof val[i] !== 'string')\n          ) {\n            if (key) {\n              arr.push({ key, children: traverse(key, val[i], level + 1) });\n            } else {\n              arr.push(...traverse(key, val[i], level + 1));\n            }\n          } else {\n            arr.push(traverse(key, val[i], level + 1));\n          }\n        }\n        return arr;\n      };\n      if (typeof val === 'string') {\n        return { key, val, children: [] };\n      } else if (val && typeof val === 'object' && val?.c !== undefined && val?.e !== undefined && val?.s !== undefined) {\n        return { key, val: Big(val).toString(), children: [] };\n      } else if (!!val?.length && typeof val !== 'string') {\n        return isArray(key, val, level);\n      } else if (val && typeof val === 'object') {\n        return isObject(key, val, level);\n      } else if (typeof val === 'number') {\n        return { key, val, children: [] };\n      } else if (typeof val === 'symbol') {\n        return { key, val: val.valueOf(), children: [] };\n      } else {\n        return { key, val: null, children: [] };\n      }\n    };\n    let result = traverse(null, parameters, 0);\n    if (result?.length === undefined) {\n      result = [result];\n    }\n    return result;\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): string {\n    if (this.customFee) {\n      return this.customFee;\n    }\n    let totalFee = Big(0);\n    for (const tx of this.transactions) {\n      totalFee = totalFee.add(tx.fee ? tx.fee : 0);\n    }\n    return totalFee.toFixed();\n  }\n  getTotalBurn(): number {\n    const totalActiveStorageLimit: number =\n      this.customStorageLimit !== '' && Number(this.customStorageLimit) ? Number(this.customStorageLimit) : this.getTotalDefaultStorage();\n    return Number(Big(totalActiveStorageLimit).times(this.costPerByte).div(1000000).toString());\n  }\n  getTotalDefaultGas(): number {\n    let totalGas = Big(0);\n    for (const tx of this.transactions) {\n      totalGas = totalGas.plus(tx.gasLimit);\n    }\n    return totalGas.toFixed();\n  }\n  getTotalDefaultStorage(): number {\n    let totalStorage = Big(0);\n    for (const tx of this.transactions) {\n      totalStorage = totalStorage.plus(tx.storageLimit);\n    }\n    return totalStorage.toFixed();\n  }\n  getQuantity(amount): number {\n    return Big(amount)\n      .div(10 ** (false ? this.token.decimals : 0))\n      .toFixed();\n  }\n  totalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  formatAmount(token, amount: string, baseUnit = true): string {\n    if (!token) {\n      return `${Big(amount)\n        .div(10 ** (baseUnit ? 6 : 0))\n        .toFixed()} tez`;\n    } else {\n      if (token) {\n        if (this.tokenBalanceService.isNFT(token)) {\n          return `${token.name}`;\n        } else {\n          return `${Big(amount)\n            .div(10 ** (baseUnit ? token.decimals : 0))\n            .toFixed()} ${token.symbol}`;\n        }\n      } else {\n        return '[Unknown token]';\n      }\n    }\n  }\n  async ledgerRetry(): Promise<void> {\n    if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n      this.messageService.addError('Invalid fee');\n      return;\n    }\n    this.messageService.startSpinner('Preparing transaction...');\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      await this.sendTransaction(keys);\n    } else {\n      this.messageService.stopSpinner();\n    }\n  }\n  async inject(): Promise<void> {\n    if (this.walletService.isLedgerWallet()) {\n      await this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n        this.messageService.addError('Invalid fee');\n        return;\n      }\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing transaction...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        this.messageService.startSpinner('Sending transaction...');\n        await this.sendTransaction(keys);\n        ModalComponent.currentModel.next({ name: '', data: null });\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD'); // 'Wrong password!';\n        }\n      }\n    }\n  }\n  async sendTransaction(keys: KeyPair): Promise<void> {\n    const txs: FullyPreparedTransaction[] = this.opsWithCustomLimits();\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, txs, Number(this.getTotalFee()), keys, this.tokenTransfer).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            if (ans.payload.opHash) {\n              await this.messageService.stopSpinner();\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                transactions: this.transactions,\n                opHash: ans.payload.opHash,\n                tokenTransfer: this.tokenTransfer\n              };\n              await this.coordinatorService.boost(this.activeAccount.address, metadata);\n              if (this.transactions[0].meta) {\n                this.torusNotification(this.transactions[0]);\n              }\n              for (const transaction of this.transactions) {\n                if (this.walletService.addressExists(transaction.destination)) {\n                  await this.coordinatorService.boost(transaction.destination);\n                }\n              }\n            } else if (this.walletService.wallet instanceof LedgerWallet) {\n              await this.requestLedgerSignature();\n              return;\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log('Error Message ', JSON.stringify(err));\n          if (this.walletService.isLedgerWallet()) {\n            this.messageService.addError('Failed to create transaction', 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        }\n      )\n    );\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.getTotalDefaultGas().toString()) {\n      extraGas = Number(this.customGasLimit) - this.getTotalDefaultGas();\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.getTotalDefaultStorage().toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.getTotalDefaultStorage();\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas ? (Number(this.transactions[i].gasLimit) + extraGasPerOp).toString() : this.transactions[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.transactions[i].storageLimit) + extraStoragePerOp).toString()\n        : this.transactions[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      await this.messageService.startSpinner('Waiting for Ledger signature...');\n      try {\n        const op = this.sendResponse.payload.unsignedOperation;\n        let signature = '';\n        if (op.length <= 2290) {\n          signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n        } else {\n          signature = await this.ledgerService.signHash(\n            this.operationService.ledgerPreHash('03' + op),\n            this.walletService.wallet.implicitAccounts[0].derivationPath\n          );\n        }\n        if (signature) {\n          const signedOp = op + signature;\n          this.sendResponse.payload.signedOperation = signedOp;\n          this.ledgerError = '';\n        } else {\n          this.ledgerError = 'Failed to sign transaction';\n        }\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(async (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount) {\n          const metadata = {\n            transactions: this.transactions,\n            opHash: ans.payload.opHash,\n            tokenTransfer: this.tokenTransfer\n          };\n          if (this.transactions[0].meta) {\n            this.torusNotification(this.transactions[0]);\n          }\n          await this.coordinatorService.boost(this.activeAccount.address, metadata);\n          if (this.walletService.addressExists(this.transactions[0].destination)) {\n            await this.coordinatorService.boost(this.transactions[0].destination);\n          }\n          this.operationResponse.emit(ans.payload.opHash);\n        } else {\n          console.log('sendResponse', JSON.stringify(this.sendResponse));\n          this.operationResponse.emit('broadcast_error');\n        }\n        console.log('ans: ' + JSON.stringify(ans));\n        this.reset();\n      })\n    );\n  }\n  async torusNotification(transaction: FullyPreparedTransaction): Promise<void> {\n    if (transaction.meta) {\n      const amount = this.tokenService.formatAmount(this.tokenTransfer, transaction.amount.toString(), false);\n      if (transaction.meta.verifier === 'google') {\n        this.messageService.emailNotify(transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 2);\n      } else if (transaction.meta.verifier === 'reddit') {\n        this.messageService.redditNotify(transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 3);\n      } else if (transaction.meta.verifier === 'twitter') {\n        this.messageService.twitterNotify(transaction.meta.twitterId, transaction.meta.alias, amount);\n        this.lookupService.add(transaction.destination, transaction.meta.alias, 4);\n      }\n    }\n  }\n  getUsername(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else if (this.activeAccount) {\n      const party = this.lookupService.resolve({\n        address: this.activeAccount.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  previewAttention(): string {\n    if (this.transactions[0]?.meta?.verifier) {\n      if (!this.tokenTransfer && new Big(this.totalAmount()).gt('50')) {\n        let recipientKind = '';\n        switch (this.transactions[0].meta.verifier) {\n          case 'google':\n            recipientKind = 'Google account email address';\n            break;\n          case 'reddit':\n            recipientKind = 'Reddit username';\n            break;\n          case 'twitter':\n            recipientKind = 'Twitter handle';\n            break;\n          default:\n            recipientKind = 'information';\n        }\n        return `Carefully review the recipient's ${recipientKind}! Spelling mistakes can lead to permanent loss of the transferred funds.`;\n      }\n    }\n    return '';\n  }\n  // Only Numbers with Decimals\n  sanitizeNumberInput(e, type = ''): void {\n    console.dir(this.token?.decimals, e.target);\n    if (['gas', 'storage'].includes(type) || (type === 'amount' && this.token?.decimals == 0)) {\n      e.target.value = e.target.value.replace(/[^0-9]/g, '');\n    } else {\n      e.target.value = e.target.value.replace(/[^0-9\\.]/g, '');\n      if ((e.target.value.match(/\\./g) || []).length > 1) {\n        const tmp = e.target.value.split('');\n        tmp.splice(tmp.lastIndexOf('.'), 1);\n        e.target.value = tmp.join('');\n      }\n      if (e.target.value.charAt(0) === '.') {\n        e.target.value = '0' + e.target.value;\n      }\n    }\n  }\n  closeModalAction(emit: string = null): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.operationResponse.emit(emit);\n    this.reset();\n  }\n  reset(init = false): void {\n    if (!init) {\n      this.confirmRequest = null;\n      if (this.syncSub) {\n        this.syncSub.unsubscribe();\n        this.syncSub = undefined;\n      }\n    }\n    this.tokenTransfer = '';\n    this.transactions = [];\n    this.activeAccount = null;\n\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n\n    this.token = null;\n    this.domain = undefined;\n\n    this.parameters = null;\n    this.batchParamIndex = 0;\n    this.micheline = null;\n    this.batchParameters = [];\n    this.parametersFormat = 0;\n    this.transformedParameters = [];\n    this.extractedSchema = [];\n    this.schema = undefined;\n\n    this.showFullBatch = false;\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.password = '';\n    this.pwdInvalid = '';\n    this.advancedForm = false;\n    this.customFee = '';\n    this.externalReq = false;\n  }\n  counter(i: number) {\n    return new Array(i);\n  }\n\n  toggleTab(e) {\n    let elem = e.target;\n    while (elem.tagName.toLowerCase() !== 'li') {\n      elem = elem.parentElement;\n    }\n    elem.classList.toggle('expanded');\n  }\n}\n","<div class=\"flex-row dropdown\" [class.expanded]=\"isOpen\" (click)=\"toggleDropdown()\" [id]=\"ecmpId\">\n  <img class=\"button icon-torus\"\n    [src]=\"torusVerifier === '' ? 'assets/img/tezos-xtz-logo.svg' :  'assets/img/' + torusVerifier.toLowerCase() + '-logo.svg'\" />\n  <input readonly [(ngModel)]=\"torusVerifierName\" /><img class=\"button icon-db\"\n    src=\"../../../assets/img/down-arrow.svg\" />\n  <div class=\"flex-column dropdown-content\">\n    <a [class.selected]=\"torusVerifierName === 'Tezos Address'\"\n      (click)=\"torusVerifier = ''; torusVerifierName = 'Tezos Address';\">\n      Tezos Address\n    </a>\n    <a [class.selected]=\"torusVerifierName === 'Tezos Domains'\"\n      (click)=\"torusVerifier = 'domain'; torusVerifierName = 'Tezos Domains'\">\n      Tezos Domains\n    </a>\n    <ng-container *ngFor=\"let key of torusService.verifierMapKeys\">\n      <ng-container *ngIf=\"torusService.verifierMap[key].lookups\">\n        <a [class.selected]=\"torusVerifierName === torusService.verifierMap[key].name\"\n          (click)=\"torusVerifier = key; torusVerifierName = torusService.verifierMap[key].name\">\n          {{ torusService.verifierMap[key].name }}\n        </a>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport { DropdownComponent } from '../dropdown.component';\n\n@Component({\n  selector: 'app-ui-dropdown-prepare-send',\n  templateUrl: './prepare-send-dropdown.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/prepare-send-dropdown.component.scss']\n})\nexport class PrepareSendDropdownComponent extends DropdownComponent implements OnInit {\n  @Input() torusVerifierName = 'Tezos Address';\n  @Input() torusVerifier = '';\n\n  constructor(public router: Router, public torusService: TorusService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  toggleDropdown(): void {\n    this.dropdownResponse.emit({\n      torusVerifierName: this.torusVerifierName,\n      torusVerifier: this.torusVerifier\n    });\n    this.isOpen = !this.isOpen;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ !isNFT ? getTitle() : 'Send Token'}}</h1>\n    </div>\n    <div class=\"flex-column prepare-send\">\n      <form autocomplete=\"off\">\n        <div *ngIf=\"!this.isMultipleDestinations\" class=\"flex-column top\">\n          <div *ngIf=\"isNFT\" class=\"flex-row token\">\n            <app-asset class=\"asset\" [priorityList]=\"['thumbnailAsset', 'displayAsset']\" [assets]=\"token\"></app-asset>\n            <span class=\"title\">{{token?.name}}</span>\n          </div>\n          <span *ngIf=\"!this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1)\"\n            class=\"flex-row label title\">ENTER {{!isNFT ? 'AMOUNT' :\n            'QUANTITY'}}:</span>\n          <div *ngIf=\"!this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1)\"\n            class=\"flex-row amount\">\n            <input #amountInput inputmode=\"decimal\" name=\"none\" [placeholder]=\"token?.decimals == 0 ? '0' : '0.00'\" [(ngModel)]=\"amount\"\n              name=\"none\" (mousedown)=\"sendMax = false; default\"\n              (input)=\"sanitizeNumberInput($event, 'amount'); amountChange()\"\n              (paste)=\"sanitizeNumberInput($event, 'amount')\" (change)=\"amountChange()\"\n              [disabled]=\"isMultipleDestinations\" />\n            <button *ngIf=\"!this.isMultipleDestinations\" tabindex=-1 class=\"small\" [class.max]=\"sendMax\"\n              (click)=\"sendEntireBalance($event)\">MAX</button>\n          </div>\n          <div class=\"flex-row fees\">\n            <span *ngIf=\"!tokenTransfer\" class=\"amount-usd\">\n              <span>USD:&nbsp;</span>{{'$' + (getTotalAmount() * walletService.wallet.XTZrate | number:'1.2-2' ||\n              '0.00')\n              }}\n            </span>\n            <span class=\"amount-fee\"><span>FEE{{ getTotalBurn() > 0 ? ' & STORAGE COST' : ''}}:&nbsp;</span><img\n                *ngIf=\"simSemaphore\" src=\"../../../../assets/img/feeLoader.gif\">{{ getTotalCost() != 0 ? (getTotalCost()\n              |\n              number:'1.0-6') + ' tez' : '--'\n              }}</span>\n          </div>\n        </div>\n      </form>\n      <form class=\"to\" autocomplete=\"off\">\n        <div *ngIf=\"!this.isMultipleDestinations\" class=\"flex-column\">\n          <span class=\"label title\">SEND TO:</span>\n          <div class=\"address\">\n            <div *ngIf=\"!toPkh\" class=\"flex-column tool\" id=\"paste\" (click)=\"pasteToPkh()\">\n              <img src=\"assets/img/paste.svg\" />\n            </div>\n            <app-qr-scanner *ngIf=\"!toPkh\" [override]=\"true\" class=\"flex-column tool\" id=\"qr\" (scanResponse)=\"handleScanResponse($event)\"></app-qr-scanner>\n            <app-ui-dropdown-prepare-send [torusVerifier]=\"torusVerifier\" [torusVerifierName]=\"torusVerifierName\"\n              (dropdownResponse)=\"dropdownResponse($event)\"></app-ui-dropdown-prepare-send>\n            <input type=\"text\" placeholder=\"Recipient\" class=\"text\" (input)=\"updateDefaultValues($event)\"\n              (change)=\"toPkhChange()\" name=\"toPkh\" [(ngModel)]=\"toPkh\">\n          </div>\n          <div class=\"flex-row address-display\">\n            <span [style.display]=\"!torusPendingLookup && torusLookupAddress ? '' : 'none'\">{{ torusLookupAddress\n              }}</span><span [style.display]=\"torusPendingLookup ? '' : 'none'\"><img\n                src=\"../../../../assets/img/feeLoader.gif\"></span>\n          </div>\n        </div>\n        <div *ngIf=\"this.isMultipleDestinations\" class=\"flex-column\">\n          <label class=\"label\">Addresses and amounts <span class=\"batchInfo\">{{ batchSpace() }}</span></label>\n          <textarea name=\"none\" type=\"text\" class=\"text\" (input)=\"updateDefaultValues()\" rows=\"3\"\n            [(ngModel)]=\"toMultipleDestinationsString\" name=\"none\"\n            placeholder=\"address1 amount1 ; &#10;address2 amount2 ; &#10;address3 ...\"></textarea>\n        </div>\n        <div class=\"flex-column\">\n          <app-ui-toggle-advanced style=\"width: calc(100% - 1.5em);margin: 1rem 0;\" [default]=\"false\"\n            (stateChange)=\"advancedForm = $event\"></app-ui-toggle-advanced>\n          <button *ngIf=\"!isNFT && advancedForm\" class=\"small multiple-destinations\" (click)=\"toggleDestination()\">\n            <span>\n              <ng-container *ngIf=\"!this.isMultipleDestinations\">Multiple transactions</ng-container>\n              <ng-container *ngIf=\"this.isMultipleDestinations\">Single transaction</ng-container>\n            </span>\n          </button>\n        </div>\n      </form>\n      <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"flex-column advanced-form\">\n        <div class=\"flex-row\">\n          <div class=\"flex-column\">\n            <label class=\"label\">Gas limit</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text\" (input)=\"sanitizeNumberInput($event, 'gas')\"\n              (paste)=\"sanitizeNumberInput($event, 'gas')\" placeholder={{this.defaultTransactionParams.gas.toString()}}\n              [(ngModel)]=\"customGasLimit\" name=\"none\">\n          </div>\n          <div class=\"flex-column\">\n            <label class=\"label\">Fee</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" (input)=\"sanitizeNumberInput($event); updateMaxAmount()\"\n              (paste)=\"sanitizeNumberInput($event); updateMaxAmount()\" class=\"text\"\n              placeholder={{this.defaultTransactionParams.fee.toString()}} [(ngModel)]=\"customFee\" name=\"none\">\n          </div>\n        </div>\n        <div class=\"flex-row\">\n          <div class=\"flex-column\">\n            <label class=\"label\">Storage limit</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" (input)=\"sanitizeNumberInput($event, 'storage'); updateMaxAmount()\"\n              (paste)=\"sanitizeNumberInput($event, 'storage'); updateMaxAmount()\" class=\"text\"\n              placeholder={{this.defaultTransactionParams.storage.toString()}} [(ngModel)]=\"customStorageLimit\"\n              name=\"none\">\n          </div>\n          <div class=\"flex-column\">\n            <label class=\"label\">Max storage cost</label>\n            <input inputmode=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\"\n              tabindex=-1 readonly>\n          </div>\n        </div>\n      </form>\n      <br />\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <span *ngIf=\"formInvalid !== ''\" class=\"label danger\">\n          {{ formInvalid }}\n        </span>\n        <button class=\"confirm\" (click)=\"preview()\">Preview</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { TokenService } from '../../../../services/token/token.service';\nimport { EstimateService } from '../../../../services/estimate/estimate.service';\nimport { DefaultTransactionParams } from '../../../../interfaces';\nimport { FullyPreparedTransaction, PartiallyPreparedTransaction, PrepareRequest } from '../../../misc/send/interfaces';\nimport { Account, ImplicitAccount, OriginatedAccount } from '../../../../services/wallet/wallet';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport Big from 'big.js';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport assert from 'assert';\nimport { TezosDomainsService } from '../../../../services/tezos-domains/tezos-domains.service';\nimport { ModalComponent } from '../../modal.component';\nimport { TokenBalancesService } from '../../../../services/token-balances/token-balances.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n@Component({\n  selector: 'app-prepare-send',\n  templateUrl: './prepare-send.component.html',\n  styleUrls: ['../../../../../scss/components/modals/modal.scss']\n})\nexport class PrepareSendComponent extends ModalComponent implements OnInit, OnChanges {\n  @Input() prepareRequest: PrepareRequest = null;\n  @Output() prepareResponse = new EventEmitter();\n  @ViewChild('destType') public destType: ElementRef;\n  activeAccount: Account = null;\n  tokenTransfer: string = null;\n  token = null;\n  costPerByte: string = this.estimateService.costPerByte;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n  active = false;\n  isMultipleDestinations = false;\n  advancedForm = false;\n  hideAmount = false;\n  simSemaphore = 0;\n  isNFT = false;\n  accountDropdownIsOpen = false;\n\n  torusVerifierName = 'Tezos Address';\n  torusVerifier = '';\n  torusLookupId = '';\n  torusLookupAddress = '';\n  torusTwitterId = '';\n  torusPendingLookup = false;\n\n  transactions = [];\n  toMultipleDestinationsString = '';\n\n  formInvalid = '';\n  latestSimError = '';\n  prevEquiClass = '';\n\n  sendMax = null;\n\n  amount = '';\n  toPkh = '';\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  name = 'prepare-send';\n\n  constructor(\n    private tokenService: TokenService,\n    private estimateService: EstimateService,\n    public torusService: TorusService,\n    private translate: TranslateService,\n    private walletService: WalletService,\n    public tezosDomains: TezosDomainsService,\n    private inputValidationService: InputValidationService,\n    private tokenBalancesService: TokenBalancesService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.prepareRequest?.currentValue) {\n      this.reset(true);\n      this.tokenTransfer = changes.prepareRequest.currentValue.tokenTransfer ?? null;\n      this.token = this.tokenService.getAsset(this.tokenTransfer);\n      this.isNFT = this.tokenBalancesService.isNFT(this.token);\n      this.activeAccount = changes.prepareRequest.currentValue.account;\n      this.amount = !this.token || !(this.token?.isBooleanAmount || this.token?.balance == 1) ? '' : '1';\n      if (!this.isOpen) {\n        this.openModal();\n      }\n    }\n  }\n  openModal() {\n    ModalComponent.currentModel.next({ name: this.name, data: null });\n    this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n  }\n  closeModalAction() {\n    this.prepareResponse.emit(null);\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.reset();\n  }\n\n  reset(init = false) {\n    if (!init) {\n      this.prepareRequest = null;\n    }\n\n    this.defaultTransactionParams = zeroTxParams;\n    this.active = false;\n    this.isMultipleDestinations = false;\n    this.advancedForm = false;\n    this.hideAmount = false;\n    this.simSemaphore = 0;\n\n    this.tokenTransfer = null;\n    this.token = null;\n    this.isNFT = null;\n    this.accountDropdownIsOpen = false;\n\n    this.transactions = [];\n    this.toMultipleDestinationsString = '';\n\n    this.formInvalid = '';\n    this.latestSimError = '';\n    this.prevEquiClass = '';\n    this.torusVerifierName = 'Tezos Address';\n    this.torusVerifier = '';\n\n    this.sendMax = null;\n\n    this.amount = '';\n    this.toPkh = '';\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.clearTorus();\n  }\n  getTitle(): string {\n    return `Send ${this.getAssetName(true)}`;\n  }\n  getAssetName(short = true): string {\n    if (this.tokenTransfer) {\n      return this.token?.symbol ?? this.token?.name ?? 'Unknown';\n    } else {\n      return !this.prepareRequest.symbol ? 'tez' : this.prepareRequest.symbol;\n    }\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): number | string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return Number(totalFee);\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && Number(this.customFee)) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorageLimit !== '' && Number(this.customStorageLimit)) {\n      return Number(Big(this.customStorageLimit).mul(this.transactions.length).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorageLimit ? Number(Big(this.customStorageLimit).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  amountChange(): void {\n    this.estimateFees();\n  }\n  async estimateFees(): Promise<void> {\n    console.log('estimate..');\n    const prevSimError = this.latestSimError;\n    this.latestSimError = '';\n    let txs: PartiallyPreparedTransaction[] = [];\n    try {\n      txs = this.getMinimalPreparedTxs();\n      this.transactions = txs;\n    } catch (e) {\n      console.log(e);\n    }\n    if (txs?.length) {\n      const equiClass = this.equiClass(this.activeAccount.address, txs);\n      if (this.prevEquiClass !== equiClass || (this.tokenTransfer && this.checkBalance())) {\n        this.latestSimError = '';\n        this.prevEquiClass = equiClass;\n        this.simSemaphore++; // Put lock on 'Preview and 'Send max'\n        const callback = (res) => {\n          if (res) {\n            if (res.error) {\n              this.formInvalid = res.error;\n              this.latestSimError = res.error;\n            } else {\n              this.defaultTransactionParams = res;\n              this.formInvalid = '';\n              this.latestSimError = '';\n              this.updateMaxAmount();\n            }\n          } else {\n            console.log('no res');\n          }\n          this.simSemaphore--;\n        };\n        this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.address, this.tokenTransfer, callback);\n      } else {\n        this.latestSimError = prevSimError;\n        this.formInvalid = this.latestSimError;\n      }\n    } else {\n      this.latestSimError = prevSimError;\n      if (this.isMultipleDestinations ? !this.toMultipleDestinationsString : !this.toPkh) {\n        this.defaultTransactionParams = zeroTxParams;\n        this.updateMaxAmount();\n        this.prevEquiClass = '';\n      }\n    }\n  }\n  equiClass(sender: string, transactions: any): string {\n    let data = sender;\n    if (this.tokenTransfer) {\n      data += transactions[0].to + transactions[0].amount.toString();\n    } else {\n      for (const tx of transactions) {\n        data += tx.to;\n      }\n    }\n    return data;\n  }\n  /*\n    1. input validation\n      strict checks that\n    2. create basic transaction array\n  */\n  sanitizeNumberInput(e, type = ''): void {\n    console.dir(this.token?.decimals, e.target);\n    if (['gas', 'storage'].includes(type) || (type === 'amount' && this.token?.decimals == 0)) {\n      e.target.value = e.target.value.replace(/[^0-9]/g, '');\n    } else {\n      e.target.value = e.target.value.replace(/[^0-9\\.]/g, '');\n      if ((e.target.value.match(/\\./g) || []).length > 1) {\n        const tmp = e.target.value.split('');\n        tmp.splice(tmp.lastIndexOf('.'), 1);\n        e.target.value = tmp.join('');\n      }\n      if (e.target.value.charAt(0) === '.') {\n        e.target.value = '0' + e.target.value;\n      }\n    }\n  }\n  updateDefaultValues(ev?: any): void {\n    const val = ev?.target.value.trim();\n    if (val && !this.torusVerifier) {\n      if (this.inputValidationService.twitterAccount(val)) {\n        this.torusVerifier = 'twitter';\n        this.torusVerifierName = 'Twitter';\n      } else if (this.inputValidationService.tezosDomain(val)) {\n        this.torusVerifier = 'domain';\n        this.torusVerifierName = 'Tezos Domains';\n      }\n      ev.target.value = ev.target.value.trim();\n    }\n\n    if (!this.torusVerifier) {\n      this.estimateFees();\n      if (this.isMultipleDestinations) {\n        this.amount = this.getTotalAmount();\n      }\n    }\n  }\n  toPkhChange(): void {\n    if (this.torusVerifier) {\n      this.torusLookup();\n    }\n  }\n  // Will return PartiallyPreparedTransaction or throw an error\n  getMinimalPreparedTxs(finalCheck = false): PartiallyPreparedTransaction[] {\n    if (!this.isMultipleDestinations) {\n      if (this.torusVerifier) {\n        assert(!this.invalidTorusAccount(), this.invalidTorusAccount());\n        assert(this.torusReady(), 'Pending lookup');\n        this.checkTx(this.torusLookupAddress, this.amount, finalCheck);\n        const meta: any = {\n          verifier: this.torusVerifier,\n          alias: this.torusLookupId\n        };\n        if (this.torusTwitterId) {\n          meta.twitterId = this.torusTwitterId;\n        }\n        return [\n          {\n            kind: 'transaction',\n            destination: this.torusLookupAddress,\n            amount: this.amount ? this.amount : '0',\n            meta\n          }\n        ];\n      } else {\n        this.checkTx(this.toPkh, this.amount, finalCheck);\n      }\n      return [\n        {\n          kind: 'transaction',\n          destination: this.toPkh,\n          amount: this.amount ? this.amount : '0'\n        }\n      ];\n      //this.checkGasStorageFee();\n    } else {\n      return this.getBatch(finalCheck);\n      //assert(false, 'not supported yet')\n    }\n  }\n  checkTx(toPkh: string, amount: string, finalCheck: boolean): void {\n    assert(\n      this.torusVerifier || !(!this.inputValidationService.address(toPkh) || toPkh === this.activeAccount.address),\n      this.translate.instant('SENDCOMPONENT.INVALIDRECEIVERADDRESS')\n    );\n    assert(\n      !this.torusVerifier ||\n        !(!this.inputValidationService.torusAccount(this.toPkh, this.torusVerifier) || this.torusLookupAddress === this.activeAccount.address),\n      'Invalid recipient'\n    );\n    assert(\n      !(\n        !this.inputValidationService.amount(amount, this.token ? this.token.decimals : undefined) ||\n        (finalCheck && (amount === '0' || amount === '') && toPkh.slice(0, 3) !== 'KT1')\n      ),\n      this.translate.instant('SENDCOMPONENT.INVALIDAMOUNT')\n    );\n  }\n  getBatch(finalCheck = false): PartiallyPreparedTransaction[] {\n    const txs: PartiallyPreparedTransaction[] = this.toMultipleDestinationsString\n      .trim()\n      .split(';')\n      .map((row, i) => {\n        if (row.trim()) {\n          const cols = row\n            .trim()\n            .split(' ')\n            .map((col) => col.trim())\n            .filter((col) => col);\n          assert(cols?.length === 2, `Transaction ${i + 1} has invalid number of arguments. Expected 2, but got ${cols?.length}.`);\n          assert(this.inputValidationService.address(cols[0]), `Transaction ${i + 1} contains an invalid destination.`);\n          assert(this.inputValidationService.amount(cols[1]), `Transaction ${i + 1} contains an invalid amount.`);\n          this.checkTx(cols[0], cols[1], finalCheck);\n          const tx: PartiallyPreparedTransaction = {\n            kind: 'transaction',\n            destination: cols[0],\n            amount: cols[1]\n          };\n          return tx;\n        }\n      })\n      .filter((row) => row);\n    return txs;\n  }\n  getFullyPreparedTxs(): FullyPreparedTransaction[] {\n    assert(!this.simSemaphore && (!this.torusVerifier || this.torusReady()), this.formInvalid ? this.formInvalid : 'Awaiting request');\n    const minimalTxs = this.getMinimalPreparedTxs(true);\n    this.transactions = minimalTxs;\n    assert(this.inputValidationService.fee(this.customFee), 'Invalid fee');\n    assert(this.inputValidationService.gas(this.customGasLimit), 'Invalid gas limit');\n    assert(this.inputValidationService.gas(this.customStorageLimit), 'Invalid storage limit');\n    assert(!this.checkBalance(), this.checkBalance());\n    assert(minimalTxs.length === this.defaultTransactionParams.customLimits?.length, 'Simulation error');\n    return this.opsWithCustomLimits();\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.defaultTransactionParams.gas.toString()) {\n      extraGas = Number(this.customGasLimit) - this.defaultTransactionParams.gas;\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.defaultTransactionParams.storage.toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.defaultTransactionParams.storage;\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas\n        ? (Number(this.defaultTransactionParams.customLimits[i].gasLimit) + extraGasPerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.defaultTransactionParams.customLimits[i].storageLimit) + extraStoragePerOp).toString()\n        : this.defaultTransactionParams.customLimits[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  invalidTorusAccount(): string {\n    const torusError = {\n      google: 'Invalid Google email address',\n      reddit: 'Invalid Reddit username',\n      twitter: 'Invalid Twitter username',\n      domain: 'Tezos Domains must be valid url',\n      email: 'Invalid email address'\n    };\n    if (!this.inputValidationService.torusAccount(this.toPkh, this.torusVerifier) && this.toPkh !== '') {\n      return torusError[this.torusVerifier];\n    }\n  }\n  sendEntireBalance(event: Event): void {\n    event.stopPropagation();\n    this.sendMax = true;\n    this.checkMaxAmount();\n    this.amountChange();\n  }\n  toggleDestination(): void {\n    this.defaultTransactionParams = zeroTxParams;\n    this.sendMax = false;\n    this.prevEquiClass = '';\n    this.isMultipleDestinations = !this.isMultipleDestinations;\n    this.transactions = [];\n    this.toMultipleDestinationsString = '';\n    this.formInvalid = '';\n    this.toPkh = '';\n    this.amount = '';\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n    this.clearTorus();\n    this.updateDefaultValues();\n  }\n  clearTorus(): void {\n    this.torusVerifier = '';\n    this.torusPendingLookup = false;\n    this.torusLookupAddress = '';\n    this.torusLookupId = '';\n    this.torusTwitterId = '';\n  }\n  checkMaxAmount(): void {\n    if (this.sendMax) {\n      const max = this.maxToSend(this.activeAccount);\n      if (max.length && max.slice(0, 1) !== '-') {\n        this.amount = max;\n      } else {\n        this.amount = '0';\n      }\n    }\n  }\n  checkBalance(): string {\n    if (this.transactions.length > 0) {\n      if (this.activeAccount && this.activeAccount instanceof ImplicitAccount) {\n        const max = Big(this.maxToSend(this.activeAccount)).plus(this.tokenTransfer ? 0 : 0.000001);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (amount.gt(max)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHFEEORAMOUNT');\n        }\n      } else if (this.activeAccount && this.activeAccount instanceof OriginatedAccount) {\n        const maxKt = Big(this.maxToSend(this.activeAccount));\n        const maxTz = Big(this.maxToSend(this.walletService.wallet.getImplicitAccount(this.activeAccount.pkh))).plus(0.000001);\n        let amount = Big(0);\n        for (const tx of this.transactions) {\n          amount = amount.plus(Big(tx.amount));\n        }\n        if (amount.gt(maxKt)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHAMOUNT');\n        } else if (new Big('0').gt(maxTz)) {\n          return this.translate.instant('SENDCOMPONENT.TOOHIGHFEE');\n        }\n      }\n    }\n    return '';\n  }\n  updateMaxAmount(): void {\n    if (this.sendMax) {\n      const max = this.maxToSend(this.activeAccount);\n      let maxAmount = '0';\n      if (max.length && max.slice(0, 1) !== '-') {\n        maxAmount = max;\n      }\n      if (this.amount !== maxAmount) {\n        this.amount = maxAmount;\n      }\n    }\n  }\n  maxToSend(account: Account): string {\n    if (account && account instanceof ImplicitAccount && !this.tokenTransfer) {\n      let accountBalance = Big(account.balanceXTZ).div(1000000);\n      accountBalance = accountBalance.minus(this.customFee && Number(this.customFee) ? Number(this.customFee) : this.defaultTransactionParams.fee);\n      if (!this.isMultipleDestinations) {\n        accountBalance = accountBalance.minus(\n          this.customStorageLimit && Number(this.customStorageLimit)\n            ? Number(Big(this.customStorageLimit).times(this.costPerByte).div('1000000'))\n            : this.defaultTransactionParams.burn\n        );\n      } else {\n        accountBalance = accountBalance.minus(this.defaultTransactionParams.burn);\n      }\n      accountBalance = accountBalance.minus(0.000001); // dust\n      return accountBalance.toString();\n    } else {\n      if (this.tokenTransfer) {\n        if (account instanceof ImplicitAccount) {\n          return Big(account.getTokenBalance(this.tokenTransfer))\n            .div(10 ** this.token.decimals)\n            .toFixed();\n        }\n      } else {\n        return Big(account.balanceXTZ).div(1000000).toString();\n      }\n    }\n  }\n\n  async verifierChange(): Promise<void> {\n    this.torusLookupAddress = '';\n    if (this.torusVerifier) {\n      this.torusLookup();\n    } else {\n      this.formInvalid = '';\n      this.estimateFees();\n    }\n    // this.validateReceiverAddress();\n    // resimulate?\n  }\n  async torusLookup(): Promise<any> {\n    if (!this.torusService.verifierMapKeys.includes(this.torusVerifier) && this.torusVerifier !== 'domain') {\n      this.formInvalid = 'Invalid verifier';\n    } else if (this.invalidTorusAccount()) {\n      this.formInvalid = this.invalidTorusAccount();\n    } else if (this.toPkh) {\n      this.torusPendingLookup = true;\n      this.torusLookupId = this.toPkh;\n\n      const { pkh, twitterId } =\n        this.torusVerifier === 'domain'\n          ? await this.tezosDomains\n              .getAddressFromDomain(this.toPkh)\n              .then((ans) => {\n                if (ans?.pkh === '') {\n                  this.formInvalid = 'Could not find the domain';\n                }\n                return ans;\n              })\n              .catch((e) => {\n                console.error(e);\n                this.formInvalid = e;\n                return '';\n              })\n          : await this.torusService.lookupPkh(this.torusVerifier, this.toPkh).catch((e) => {\n              console.error(e);\n              this.formInvalid = e;\n              return '';\n            });\n\n      this.torusPendingLookup = false;\n      if (pkh) {\n        this.torusLookupAddress = pkh;\n        this.torusTwitterId = twitterId ? twitterId : '';\n        this.estimateFees();\n      } else {\n        this.torusLookupAddress = '';\n      }\n    }\n  }\n  batchSpace(txs = 0): boolean | string {\n    if (this.isMultipleDestinations && this.defaultTransactionParams.customLimits && this.defaultTransactionParams.customLimits.length) {\n      const numberOfTxs = txs ? txs : this.defaultTransactionParams.customLimits.length;\n      const txsLimit = 294 + (this.defaultTransactionParams.reveal ? 0 : 2); // Max transactions in a batch is 296 (294 with a reveal)\n      return !txs ? this.numberWithCommas(numberOfTxs + ' / ' + txsLimit) : numberOfTxs <= txsLimit;\n    }\n    return !txs ? '' : true;\n  }\n  numberWithCommas(x: string): string {\n    const parts: Array<string> = x.split('.');\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return parts.join('.');\n  }\n  torusReady(): boolean {\n    return !this.torusPendingLookup && this.torusLookupAddress !== '';\n  }\n  preview(): void {\n    let txs: FullyPreparedTransaction[];\n    try {\n      txs = this.getFullyPreparedTxs();\n      this.prepareResponse.emit(txs);\n      ModalComponent.currentModel.next({\n        name: 'confirm-send',\n        data: {\n          customFee: this.customFee,\n          customGasLimit: this.customGasLimit,\n          customStorageLimit: this.customStorageLimit\n        }\n      });\n      this.reset();\n    } catch (e) {\n      this.formInvalid = e.message;\n    }\n  }\n  dynSize(): string {\n    const size = this.amount ? this.amount.length : 0;\n    if (size < 7) {\n      return '5';\n    } else if (size < 9) {\n      return '4';\n    } else if (size < 12) {\n      return '3';\n    } else if (size < 17) {\n      return '2';\n    }\n    return '1.5';\n  }\n\n  dropdownResponse(data): void {\n    if (data?.torusVerifier !== this.torusVerifier) {\n      console.log(this.torusVerifier + ' -> ' + data.torusVerifier);\n      this.torusVerifier = data.torusVerifier;\n      this.torusVerifierName = data.torusVerifierName;\n      this.verifierChange();\n    }\n  }\n  pasteToPkh(): void {\n    navigator.clipboard.readText().then((clipText) => {\n      this.toPkh = clipText;\n      this.updateDefaultValues({ target: { value: this.toPkh } });\n    });\n  }\n  handleScanResponse(ev): void {\n    this.toPkh = ev?.pkh || '';\n    this.updateDefaultValues({ target: { value: this.toPkh } });\n  }\n}\n","<div *ngIf=\"active && template === 'gap'\" class=\"flex-column kukai-modal gap\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div class=\"asset-name\">{{ templateRequest.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span class=\"default-text\">Send</span>\n            <span class=\"default-text amount\">{{ (templateRequest.partialOps[0].amount | number:'1.0-6') + ' tez'\n              }}</span>\n            <span class=\"default-text\">USD&nbsp;{{'$' +\n              (templateRequest.partialOps[0].amount\n              *\n              walletService.wallet.XTZrate | number:'1.0-2')\n              }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"templateRequest.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"templateRequest.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/gap-arrow.svg\"></div>\n        <div *ngIf=\"showMore\" class=\"info\">\n          <div class=\"flex-column\">\n            <div class=\"default-text\">\n              Send to:\n            </div>\n            <div class=\"default-text\">\n              {{ templateRequest.ops[0].destination }}\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Fee\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.network + ' tez' }}\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Max Storage Cost\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.storage + ' tez' }}\n              </div>\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Contract Call\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.ops[0]?.parameters?.entrypoint }}\n              </div>\n            </div>\n            <br/>\n          </div>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\" [disabled]=\"templateRequest?.partialOps?.length !== 1\">\n          <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n            {{templateRequest.template.button}}</ng-container>\n          <ng-template #defaultButtonText>PURCHASE</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"active && template === 'minterpop'\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div class=\"asset-name\">{{ templateRequest.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span class=\"default-text\">Send</span>\n            <span class=\"default-text amount\">{{ (templateRequest.partialOps[0].amount | number:'1.0-6') + ' tez'\n              }}</span>\n            <span class=\"default-text\">USD&nbsp;{{'$' +\n              (templateRequest.partialOps[0].amount\n              *\n              walletService.wallet.XTZrate | number:'1.0-2')\n              }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"templateRequest.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"templateRequest.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n        <div *ngIf=\"showMore\" class=\"info\">\n          <div class=\"flex-column\">\n            <div class=\"default-text\">\n              Send to:\n            </div>\n            <div class=\"default-text\">\n              {{ templateRequest.ops[0].destination }}\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Fee\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.network + ' tez' }}\n              </div>\n            </div>\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Max Storage Cost\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.fee.storage + ' tez' }}\n              </div>\n            </div>\n          </div>\n          <div class=\"seperator\"></div>\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"default-text\">\n                Contract Call\n              </div>\n              <div class=\"default-text\">\n                {{ templateRequest.ops[0]?.parameters?.entrypoint }}\n              </div>\n            </div>\n            <br/>\n          </div>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\" [disabled]=\"templateRequest?.partialOps?.length !== 1\">\n          <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n            {{templateRequest.template.button}}</ng-container>\n          <ng-template #defaultButtonText>Send</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div *ngIf=\"active && template === 'default'\" class=\"kukai-template\">\n  <div *ngIf=\"templateRequest.template\" class=\"flex-column card\">\n    <H1>You are about to<BR><b\n        *ngIf=\"templateRequest.template.action; else defaultAction\">{{templateRequest.template.action}}</b>\n      <ng-template #defaultAction><b>send</b></ng-template>\n    </H1>\n    <ng-container *ngFor=\"let description of templateRequest.template.descriptions\">\n      <ng-container *ngIf=\"!description.imgUrl\">\n        <p class=\"single\" *ngIf=\"description.text\">{{ description.text }}</p>\n      </ng-container>\n      <ng-container *ngIf=\"description.imgUrl\">\n        <img *ngIf=\"description.imgUrl\" src=\"{{description.imgUrl}}\" height=\"150\">\n        <p class=\"img-text\" *ngIf=\"description.text\">{{description.text}}</p>\n      </ng-container>\n    </ng-container>\n    <div class=\"buttons\" [class.horizontally]=\"!templateRequest.template.buttonsVertically\"\n      [class.vertically]=\"templateRequest.template.buttonsVertically\">\n      <button class=\"secondary\" (click)=\"cancel()\">Cancel</button>\n      <button (click)=\"approve()\">\n        <ng-container *ngIf=\"templateRequest.template.button; else defaultButtonText\">\n          {{templateRequest.template.button}}</ng-container>\n        <ng-template #defaultButtonText>Send</ng-template>\n      </button>\n    </div>\n    <p class=\"fee\">Estimated fee <b *ngIf=\"templateRequest.fee\">{{templateRequest.fee.total}} tez</b><img\n        *ngIf=\"!templateRequest.fee\" src=\"../../../../assets/img/feeLoader.gif\"></p>\n    <div class=\"footer\">\n      <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges, OnChanges } from '@angular/core';\nimport { TemplateRequest, TemplateFee, FullyPreparedTransaction } from '../../../misc/send/interfaces';\nimport { Template, BaseTemplate } from 'kukai-embed';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-confirm-send-embed',\n  templateUrl: './confirm-send.component.html',\n  styleUrls: ['./confirm-send.component.scss']\n})\nexport class ConfirmSendEmbedComponent implements OnInit, OnChanges {\n  @Input() templateRequest: TemplateRequest = null;\n  @Output() isApproved = new EventEmitter();\n  @Input() activeAccount = null;\n  active = false;\n  showMore = false;\n  template = 'default';\n  constructor(public walletService: WalletService, public messageService: MessageService, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((origin) => {\n      if (origin && origin.indexOf('gap') !== -1) {\n        // (m)interpop\n        this.template = 'gap';\n      } else if (origin && origin.indexOf('interpop') !== -1) {\n        // (m)interpop\n        this.template = 'minterpop';\n      } else {\n        this.template = 'default';\n      }\n    });\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.templateRequest?.currentValue) {\n      console.log(this.templateRequest);\n      if ((<BaseTemplate>this.templateRequest?.template)?.descriptions?.length) {\n        this.hideScrollbar();\n        this.active = true;\n      } else {\n        console.warn('No template descriptions');\n        this.cancel();\n      }\n    }\n  }\n  cancel() {\n    this.reset();\n    this.isApproved.emit(null);\n  }\n  approve() {\n    if (this.templateRequest.ops && this.templateRequest.fee) {\n      this.isApproved.emit(this.templateRequest.ops);\n      this.reset();\n    }\n  }\n  toggle() {\n    if (this.templateRequest.ops) {\n      this.showMore = !this.showMore;\n    }\n  }\n  reset() {\n    this.resetScrollbar();\n    this.active = false;\n  }\n  hideScrollbar() {\n    const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n    document.body.style.marginRight = scrollBarWidth.toString();\n    document.body.style.overflow = 'hidden';\n  }\n  resetScrollbar() {\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">Confirmation</h1>\n    </div>\n    <div class=\"flex-column liquidity-baking-confirm\">\n      <ng-container *ngIf=\"entrypoint === 'addLiquidity'\">\n        <div class=\"flex-column container-inputs alt from\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedXtz | number:'1.0-6' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow plus\">\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedToken | number:'1.0-8' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"seperator arrow\">\n          <div class=\"backdrop\"></div>\n          <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n        </div>\n        <div class=\"flex-column container-inputs alt to\">\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{ expectedLqd ? (expectedLqd | number:'1.0-0') : \"&nbsp;\" }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'SIRS' }}</span>\n              <img [src]=\"'assets/img/tokens/sirius.png'\" />\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'removeLiquidity'\">\n        <div class=\"flex-column container-inputs alt from\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{ expectedLqd | number:'1.0-0' }}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'SIRS' }}</span>\n              <img [src]=\"'assets/img/tokens/sirius.png'\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"seperator arrow\">\n          <div class=\"backdrop\"></div>\n          <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n        </div>\n        <div class=\"flex-column container-inputs alt to\">\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedXtz ? (expectedXtz | number:'1.0-6') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow plus\">\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-plus.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedToken ? (expectedToken | number:'1.0-8') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'xtzToToken'\">\n        <div class=\"flex-column container-inputs\">\n          <div *ngIf=\"expectedXtz\" class=\"flex-row currency from\">\n            <span class=\"amount\">{{expectedXtz | number:'1.0-6'}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow\">\n            <div class=\"backdrop\"></div>\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedToken ? (expectedToken | number:'1.0-8') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n            <span class=\"flex-row hint\">Expected</span>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"entrypoint === 'tokenToXtz'\">\n        <div class=\"flex-column container-inputs\">\n          <div class=\"flex-row currency from\">\n            <span class=\"amount\">{{expectedToken | number:'1.0-8'}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'tzBTC' }}</span>\n              <img [src]=\"'assets/img/tokens/tzbtc.png'\" />\n            </div>\n          </div>\n          <div class=\"seperator arrow\">\n            <div class=\"backdrop\"></div>\n            <span class=\"img-wrap\"><img [src]=\"semaphore ? 'assets/img/feeLoader.gif' : 'assets/img/lb-down-arrow.svg'\" /></span>\n          </div>\n          <div class=\"flex-row currency to\">\n            <span class=\"amount\">≈ {{expectedXtz ? (expectedXtz | number:'1.0-6') : \"&nbsp;\"}}</span>\n            <div class=\"flex-row left\">\n              <span class=\"symbol\">{{ 'XTZ' }}</span>\n              <img [src]=\"'assets/img/tezos-xtz-logo.svg'\" />\n            </div>\n            <span class=\"flex-row hint\">Expected</span>\n          </div>\n        </div>\n      </ng-container>\n      <div class=\"output\">\n        <div *ngIf=\"minimumToken && !minimumXtz\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumToken | number:'1.2-8'}} tzBTC</span>\n        </div>\n        <div *ngIf=\"minimumXtz && !minimumToken\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\"\n              class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumXtz | number:'1.6-6'}} XTZ</span>\n        </div>\n        <div\n          *ngIf=\"minimumXtz && minimumToken\"\n          class=\"item\">\n          <span class=\"flex-row key\" style=\"margin: 0 0 0.5em 0\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumXtz | number:'1.6-6'}} XTZ + {{\n            minimumToken | number:'1.2-8'}} tzBTC</span>\n        </div>\n        <div *ngIf=\"minimumLqd\" class=\"flex-row item\">\n          <span class=\"flex-row key\">Minimum Received:&nbsp;\n          </span>\n          <img src=\"assets/img/information-circle-outline.svg\" class=\"info-button\" />\n          <div class=\"body\">\n            The minimum amount you are guaranteed to receive. If the exchange rate changes unfavorably such that you can no longer receive at least this amount, then your transaction will not be completed.\n          </div>\n          <span class=\"value\">{{minimumLqd | number:'1.0-0'}} SIRS</span>\n        </div>\n        <div class=\"flex-row item\">\n          <span class=\"flex-row key\">Fee:</span>\n          <span class=\"value\">&nbsp;{{getTotalFee() | number:'1.0-6'}} tez</span>\n        </div>\n        <div class=\"flex-row item\" *ngIf=\"getTotalBurn(); let storageCost\">\n          <span class=\"flex-row key\">Max Storage Cost:</span>\n          <span class=\"value\">&nbsp;{{storageCost | number:'1.0-6'}} tez</span>\n        </div>\n      </div>\n      <div *ngIf=\"(externalReq && (!walletService.isLedgerWallet() || ledgerError))\" class=\"flex-column more-info-toggle\" [class.expanded]=\"advancedForm\">\n        <div class=\"flex-row item\" (click)=\"advancedForm = !advancedForm\">\n          <span class=\"value\">{{ 'Advanced' }}</span>\n          <div class=\"flex-row\"><img src=\"assets/img/chevron-down.svg\"></div>\n        </div>\n      </div>\n      <form *ngIf=\"advancedForm && (externalReq && (!walletService.isLedgerWallet() || ledgerError))\" autocomplete=\"off\" class=\"more-info-body\" [class.expanded]=\"advancedForm\">\n        <div class=\"flex-row\">\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Gas limit</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\"\n              (paste)=\"sanitizeNumberInput($event, 0, 'customGasLimit')\" [placeholder]=\"getTotalDefaultGas() || '0'\"\n              [value]=\"customGasLimit\">\n          </div>\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Fee</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" [placeholder]=\"getTotalFee() || '0'\" (paste)=\"sanitizeNumberInput($event, 6, 'customFee')\"\n              (input)=\"sanitizeNumberInput($event, 6, 'customFee')\" [value]=\"customFee\">\n          </div>\n        </div>\n        <div class=\"flex-row\">\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Storage limit</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text\" (input)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\"\n              (paste)=\"sanitizeNumberInput($event, 0, 'customStorageLimit')\" [placeholder]=\"getTotalDefaultStorage() || '0'\"\n              [value]=\"customStorageLimit\">\n          </div>\n          <div class=\"flex-column entity\">\n            <label class=\"label\">Max storage cost</label>\n            <input type=\"text\" inputmode=\"decimal\" class=\"text read-only\" [placeholder]=\"(getTotalBurn() || '0') + ' tez'\" tabindex=-1\n              readonly>\n          </div>\n        </div>\n      </form>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <span class=\"form-validity\" [class.error]=\"formInvalid !== 'Awaiting Request'\">{{ formInvalid }}</span>\n        <button *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\" class=\"confirm\"\n          [disabled]=\"!!formInvalid\" (click)=\"ledgerRetry()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <span *ngIf=\"this.pwdInvalid\" class=\"label danger\">{{ pwdInvalid }}</span>\n          <input *ngIf=\"walletService.isPwdWallet()\" [(ngModel)]=\"password\" autocomplete=\"current-password\"\n            placeholder=\"Password\" class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\"\n            (change)=\"this.pwdInvalid = ''\" (keydown.enter)='inject()'>\n          <button class=\"confirm\" (click)=\"inject()\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : confirmTitle}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { EventEmitter, Input, OnChanges, OnDestroy, Output } from '@angular/core';\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { ConfirmSwapRequest, FullyPreparedTransaction, PrepareRequest, LqdEntrypoints, PartiallyPreparedTransaction } from '../../misc/send/interfaces';\nimport { TokenService } from '../../../services/token/token.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DefaultTransactionParams, KeyPair } from '../../../interfaces';\nimport Big from 'big.js';\nimport { LedgerWallet, TorusWallet } from '../../../services/wallet/wallet';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { TokenBalancesService } from '../../../services/token-balances/token-balances.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Amount } from '../../../services/swap-liquidity/classes/Amount';\nimport assert from 'assert';\nimport { SwapLiquidityService } from '../../../services/swap-liquidity/swap-liquidity.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-swap-liquidity-confirm',\n  templateUrl: './swap-liquidity-confirm.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SwapLiquidityConfirmComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  readonly lqdTokenContract = 'KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo';\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  @Input() confirmRequest: PrepareRequest = null;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  activeAccount = null;\n  externalReq: boolean = false;\n  transactions: FullyPreparedTransaction[] = [];\n  semaphore = false;\n\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n\n  customFee = '';\n  customGasLimit = '';\n  customStorageLimit = '';\n\n  sendResponse = null;\n  ledgerError = '';\n  password = '';\n  pwdInvalid = '';\n  advancedForm = false;\n  name = 'swap-liquidity-confirm';\n\n  expectedLqd: number;\n  minimumLqd: number;\n  expectedXtz: number;\n  minimumXtz: number;\n  expectedToken: number;\n  minimumToken: number;\n  entrypoint: string;\n\n  confirmTitle = '';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private translate: TranslateService,\n    public tokenService: TokenService,\n    public walletService: WalletService,\n    private estimateService: EstimateService,\n    private operationService: OperationService,\n    private messageService: MessageService,\n    private coordinatorService: CoordinatorService,\n    private lookupService: LookupService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    public tezosDomainService: TezosDomainsService,\n    public tokenBalanceService: TokenBalancesService,\n    private subjectService: SubjectService,\n    private swapLiquidityService: SwapLiquidityService\n  ) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.confirmRequest?.currentValue) {\n      this.reset(true);\n      this.parseTransactions(changes.confirmRequest.currentValue);\n      this.init();\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      if (this.externalReq) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.closeModalAction('silent');\n          }\n        });\n      }\n    }\n  }\n  parseTransactions(csr: ConfirmSwapRequest): void {\n    let hasTrailingZeroApproval = false;\n    this.externalReq = csr.externalReq;\n    this.activeAccount = csr.account;\n    this.transactions = csr.transactions;\n    this.entrypoint = this.transactions.find((t) => Object.values(LqdEntrypoints).includes(t?.parameters?.entrypoint))?.parameters.entrypoint;\n    switch (this.entrypoint) {\n      case LqdEntrypoints.xtzToToken:\n        this.confirmTitle = 'Confirm Swap';\n        this.expectedXtz = parseFloat(this.transactions[0]?.amount);\n        this.minimumToken = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.calculateXtzToToken();\n        break;\n      case LqdEntrypoints.tokenToXtz:\n        this.confirmTitle = 'Confirm Swap';\n        const tokenToXtz = this.transactions.find((t) => t?.parameters?.entrypoint === LqdEntrypoints.tokenToXtz);\n        hasTrailingZeroApproval =\n          this.transactions[this.transactions.length - 1].parameters.entrypoint === 'approve' &&\n          this.transactions[this.transactions.length - 1]?.parameters?.value.args[1].int === '0';\n        this.expectedToken = new Amount({ rpcAmount: tokenToXtz?.parameters.value.args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.minimumXtz = new Amount({ rpcAmount: tokenToXtz?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 6 }).internalNormalised;\n        this.calculateTokenToXTZ();\n        break;\n      case LqdEntrypoints.addLiquidity:\n        this.confirmTitle = 'Add Liquidity';\n        const addLiquidity = this.transactions.find((t) => t?.parameters?.entrypoint === LqdEntrypoints.addLiquidity);\n        hasTrailingZeroApproval =\n          this.transactions[this.transactions.length - 1].parameters.entrypoint === 'approve' &&\n          this.transactions[this.transactions.length - 1]?.parameters?.value.args[1].int === '0';\n        this.expectedToken = new Amount({ rpcAmount: addLiquidity?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 8 }).internalNormalised;\n        this.expectedXtz = parseFloat(addLiquidity?.amount);\n        this.minimumLqd = new Amount({ rpcAmount: addLiquidity?.parameters.value.args[1].args[0].int, decimalPlaces: 0 }).internalNormalised;\n        this.calcAddLiquidity();\n        break;\n      case LqdEntrypoints.removeLiquidity:\n        this.confirmTitle = 'Remove Liquidity';\n        this.expectedLqd = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[0].int, decimalPlaces: 0 }).internalNormalised;\n        this.minimumXtz = new Amount({ rpcAmount: this.transactions[0]?.parameters.value.args[1].args[1].args[0].int, decimalPlaces: 6 }).internalNormalised;\n        this.minimumToken = new Amount({\n          rpcAmount: this.transactions[0]?.parameters.value.args[1].args[1].args[1].args[0].int,\n          decimalPlaces: 8\n        }).internalNormalised;\n        this.calcRemoveLiquidity();\n        break;\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  open(): void {\n    super.open();\n  }\n  async init(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      this.ledgerError = '?';\n    }\n  }\n  getTotalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): string {\n    if (this.customFee) {\n      return this.customFee;\n    }\n    let totalFee = Big(0);\n    for (const tx of this.transactions) {\n      totalFee = totalFee.add(tx.fee ? tx.fee : 0);\n    }\n    return totalFee.toFixed();\n  }\n  getTotalBurn(): number {\n    const totalActiveStorageLimit: number =\n      this.customStorageLimit !== '' && Number(this.customStorageLimit) ? Number(this.customStorageLimit) : this.getTotalDefaultStorage();\n    return Number(Big(totalActiveStorageLimit).times(this.estimateService.costPerByte).div(1000000).toString());\n  }\n  getTotalDefaultGas(): number {\n    let totalGas = Big(0);\n    for (const tx of this.transactions) {\n      totalGas = totalGas.plus(tx.gasLimit);\n    }\n    return totalGas.toFixed();\n  }\n  getTotalDefaultStorage(): number {\n    let totalStorage = Big(0);\n    for (const tx of this.transactions) {\n      totalStorage = totalStorage.plus(tx.storageLimit);\n    }\n    return totalStorage.toFixed();\n  }\n  totalAmount(): string {\n    let totalSent = Big(0);\n    for (const tx of this.transactions) {\n      totalSent = totalSent.add(tx.amount);\n    }\n    return totalSent.toFixed();\n  }\n  async ledgerRetry(): Promise<void> {\n    if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n      this.messageService.addError('Invalid fee');\n      return;\n    }\n    this.messageService.startSpinner('Preparing transaction...');\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      await this.sendTransaction(keys);\n    } else {\n      this.messageService.stopSpinner();\n    }\n  }\n  async inject(): Promise<void> {\n    if (this.semaphore) {\n      return;\n    }\n    if (this.walletService.isLedgerWallet()) {\n      await this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n      ModalComponent.currentModel.next({ name: '', data: null });\n    } else {\n      if (!this.inputValidationService.fee(this.getTotalFee().toString())) {\n        this.messageService.addError('Invalid fee');\n        return;\n      }\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing transaction...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        this.messageService.startSpinner('Sending transaction...');\n        await this.sendTransaction(keys);\n        ModalComponent.currentModel.next({ name: '', data: null });\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD'); // 'Wrong password!';\n        }\n      }\n    }\n  }\n  async sendTransaction(keys: KeyPair): Promise<void> {\n    const txs: FullyPreparedTransaction[] = this.opsWithCustomLimits();\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, txs, Number(this.getTotalFee()), keys, '').subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            if (ans.payload.opHash) {\n              await this.messageService.stopSpinner();\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                transactions: this.transactions,\n                opHash: ans.payload.opHash\n              };\n              await this.coordinatorService.boost(this.activeAccount.address, metadata);\n              for (const transaction of this.transactions) {\n                if (this.walletService.addressExists(transaction.destination)) {\n                  await this.coordinatorService.boost(transaction.destination);\n                }\n              }\n            } else if (this.walletService.wallet instanceof LedgerWallet) {\n              await this.requestLedgerSignature();\n              return;\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log('Error Message ', JSON.stringify(err));\n          if (this.walletService.isLedgerWallet()) {\n            this.messageService.addError('Failed to create transaction', 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.reset();\n        }\n      )\n    );\n  }\n  opsWithCustomLimits(): FullyPreparedTransaction[] {\n    let extraGas: number = 0;\n    let extraStorage: number = 0;\n    if (this.customGasLimit && this.customGasLimit !== this.getTotalDefaultGas().toString()) {\n      extraGas = Number(this.customGasLimit) - this.getTotalDefaultGas();\n    }\n    if (this.customStorageLimit && this.customStorageLimit !== this.getTotalDefaultStorage().toString()) {\n      extraStorage = Number(this.customStorageLimit) - this.getTotalDefaultStorage();\n    }\n    const extraGasPerOp: number = Math.round(extraGas / this.transactions.length);\n    const extraStoragePerOp: number = Math.round(extraStorage / this.transactions.length);\n    const txs: FullyPreparedTransaction[] = [];\n    for (let i = 0; i < this.transactions.length; i++) {\n      let gasLimit: string = extraGas ? (Number(this.transactions[i].gasLimit) + extraGasPerOp).toString() : this.transactions[i].gasLimit.toString();\n      let storageLimit = extraStorage\n        ? (Number(this.transactions[i].storageLimit) + extraStoragePerOp).toString()\n        : this.transactions[i].storageLimit.toString();\n      gasLimit = !(Number(gasLimit) < 0) ? gasLimit : '0';\n      storageLimit = !(Number(storageLimit) < 0) ? storageLimit : '0';\n      const fullyTx: FullyPreparedTransaction = {\n        ...this.transactions[i],\n        fee: i === this.transactions.length - 1 ? this.getTotalFee().toString() : '0',\n        gasLimit,\n        storageLimit\n      };\n      txs.push(fullyTx);\n    }\n    return txs;\n  }\n  sanitizeNumberInput(e, decimalPlaces: number, type = ''): void {\n    const exp = new RegExp(`^\\\\d{0,}(\\\\.\\\\d{0,${decimalPlaces}})?\\$`, 'g');\n    if (exp.test(e?.target?.value)) {\n      this[type] = e?.target?.value;\n    } else {\n      e.target.value = this[type];\n    }\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      await this.messageService.startSpinner('Waiting for Ledger signature...');\n      try {\n        const op = this.sendResponse.payload.unsignedOperation;\n        let signature = '';\n        if (op.length <= 2290) {\n          signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n        } else {\n          signature = await this.ledgerService.signHash(\n            this.operationService.ledgerPreHash('03' + op),\n            this.walletService.wallet.implicitAccounts[0].derivationPath\n          );\n        }\n        if (signature) {\n          const signedOp = op + signature;\n          this.sendResponse.payload.signedOperation = signedOp;\n          this.ledgerError = '';\n        } else {\n          this.ledgerError = 'Failed to sign transaction';\n        }\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(async (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount) {\n          const metadata = {\n            transactions: this.transactions,\n            opHash: ans.payload.opHash\n          };\n          await this.coordinatorService.boost(this.activeAccount.address, metadata);\n          if (this.walletService.addressExists(this.transactions[0].destination)) {\n            await this.coordinatorService.boost(this.transactions[0].destination);\n          }\n          this.operationResponse.emit(ans.payload.opHash);\n        } else {\n          console.log('sendResponse', JSON.stringify(this.sendResponse));\n          this.operationResponse.emit('broadcast_error');\n        }\n        console.log('ans: ' + JSON.stringify(ans));\n        this.reset();\n      })\n    );\n  }\n  closeModalAction(emit: string = null): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.operationResponse.emit(emit);\n    this.reset();\n  }\n  reset(init = false): void {\n    if (!init) {\n      this.confirmRequest = null;\n      if (this.syncSub) {\n        this.syncSub.unsubscribe();\n        this.syncSub = undefined;\n      }\n    }\n    this.transactions = [];\n    this.activeAccount = null;\n\n    this.customFee = '';\n    this.customGasLimit = '';\n    this.customStorageLimit = '';\n\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.password = '';\n    this.pwdInvalid = '';\n    this.advancedForm = false;\n    this.externalReq = false;\n\n    this.expectedLqd = undefined;\n    this.minimumLqd = undefined;\n    this.expectedXtz = undefined;\n    this.minimumXtz = undefined;\n    this.expectedToken = undefined;\n    this.minimumToken = undefined;\n  }\n  openInfoModal(title: string): void {\n    switch (title) {\n      case 'fee':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Expected fee for this transaction charged by the Tezos blockchain.',\n            title: 'Fee'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of XTZ to be received from the transaction.',\n            title: 'Minimum XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedxtz':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of XTZ to be received from the transaction.',\n            title: 'Expected XTZ'\n          },\n          forceClose: false\n        });\n        break;\n      case 'requiredtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'Required tzBTC needed for transaction.',\n            title: 'Required tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of tzBTC to be received from the transaction.',\n            title: 'Minimum tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedtoken':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of tzBTC to be received from the transaction.',\n            title: 'Expected tzBTC'\n          },\n          forceClose: false\n        });\n        break;\n      case 'minimumlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The minimum amount of SIRS to be received from the transaction.',\n            title: 'Minimum SIRS'\n          },\n          forceClose: false\n        });\n        break;\n      case 'expectedlqt':\n        ModalComponent.currentModel.next({\n          name: 'info',\n          data: {\n            message: 'The expected amount of SIRS to be received from the transaction.',\n            title: 'Expected SIRS'\n          },\n          forceClose: false\n        });\n        break;\n      default:\n        break;\n    }\n  }\n  async calculateXtzToToken(): Promise<void> {\n    this.semaphore = true;\n    const xtzToSell = new Amount({\n      normalisedAmount: this.expectedXtz,\n      decimalPlaces: 6\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateXtzToToken(xtzToSell, xtzPool, tokenPool, 0.005, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedToken = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calculateTokenToXTZ(): Promise<void> {\n    this.semaphore = true;\n    const tokenToSell = new Amount({\n      normalisedAmount: this.expectedToken,\n      decimalPlaces: 8\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateTokenToXTZ(tokenToSell, xtzPool, tokenPool, 0.005, this.swapLiquidityService.settings('liquidityBaking'));\n    this.expectedXtz = result.expected?.internalNormalised.toFixed(result.expected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calcAddLiquidity(): Promise<void> {\n    this.semaphore = true;\n    const toSell = new Amount({\n      normalisedAmount: this.expectedXtz,\n      decimalPlaces: 6\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateAddLiquidityXTZ(\n      toSell,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      0.005,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.expectedLqd = result.liquidityExpected?.internalNormalised.toFixed(result.liquidityExpected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n  async calcRemoveLiquidity(): Promise<void> {\n    this.semaphore = true;\n    const lqtToBurn = new Amount({\n      normalisedAmount: this.expectedLqd,\n      decimalPlaces: 0\n    });\n    await this.swapLiquidityService.fetchStorage(this.lqdContract);\n    const { xtzPool, tokenPool } = this.swapLiquidityService.createPoolAmounts();\n    const result = this.swapLiquidityService.calculateRemoveLiquidity(\n      lqtToBurn,\n      xtzPool,\n      tokenPool,\n      parseFloat(this.swapLiquidityService.storage[this.lqdContract]?.total_pool),\n      0.005,\n      this.swapLiquidityService.settings('liquidityBaking')\n    );\n    this.expectedXtz = result.xtzExpected?.internalNormalised.toFixed(result.xtzExpected?.decimalPlaces).toString();\n    this.expectedToken = result.tokenExpected?.internalNormalised.toFixed(result.tokenExpected?.decimalPlaces).toString();\n    this.semaphore = false;\n  }\n}\n","<app-prepare-send *ngIf=\"!embedded\" [prepareRequest]=\"prepareRequest\" (prepareResponse)=\"handlePrepareResponse($event)\"></app-prepare-send>\n<app-confirm-send [confirmRequest]=\"confirmRequest\" (operationResponse)=\"handleConfirmResponse($event)\"></app-confirm-send>\n<app-confirm-send-embed *ngIf=\"embedded\" [templateRequest]=\"templateRequest\" (isApproved)=\"handleTemplateApproval($event)\" [activeAccount]=\"activeAccount\"></app-confirm-send-embed>\n<app-swap-liquidity (prepareResponse)=\"handlePrepareResponse($event)\"></app-swap-liquidity>\n<app-swap-liquidity-confirm [confirmRequest]=\"confirmSwapLiquidityRequest\" (operationResponse)=\"handleConfirmResponse($event)\"></app-swap-liquidity-confirm>\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Account, EmbeddedTorusWallet } from '../../../services/wallet/wallet';\nimport {\n  PrepareRequest,\n  ConfirmRequest,\n  FullyPreparedTransaction,\n  PartiallyPreparedTransaction,\n  TemplateRequest,\n  TemplateFee,\n  ConfirmSwapRequest,\n  LqdEntrypoints\n} from './interfaces';\nimport { Template } from 'kukai-embed';\nimport { TokenService } from '../../../services/token/token.service';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { assertMichelsonData } from '@taquito/michel-codec';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport Big from 'big.js';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { ExternalRequest } from '../../../interfaces';\n\n@Component({\n  selector: 'app-send',\n  templateUrl: './send.component.html'\n})\nexport class SendComponent implements OnInit, OnChanges, OnDestroy {\n  LqdEntrypoints = LqdEntrypoints;\n  @Input() embedded: boolean;\n  activeAccount: Account;\n  @Input() tokenTransfer: string;\n  @Input() externalRequest: ExternalRequest;\n  @Input() template: Template;\n  @Output() operationResponse = new EventEmitter();\n  prepareRequest: PrepareRequest = null;\n  confirmRequest: ConfirmRequest = null;\n  templateRequest: TemplateRequest = null;\n  confirmSwapLiquidityRequest: ConfirmSwapRequest = null;\n  symbol: string;\n  readonly thresholdUSD = 50;\n  private subscriptions: Subscription = new Subscription();\n  private swapLiquidityEntrypoints = ['addLiquidity', 'removeLiquidity', 'xtzToToken', 'tokenToXtz'];\n\n  readonly lqdContract = 'KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5';\n  readonly tzBTCContract = 'KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn';\n\n  constructor(\n    public tokenService: TokenService,\n    private estimateService: EstimateService,\n    private messageService: MessageService,\n    private operationService: OperationService,\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private subjectService: SubjectService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.prepareTokenTransfer.subscribe((t) => {\n        this.prepareRequest = t;\n        this.tokenTransfer = t?.tokenTransfer;\n        this.activeAccount = t?.account;\n        this.symbol = t?.symbol;\n      })\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.externalRequest?.currentValue) {\n      this.activeAccount = changes.externalRequest.currentValue.selectedAccount;\n      this.checkOpReq(changes.externalRequest.currentValue.operationRequest);\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  private async checkOpReq(opReq: any): Promise<void | {\n    kind;\n    destination;\n    amount;\n    parameters;\n    gasRecommendation;\n    storageRecommendation;\n  }> {\n    if (opReq.operationDetails) {\n      opReq = opReq.operationDetails;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && !this.walletService.wallet?.sk && this.template?.silent) {\n      this.operationResponse.emit('invalid_parameters');\n      return;\n    }\n    if (opReq[0].kind === 'transaction') {\n      const txs: PartiallyPreparedTransaction[] = opReq.map((tx) => {\n        if (tx.kind !== 'transaction') {\n          throw new Error('Invalid op kind');\n        }\n        // identify token transfers\n        return {\n          kind: 'transaction',\n          destination: tx.destination,\n          amount: Big(tx.amount)\n            .div(10 ** 6)\n            .toFixed(), // handle token decimals here\n          parameters: tx.parameters ? tx.parameters : undefined,\n          gasRecommendation: tx.gas_limit ? tx.gas_limit : undefined,\n          storageRecommendation: tx.storage_limit ? tx.storage_limit : undefined\n        };\n      });\n      if (this.validParameters(txs)) {\n        if (txs.length === 1 && !this.template) {\n          const tokenTransferObj: any = this.getTokenTransferObj(txs[0]);\n          if (tokenTransferObj) {\n            const asset = this.tokenService.getAsset(tokenTransferObj.tokenId);\n            txs[0].amount = Big(tokenTransferObj.amount)\n              .div(10 ** asset.decimals)\n              .toFixed();\n            txs[0].destination = tokenTransferObj.to;\n            this.tokenTransfer = tokenTransferObj.tokenId;\n            delete txs[0].parameters;\n          } else {\n            this.tokenTransfer = '';\n          }\n          this.simulateRequest(txs, tokenTransferObj?.tokenId);\n        } else {\n          this.tokenTransfer = '';\n          this.simulateRequest(txs, '');\n        }\n      } else {\n        this.operationResponse.emit('invalid_parameters');\n      }\n    }\n  }\n  getTokenTransferObj(op: any): null | { tokenId: string; to: string; amount: string } {\n    if (op.parameters && this.tokenService.isKnownTokenContract(op.destination)) {\n      const tokenTransfer = this.operationService.parseTokenTransfer(op);\n      if (tokenTransfer && this.tokenService.isKnownTokenId(tokenTransfer?.tokenId)) {\n        return tokenTransfer;\n      }\n    }\n    return null;\n  }\n  validParameters(txs: PartiallyPreparedTransaction[]): boolean {\n    for (const tx of txs) {\n      if (tx.parameters) {\n        try {\n          if (!tx.parameters.value || !tx.parameters.entrypoint) {\n            throw new Error('entrypoint and value expected');\n          }\n          assertMichelsonData(tx.parameters.value);\n        } catch (e) {\n          this.messageService.addError(`Invalid parameters: ${e.message}`);\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  async simulateRequest(\n    txs: PartiallyPreparedTransaction[],\n    tokenTransfer: string\n  ): Promise<void | {\n    tx: PartiallyPreparedTransaction;\n    fee;\n    gasLimit;\n    storageLimit;\n  }> {\n    if (this.template) {\n      if (this.template.silent) {\n        console.log('Silent signing');\n      } else {\n        this.templateRequest = {\n          template: this.template,\n          partialOps: txs\n        };\n      }\n    } else {\n      await this.messageService.startSpinner('Preparing transaction...');\n    }\n    try {\n      await this.estimateService.preLoadData(this.activeAccount.pkh, this.activeAccount.pk);\n      const callback = (res) => {\n        if (res) {\n          if (res.error) {\n            this.messageService.addError(`Simulation error: ${res.error.message}`, 0);\n            this.operationResponse.emit({\n              error: 'invalid_parameters',\n              errorMessage: res.error.message\n            });\n          } else {\n            const fullyPrepared: FullyPreparedTransaction[] = txs.map((tx, i) => {\n              return {\n                ...tx,\n                fee: i === txs.length - 1 ? res.fee : '0',\n                gasLimit: res.customLimits[i].gasLimit.toString(),\n                storageLimit: res.customLimits[i].storageLimit.toString()\n              };\n            });\n            if (this.template) {\n              const fee = this.getTemplateFee(fullyPrepared);\n              console.log('Use template', this.template);\n              if (!this.template.silent) {\n                this.templateRequest = {\n                  template: this.template,\n                  partialOps: txs,\n                  ops: fullyPrepared,\n                  fee\n                };\n              } else {\n                let amount = Big(0);\n                for (const op of fullyPrepared) {\n                  amount = Big(op.amount).plus(amount);\n                }\n                amount = Big(fee.total).plus(amount);\n                amount = amount.times(Big(CONSTANTS.MAINNET && this.walletService.wallet?.XTZrate ? this.walletService.wallet.XTZrate : 1));\n                if (amount.gt(Big(this.thresholdUSD))) {\n                  this.operationResponse.emit('exceeded_threshold');\n                } else {\n                  this.silentInject(fullyPrepared);\n                }\n              }\n            } else {\n              this.confirmTransactions(fullyPrepared, true);\n            }\n          }\n        } else {\n          throw new Error('No simulation result');\n        }\n      };\n      await this.estimateService.estimateTransactions(JSON.parse(JSON.stringify(txs)), this.activeAccount.pkh, tokenTransfer, callback);\n    } catch (e) {\n      console.error(e);\n      this.operationResponse.emit('unknown_error');\n    } finally {\n      await this.messageService.stopSpinner();\n    }\n  }\n  prepareTransaction(): void {\n    this.prepareRequest = {\n      account: this.activeAccount,\n      tokenTransfer: this.tokenTransfer,\n      symbol: this.symbol\n    };\n  }\n  confirmTransactions(transactions: FullyPreparedTransaction[], externalReq: boolean): void {\n    if (this.isLbReq(transactions)) {\n      if (!externalReq) {\n        this.activeAccount = this.subjectService.activeAccount.getValue();\n      }\n      this.confirmSwapLiquidityRequest = {\n        account: this.activeAccount,\n        transactions,\n        externalReq\n      };\n    } else {\n      this.confirmRequest = {\n        account: this.activeAccount,\n        tokenTransfer: this.tokenTransfer,\n        transactions,\n        externalReq\n      };\n    }\n  }\n  private isLbReq(transactions: FullyPreparedTransaction[]): boolean {\n    if (\n      transactions.length === 1 &&\n      transactions[0].destination === this.lqdContract &&\n      ['xtzToToken', 'removeLiquidity'].includes(transactions[0].parameters?.entrypoint)\n    ) {\n      // xtzToToken or removeLiquidity\n      return true;\n    } else if (transactions[0].destination === this.tzBTCContract && transactions[0].parameters?.entrypoint === 'approve') {\n      // can be tokenToXtz or addLiquidity\n      if (transactions.length === 3 && transactions[0].parameters?.value?.args[1]?.int !== '0') {\n        console.log('prepend 0 approve');\n        // normalize\n        transactions.unshift({\n          ...transactions[0],\n          kind: 'transaction',\n          amount: '0',\n          destination: this.tzBTCContract,\n          parameters: this.operationService.getRevokeAmountParameters(this.lqdContract)\n        });\n      }\n      if (\n        transactions.length === 4 &&\n        new Set([transactions[0].destination, transactions[1].destination, transactions[3].destination, this.tzBTCContract]).size === 1 &&\n        new Set([transactions[0].parameters?.entrypoint, transactions[1].parameters?.entrypoint, transactions[3].parameters?.entrypoint, 'approve']).size ===\n          1 &&\n        new Set([\n          transactions[0].parameters?.value?.args[0]?.string,\n          transactions[1].parameters?.value?.args[0]?.string,\n          transactions[3].parameters?.value?.args[0]?.string,\n          this.lqdContract\n        ]).size === 1 &&\n        transactions[2].destination === this.lqdContract &&\n        ['tokenToXtz', 'addLiquidity'].includes(transactions[2].parameters?.entrypoint)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  handlePrepareResponse(preparedTransactions: FullyPreparedTransaction[]): void {\n    this.prepareRequest = null;\n    if (preparedTransactions) {\n      console.log('PrepareResponse', JSON.stringify(preparedTransactions));\n      this.confirmTransactions(preparedTransactions, false);\n    }\n  }\n  handleConfirmResponse(opHash: string): void {\n    this.confirmRequest = null;\n    this.confirmSwapLiquidityRequest = null;\n    this.operationResponse.emit(opHash);\n  }\n  handleTemplateApproval(ops: FullyPreparedTransaction[]): void {\n    if (ops) {\n      this.silentInject(ops);\n    } else {\n      this.operationResponse.emit(null);\n    }\n    this.template = null;\n  }\n  private getTemplateFee(ops: FullyPreparedTransaction[]): TemplateFee {\n    let network = new Big(0);\n    let storageLimit = new Big(0);\n    for (const op of ops) {\n      network = network.plus(op.fee);\n      storageLimit = storageLimit.plus(op.storageLimit);\n    }\n    let storage = storageLimit.times(this.estimateService.costPerByte).div('1000000');\n    const total = network.plus(storage).toFixed();\n    network = network.toFixed();\n    storage = storage.toFixed();\n    return { network, storage, total };\n  }\n  async silentInject(ops: FullyPreparedTransaction[]): Promise<void> {\n    if (!this.walletService.isEmbeddedTorusWallet()) {\n      this.operationResponse.emit('UNSUPPORTED_WALLET_TYPE');\n      return;\n    }\n    for (const op of ops) {\n      // Limit to transactions for now\n      if (op.kind !== 'transaction') {\n        this.operationResponse.emit('UNSUPPORTED_KIND');\n        break;\n      }\n    }\n    if (!this.template.silent) {\n      this.messageService.startSpinner('Sending transaction...');\n    }\n    let keys;\n    try {\n      keys = await this.walletService.getKeys('', this.activeAccount.pkh);\n    } catch {\n      this.messageService.stopSpinner();\n    }\n    if (!keys) {\n      this.operationResponse.emit('FAILED_TO_SIGN');\n      return;\n    }\n    this.subscriptions.add(\n      this.operationService.transfer(this.activeAccount.address, ops, Number(ops[ops.length - 1].fee), keys, '').subscribe(\n        async (ans: any) => {\n          if (ans.success === true) {\n            console.log('Transaction successful ', ans);\n            await this.messageService.stopSpinner();\n            this.operationResponse.emit(ans.payload.opHash);\n            const metadata = {\n              transactions: ops,\n              opHash: ans.payload.opHash\n            };\n            await this.coordinatorService.boost(this.activeAccount.address, metadata);\n            for (const transaction of ops) {\n              if (this.walletService.addressExists(transaction.destination)) {\n                await this.coordinatorService.boost(transaction.destination);\n              }\n            }\n          } else {\n            await this.messageService.stopSpinner();\n            console.log('Transaction error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit({\n              error: 'broadcast_error',\n              errorMessage: ans.payload.msg\n            });\n          }\n        },\n        (err) => {\n          this.messageService.stopSpinner();\n          console.log(err);\n          this.operationResponse.emit('UNKNOWN_ERROR');\n        }\n      )\n    );\n  }\n}\n","<div *ngIf=\"req\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"cancel()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">{{req.template.action || 'Confirmation'}}</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column confirm-send\">\n        <div *ngIf=\"req.template.descriptions[0].text\" class=\"asset-name\">{{ req.template.descriptions[0].text }}</div>\n        <div class=\"flex-row transaction\">\n          <div class=\"flex-column left\">\n            <span *ngIf=\"req.template.descriptions[1].text\" class=\"default-text\">{{ req.template.descriptions[1].text }}</span>\n            <span *ngIf=\"req.template.descriptions[2]\" class=\"default-text amount\">{{ req.template.descriptions[2].text }}</span>\n            <span *ngIf=\"req.template.descriptions[3]\" class=\"default-text\">{{ req.template.descriptions[3].text }}</span>\n            <span class=\"default-text\">From:</span>\n            <div class=\"flex-row torus\" *ngIf=\"this.walletService.wallet.verifier\">\n              <img class=\"icon\" src=\"../../../assets/img/{{ this.walletService.wallet.verifier }}-logo.svg\">\n              <div class=\"flex-column\">\n                <span class=\"name\">{{ this.walletService.wallet.displayName() }}</span><span class=\"address\">{{\n                  req.activeAccount.address }}</span>\n              </div>\n            </div>\n            <span *ngIf=\"!this.walletService.wallet.verifier\" class=\"default-text single-to\">{{ req.activeAccount.address\n              }}</span>\n          </div>\n          <div *ngIf=\"req.template.descriptions[0]?.imgUrl\" class=\"flex-column right\">\n            <img class=\"token-image\" [src]=\"req.template.descriptions[0]?.imgUrl\" />\n          </div>\n        </div>\n      <br />\n      <div class=\"seperator\"></div>\n      <div class=\"flex-column bottom\">\n        <div class=\"flex-row default-text more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"showMore = !showMore\">{{ !showMore ?\n          'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n        <div *ngIf=\"showMore && req.payload\" class=\"info\">\n          <textarea style=\"width: 100%; padding: 0.5rem\" rows=10>{{req.payload}}</textarea>\n        </div>\n      </div>\n      <br />\n      <div class=\"flex-row buttons\">\n        <button (click)=\"approve()\">\n          <ng-container *ngIf=\"req.template.button; else defaultButtonText\">\n            {{req.template.button}}</ng-container>\n          <ng-template #defaultButtonText>Send</ng-template>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { WalletService } from '../../../../../services/wallet/wallet.service';\n\n@Component({\n  selector: 'app-sign-expr-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['../../confirm-send/confirm-send.component.scss']\n})\nexport class ExprTemplateComponent implements OnInit, OnChanges {\n  @Input() req = null;\n  @Output() isApproved = new EventEmitter();\n  constructor(public walletService: WalletService) {}\n\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {}\n  cancel() {\n    this.isApproved.emit(false);\n  }\n  approve() {\n    this.isApproved.emit(true);\n  }\n}\n","<div *ngIf=\"signRequest && payload && !template\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <img class=\"flex-row button close\" (click)=\"rejectSigning()\" src=\"../../../../assets/img/add-minterpop.svg\" />\n      <h1 class=\"title\">{{ signRequest?.title ? signRequest.title : 'Sign Expression' }}</h1>\n    </div>\n    <div class=\"flex-column sign-expr\">\n      <div class=\"seperator\"></div>\n      <p class=\"previewAttention\">{{ description ? description : 'An application has requested you sign an\n        expression.' }}</p>\n        <div class=\"seperator\"></div>\n      <div class=\"flex-row more-info\" [class]=\"showMore ? 'open' : ''\" (click)=\"toggle()\">{{ !showMore ? 'Show More' : 'Show Less' }}<img src=\"../../../../assets/img/dropdown-minterpop.svg\"></div>\n      <div *ngIf=\"showMore\" class=\"info\">\n        <textarea rows=\"6\" readonly>{{ payload }}</textarea>\n      </div>\n      <div class=\"flex-column bottom\">\n        <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n        <button class=\"purple confirm\" (click)=\"sign()\">SIGN</button>\n        <div class=\"footer\">\n          <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<app-sign-expr-template *ngIf=\"signRequest && payload && template\" [req]=\"{payload: payload, template: template, activeAccount: activeAccount}\" (isApproved)=\"handleTemplateApproval($event)\"></app-sign-expr-template>","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { OperationService } from '../../../../services/operation/operation.service';\nimport { emitMicheline } from '@taquito/michel-codec';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { InputValidationService } from '../../../../services/input-validation/input-validation.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-sign-expr-embed',\n  templateUrl: './sign-expr.component.html',\n  styleUrls: ['./sign-expr.component.scss']\n})\nexport class SignExprEmbedComponent implements OnInit, OnChanges {\n  @Input() signRequest: any;\n  @Input() activeAccount: Account;\n  @Output() signResponse = new EventEmitter();\n  syncSub: Subscription;\n  password = '';\n  pwdInvalid = '';\n  payload = '';\n  template = null;\n  description = null;\n  isMessage = false;\n  showMore = false;\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    public translate: TranslateService,\n    private operationService: OperationService,\n    private inputValidationService: InputValidationService\n  ) {}\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.signRequest) {\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.template = this.signRequest.ui;\n      this.isMessage = this.inputValidationService.isMessageSigning(this.signRequest.payload);\n      const value = valueDecoder(Uint8ArrayConsumer.fromHexString(this.signRequest.payload.slice(2)));\n      const payload = emitMicheline(value, {\n        indent: '  ',\n        newline: '\\n'\n      });\n      this.payload = this.isMessage ? value.string : payload;\n    }\n  }\n  async sign() {\n    const pwd = this.password;\n    this.password = '';\n    await this.messageService.startSpinner(`Signing ${this.isMessage ? 'message' : 'payload'}...`);\n    let keys;\n    try {\n      keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n    } catch (e) {\n      console.warn(e);\n      this.messageService.stopSpinner();\n    }\n    if (keys) {\n      this.pwdInvalid = '';\n      try {\n        const signature = this.operationService.sign(this.signRequest.payload, keys.sk).edsig;\n        this.acceptSigning(signature);\n      } catch (e) {\n        this.pwdInvalid = 'Signing failed';\n        console.warn(e);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n    } else {\n      this.messageService.stopSpinner();\n      if (this.walletService.isTorusWallet()) {\n        this.pwdInvalid = `Authorization failed`;\n      } else {\n        this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD');\n      }\n    }\n  }\n  rejectSigning() {\n    this.closeModal();\n    this.signResponse.emit(null);\n  }\n  acceptSigning(signature: string) {\n    this.messageService.addSuccess(this.isMessage ? 'Message signed!' : 'Payload signed!');\n    this.closeModal();\n    this.signResponse.emit(signature);\n  }\n  closeModal() {\n    // restore body scrollbar\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n    this.clear();\n  }\n  clear() {\n    this.password = '';\n    this.pwdInvalid = '';\n    this.payload = '';\n    this.isMessage = false;\n    this.template = null;\n  }\n  toggle() {\n    this.showMore = !this.showMore;\n  }\n  handleTemplateApproval(t) {\n    if (t) {\n      this.sign();\n    } else {\n      this.rejectSigning();\n    }\n  }\n}\n","<h3>Processing Request...</h3>\n<br />\n<h1 class=\"high-demand\">High Demand for Items!</h1>\n<br />\n<p class=\"desc\">Your request is being processed. Wait times vary.\n</p>\n<br />\n<br />\n<h1>Estimated Wait Time:</h1>\n<h1 class=\"flex-row time\">\n  <span *ngIf=\"hours !== '00'\"class=\"flex-column hours\">\n    <h1>{{ hours }}</h1>\n    <h5>Hours</h5>\n  </span>\n  <span class=\"flex-column minutes\">\n    <h1>{{ minutes }}</h1>\n    <h5>Minutes</h5>\n  </span>\n  <span class=\"flex-column seconds\">\n    <h1>{{ seconds }}</h1>\n    <h5>Seconds</h5>\n  </span>\n</h1>\n<br />\n<br />\n<br />\n<h2 class=\"desc\">At the end of the wait time, you will be asked to re-authenticate to access your account.</h2>","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-queue-embed',\n  templateUrl: './queue.component.html',\n  styleUrls: ['./queue.component.scss']\n})\nexport class QueueEmbedComponent implements OnInit {\n  @Input('queueTime') queueTime = 0;\n  hours = '0';\n  minutes = '0';\n  seconds = '0';\n  constructor() {}\n  ngOnInit(): void {\n    this.updateTime();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.queueTime.currentValue !== changes.queueTime.previousValue) {\n      this.updateTime();\n    }\n  }\n\n  updateTime() {\n    let sec: any = this.queueTime;\n    let hrs: any = Math.floor(sec / 3600);\n    sec -= hrs * 3600;\n    let min: any = Math.floor(sec / 60);\n    sec -= min * 60;\n    sec = sec.toString();\n    min = min.toString();\n    hrs = hrs.toString();\n\n    this.hours = hrs.length < 2 ? '0' + hrs : hrs;\n    this.minutes = min.length < 2 ? '0' + min : min;\n    this.seconds = sec.length < 2 ? '0' + sec : sec;\n  }\n}\n","<app-queue-embed *ngIf=\"this.queueTimeVisible > 0\" [queueTime]=\"this.queueTimeVisible\"></app-queue-embed>\n<div *ngIf=\"this.queueTime === 0 && this.queueTimeVisible === 0\" class=\"flex-column direct-auth-login-alt\" [class.manutd]=\"template === 'manutd'\">\n  <div class=\"flex-row header\">\n    <img (click)=\"abort()\" class=\"abort\" src=\"../../../assets/img/x-alt.svg\">\n    <img *ngIf=\"loginConfig.showBackButton\" (click)=\"back()\" class=\"back\" src=\"../../../assets/img/back-arrow.svg\">\n  </div>\n  <h1 *ngIf=\"this.loginConfig?.customPrio !== 'high'\">{{ template === 'manutd' ? 'CHOOSE SOCIAL PROVIDER' : 'Choose Sign In Type' }}</h1>\n  <h1 *ngIf=\"this.loginConfig?.customPrio === 'high'\">Please re-authenticate</h1>\n  <div class=\"flex-row-wrap login-options\" *ngIf=\"torusService && torusService.verifierMapKeys\">\n    <ng-container *ngFor=\"let key of loginOptions; let idx = index\">\n      <div *ngIf=\"loginConfig.buttonsVertically === true || (loginConfig.wideButtons && loginConfig.wideButtons[idx] === true); else narrow\" class=\"flex-row option wide\" [class.facebook]=\"key === 'facebook'\" [class.twitter]=\"key === 'twitter'\" [class.reddit]=\"key === 'reddit'\"\n        (click)=\"login(key)\">\n        <img [src]=\"key === 'facebook' ? '../../../../assets/img/torus-login/' + key + '-white.svg' : '../../../../assets/img/torus-login/' + key + '-color.svg'\" width=\"24\" /><span>Sign in with {{ key |\n          titlecase }}</span>\n      </div>\n      <ng-template #narrow>\n        <div class=\"flex-row option narrow\"\n        (click)=\"login(key)\">\n        <img [src]=\"'../../../../assets/img/torus-login/' + key + '-color.svg'\" width=\"24\" />\n      </div>\n      </ng-template>\n    </ng-container>\n  </div>\n  <div class=\"footer\">\n    <span>Powered by</span><img class=\"logo\" src=\"../../../../assets/img/header-logo-grey.svg\">\n  </div>\n</div>","import { EventEmitter, Input, Output, SimpleChanges, Component, OnInit, OnChanges, AfterViewInit, ElementRef, HostListener } from '@angular/core';\nimport { LoginConfig, TypeOfLogin, LoginPrio } from 'kukai-embed';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TorusService } from '../../../../services/torus/torus.service';\nimport { EmbeddedTorusWallet } from '../../../../services/wallet/wallet';\nimport { CONSTANTS } from '../../../../../environments/environment';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit, OnChanges, AfterViewInit {\n  constructor(\n    private messageService: MessageService,\n    public torusService: TorusService,\n    private walletService: WalletService,\n    private subjectService: SubjectService,\n    private elRef: ElementRef\n  ) {}\n  @Input() dismiss: Boolean;\n  @Input() loginConfig: LoginConfig;\n  @Output() loginResponse = new EventEmitter();\n  template = 'default';\n  loginOptions = [];\n  queueTime: number = 0;\n  queueTimeVisible: number = 0;\n  queueLen = 0;\n  queueLenInterval: any;\n  statusCounter: number = 0;\n  queueInterval: NodeJS.Timeout;\n  readonly queueEndpoint = 'https://q.tcinfra.net/rpc';\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((origin) => {\n      if (origin && origin.indexOf('gap') !== -1) {\n        this.template = 'gap';\n      } else if (origin && origin.indexOf('interpop') !== -1) {\n        // (m)interpop\n        this.template = 'minterpop';\n      } else if (origin && (origin.indexOf('manutd') !== -1 || origin.indexOf('concordia') !== -1)) {\n        this.template = 'manutd';\n      } else {\n        this.template = 'default';\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n    this.viewportCheck();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.loginConfig) {\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        this.queueLen = 0;\n        this.queueLenInterval = setInterval(async () => {\n          this.queueLen = await this.getQueueLen();\n          console.log('Queue length (s)', this.queueLen);\n        }, 5000);\n        this.getQueueLen().then((res) => {\n          this.queueLen = res;\n          console.log('Queue length (s)', this.queueLen);\n        });\n      }\n    }\n    if (changes?.dismiss?.currentValue === true) {\n      this.messageService.stopSpinner().then(() => this.loginResponse.emit('dismiss'));\n    }\n    if (changes?.loginConfig?.currentValue) {\n      if (this.loginConfig.customPrio === 'high') {\n        if (this.walletService.wallet && this.walletService.wallet instanceof EmbeddedTorusWallet) {\n          if (this.walletService.wallet?.verifier) {\n            this.loginConfig.loginOptions = [this.walletService.wallet.verifier as TypeOfLogin];\n          }\n          this.startQueue();\n        }\n      }\n      if (this.loginConfig.loginOptions?.length > 0) {\n        this.loginOptions = [];\n        for (const loginOption of this.loginConfig.loginOptions) {\n          if (this.torusService.verifierMapKeys.includes(loginOption)) {\n            this.loginOptions.push(loginOption);\n          }\n        }\n      } else {\n        this.loginOptions = this.torusService.verifierMapKeys;\n      }\n    }\n  }\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.viewportCheck();\n  }\n  viewportCheck(): void {\n    if (screen.width < 650) {\n      this.elRef.nativeElement.classList.add('viewport-override-0');\n    } else {\n      this.elRef.nativeElement.classList.remove('viewport-override-0');\n    }\n    if (screen.width < 481) {\n      this.elRef.nativeElement.classList.add('viewport-override-1');\n    } else {\n      this.elRef.nativeElement.classList.remove('viewport-override-1');\n    }\n  }\n  async startQueue() {\n    // set high prio\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n      this.queueTime = -1;\n      this.setHighPrio(this.walletService.wallet.verifier, this.walletService.wallet.id);\n    }\n    this.queueTimeVisible = -1;\n    this.messageService.startSpinner();\n    this.queueInterval = setInterval(() => {\n      if (this.queueTimeVisible > 1 || (this.queueTimeVisible === 1 && this.queueTime === 0)) {\n        this.queueTimeVisible -= 1;\n      }\n      if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n        let timeBetweenChecks = 300;\n        if (this.queueTimeVisible < 4) {\n          timeBetweenChecks = 2;\n        } else if (this.queueTimeVisible < 60) {\n          timeBetweenChecks = 15;\n        } else if (this.queueTimeVisible < 1800) {\n          timeBetweenChecks = 60;\n        }\n        this.statusCounter = ++this.statusCounter % timeBetweenChecks;\n        if (this.statusCounter === 0) {\n          this.checkQueue(this.walletService.wallet.verifier, this.walletService.wallet.id);\n        }\n      }\n      if (this.queueTimeVisible <= 0 && this.queueTime === 0) {\n        this.stopQueue();\n      }\n    }, 1000);\n  }\n  stopQueue() {\n    if (this.queueInterval) {\n      clearInterval(this.queueInterval);\n    }\n    if (this.queueLenInterval) {\n      clearInterval(this.queueLenInterval);\n    }\n    this.queueTime = 0;\n    this.queueTimeVisible = 0;\n    this.queueLen = 0;\n    this.statusCounter = 0;\n    this.messageService.stopSpinner();\n  }\n  async abort() {\n    this.elRef.nativeElement.querySelector('.direct-auth-login-alt').style.animation = 'transition-down 0.25s';\n    await this.sleep(230);\n    this.loginResponse.emit(null);\n    this.stopQueue();\n  }\n  back() {\n    this.loginResponse.emit(undefined);\n    this.stopQueue();\n  }\n  async login(typeOfLogin: string) {\n    try {\n      this.messageService.startSpinner('Loading wallet...');\n      let loginData;\n      const len: number = this.queueLen;\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, '', len > 5 ? 1 : 0, true);\n      } else if (this.loginConfig?.customPrio === LoginPrio.LowFast) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, '', 2, true);\n      } else if (this.loginConfig?.customPrio === LoginPrio.High && this.walletService.wallet instanceof EmbeddedTorusWallet) {\n        loginData = await this.torusService.loginTorus(typeOfLogin, this.walletService.wallet.id);\n      } else {\n        loginData = await this.torusService.loginTorus(typeOfLogin);\n      }\n      if (!loginData?.keyPair) {\n        throw new Error('Login failed');\n      }\n      if (this.loginConfig?.customPrio === LoginPrio.Low) {\n        // loginData.keyPair = { pk: '', pkh: '' };\n        if (loginData?.keyPair?.pk === '') {\n          this.setLowPrio(loginData.userInfo);\n        } else {\n          if (len > 5) {\n            this.skipQueue(loginData.userInfo.typeOfLogin, loginData.userInfo.verifierId, loginData.keyPair.pkh);\n          } else {\n            if (loginData?.userInfo?.preexistingPkh) {\n              this.setLowPrio(loginData.userInfo);\n            } else {\n              this.skipQueue(loginData.userInfo.typeOfLogin, loginData.userInfo.verifierId, loginData?.keyPair?.pkh || loginData?.userInfo?.preexistingPkh);\n            }\n          }\n        }\n      } else if (this.loginConfig?.customPrio === LoginPrio.LowFast) {\n        if (loginData?.userInfo?.preexistingPkh) {\n          this.skipQueue(loginData.userInfo.typeOfLogin, loginData.userInfo.verifierId, loginData?.keyPair?.pkh || loginData?.userInfo?.preexistingPkh);\n        } else {\n          this.setLowPrio(loginData.userInfo);\n        }\n      }\n      if (this.dismiss === null) {\n        await this.messageService.stopSpinner();\n      }\n      this.elRef.nativeElement.querySelector('.direct-auth-login-alt').style.animation = 'transition-down 0.25s';\n      await this.sleep(230);\n      this.loginResponse.emit(loginData);\n      this.stopQueue();\n    } catch {\n      await this.messageService.stopSpinner();\n    }\n  }\n  async setLowPrio(userInfo: any) {\n    let { typeOfLogin, verifierId } = userInfo;\n    const res = await this.post(this.queueEndpoint, {\n      action: 'add_low_priority',\n      network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n      verifier: typeOfLogin,\n      identity: verifierId,\n      groups: [CONSTANTS.NETWORK, this.subjectService.origin?.value]\n    });\n    console.log('setLowPrio', res);\n    return res;\n  }\n  async setHighPrio(typeOfLogin: string, verifierId: string) {\n    const res = await this.post(this.queueEndpoint, {\n      action: 'add_high_priority',\n      network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n      verifier: typeOfLogin,\n      identity: verifierId,\n      groups: [CONSTANTS.NETWORK, this.subjectService.origin?.value]\n    });\n    console.log('setHighPrio', res);\n    this.updateQueue(res);\n    return res;\n  }\n  async checkQueue(typeOfLogin: string, verifierId: string) {\n    const res = await this.post(\n      this.queueEndpoint,\n      {\n        action: 'fetch',\n        network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n        verifier: typeOfLogin,\n        identity: verifierId\n      },\n      0\n    );\n    console.log('checkQueue', res);\n    this.updateQueue(res);\n    return res;\n  }\n  async skipQueue(typeOfLogin: string, verifierId: string, pkh: string) {\n    const res = await this.post(this.queueEndpoint, {\n      action: 'report',\n      network: CONSTANTS.MAINNET ? 'mainnet' : 'testnet',\n      verifier: typeOfLogin,\n      identity: verifierId,\n      groups: [CONSTANTS.NETWORK, this.subjectService.origin?.value],\n      metadata: { pkh }\n    });\n    console.log('skipQueue', res);\n    return res;\n  }\n  updateQueue(res: any) {\n    if (res?.EstimatedTimeSeconds !== -1) {\n      if (res.EstimatedTimeSeconds === 0 && res.Status === 'error') {\n        console.error('FailedToResolve');\n        this.abort();\n        return;\n      }\n      if (this.queueTimeVisible === -1) {\n        this.messageService.stopSpinner();\n      }\n      this.queueTime = this.queueTimeVisible = res.EstimatedTimeSeconds;\n    }\n  }\n  async getQueueLen(): Promise<number> {\n    const res = await this.post(this.queueEndpoint, {\n      action: 'len'\n    });\n    return Number(res.EstimatedTimeSeconds);\n  }\n  async get(url: string, triesLeft = 3) {\n    return await fetch(url)\n      .then(async (res) => {\n        return await res.json();\n      })\n      .catch(async (e) => {\n        if (triesLeft > 0) {\n          return await this.get(url, --triesLeft);\n        } else {\n          throw e;\n        }\n      });\n  }\n  async post(url: string, body: any, triesLeft = 3) {\n    return await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n      .then(async (res) => {\n        return await res.json();\n      })\n      .catch(async (e) => {\n        if (triesLeft > 0) {\n          return await this.post(url, body, --triesLeft);\n        } else {\n          throw e;\n        }\n      });\n  }\n  private async sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { TorusWallet, ImplicitAccount } from '../../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['../../../../../scss/components/views/embedded/card/card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() activeAccount: ImplicitAccount;\n\n  constructor(private walletService: WalletService) {}\n\n  ngOnInit(): void {}\n\n  displayName(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      return '';\n    }\n  }\n\n  verifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return '';\n    }\n  }\n}\n","<div class=\"container\">\n    <div>\n        <img src=\"../../../assets/img/torus-login/{{verifier()}}-color.svg\" width=\"24\">\n        <h4>{{displayName()}}</h4>\n        <p>{{activeAccount.pkh}}</p>\n    </div>\n    <div>\n        <h4>BALANCE:</h4>\n        <h3>{{activeAccount.balanceXTZ || 0}} XTZ</h3>\n    </div>\n</div>\n","<app-signin *ngIf=\"login\" [dismiss]=\"dismiss\" [loginConfig]=\"loginConfig\" (loginResponse)=\"loginResponse($event)\"></app-signin>\n<app-send [embedded]=\"true\" *ngIf=\"externalRequest\" (operationResponse)=\"operationResponse($event)\" [headless]=true [externalRequest]=externalRequest\n    [template]=\"template\" [activeAccount]=activeAccount></app-send>\n<app-sign-expr-embed *ngIf=\"signRequest && activeAccount\" [signRequest]=\"signRequest\" [activeAccount]=activeAccount (signResponse)=\"signResponse($event)\"></app-sign-expr-embed>\n<app-card *ngIf=\"activeAccount && !blockCard && (!externalRequest && !login && !signRequest)\" [activeAccount]=activeAccount></app-card>\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { TorusService } from '../../../services/torus/torus.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { ImportService } from '../../../services/import/import.service';\nimport { KeyPair, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { PartialTezosTransactionOperation } from '@airgap/beacon-sdk';\nimport { EmbeddedTorusWallet, ImplicitAccount } from '../../../services/wallet/wallet';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { utils, common } from '@tezos-core-tools/crypto-utils';\nimport { ActivatedRoute } from '@angular/router';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { ActivityService } from '../../../services/activity/activity.service';\nimport { EmbeddedAuthService } from '../../../services/embedded-auth/embedded-auth.service';\nimport {\n  RequestTypes,\n  ResponseTypes,\n  RequestMessage,\n  ResponseMessage,\n  OperationResponse,\n  LogoutRequest,\n  TrackRequest,\n  LoginRequest,\n  OperationRequest,\n  AuthRequest,\n  CardRequest,\n  CardResponse,\n  SignExprRequest,\n  SignExprResponse,\n  LoginConfig,\n  LoginPrio\n} from 'kukai-embed';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nenum Permission {\n  LOGIN = 'login',\n  OPERATIONS = 'operations',\n  MICHELINE = 'micheline',\n  MICHELINE_SILENT = 'micheline_silent'\n}\ninterface Permissions {\n  origins: string[];\n  permissions: {\n    [Permission.LOGIN]: boolean;\n    [Permission.OPERATIONS]: boolean;\n    [Permission.MICHELINE]: boolean;\n    [Permission.MICHELINE_SILENT]?: boolean;\n  };\n}\n@Component({\n  selector: 'app-embedded',\n  templateUrl: './embedded.component.html',\n  styleUrls: ['../../../../scss/components/views/embedded/embedded.component.scss']\n})\nexport class EmbeddedComponent implements OnInit {\n  readonly permissionMatrix: Record<string, Permissions> = {\n    brio: {\n      origins: ['https://playwithbrio.com', 'https://www.playwithbrio.com', 'https://production.playwithbrio.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    minterpop: {\n      origins: ['https://minterpop.com', '*.minterpop.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    interpop: {\n      origins: ['https://interpopcomics.com', 'https://www.interpopcomics.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    humanMachine: {\n      origins: ['https://human-machine.io'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    ubisoft: {\n      origins: ['*.ubisoft.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: true\n      }\n    },\n    gap: {\n      origins: ['*.gap.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true,\n        micheline_silent: true\n      }\n    },\n    manutd: {\n      origins: ['*.manutd.com', '*.trili.tech'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    lexus: {\n      origins: ['https://ldai.lexusdesign.in'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    blockspace: {\n      origins: ['https://block-space.app'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    evian: {\n      origins: ['https://nft.evian.com', 'https://happy85.marieclaire.fr', 'https://claim.renaissance.land'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    souvie: {\n      origins: ['https://souvie.dev'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    tzstaging: {\n      origins: ['*.tzstaging.com', 'https://tzstaging.com', 'https://tezos.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    studioexception: {\n      origins: ['https://studioexception.eu'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: true\n      }\n    },\n    cleantree: {\n      origins: ['https://cleantree.artshelp.net'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    vitality: {\n      origins: ['*.vitality.gg'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    kanvas: {\n      origins: ['*.tzconnect.berlin', 'https://metavert.sowvital.com'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    proofof: {\n      origins: ['https://proofofperformance.xyz', 'https://pop-six.vercel.app'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    emergents: {\n      origins: ['https://play.emergentstcg.com'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    thegoodsociety: {\n      origins: ['https://www.thegoodsociety.org'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    circa: {\n      origins: ['https://circa.art', 'https://nft.circa.art'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    mooncakes: {\n      origins: ['https://mooncakes.fun', 'https://www.mooncakes.fun', 'https://df97ay9gblnsi.cloudfront.net'],\n      permissions: {\n        login: true,\n        operations: true,\n        micheline: true\n      }\n    },\n    truename: {\n      origins: ['https://truename.me'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    verticalcrypto: {\n      origins: ['https://verticalcrypto.art', '*.verticalcrypto.art'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    },\n    playrecord: {\n      origins: ['https://claim.playrecordmint.xyz'],\n      permissions: {\n        login: true,\n        operations: false,\n        micheline: false\n      }\n    }\n  };\n  constructor(\n    private torusService: TorusService,\n    private importService: ImportService,\n    private walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private route: ActivatedRoute,\n    private lookupService: LookupService,\n    private activityService: ActivityService,\n    private embeddedAuthService: EmbeddedAuthService,\n    private subjectService: SubjectService,\n    private inputValidationService: InputValidationService,\n    private elRef: ElementRef\n  ) {}\n  pendingOps: string[] = [];\n  ophashSubscription: Subscription;\n  origin = '';\n  login = false;\n  dismiss: Boolean = null;\n  blockCard = true;\n  activeAccount: ImplicitAccount = null;\n  template = null;\n  externalRequest: ExternalRequest = null;\n  signRequest = null;\n  loginConfig: LoginConfig = null;\n  queueMode: LoginPrio = null;\n  currentInstanceId = '';\n\n  ngOnInit(): void {\n    document.body.style.background = 'none';\n    this.torusService.initTorus();\n    if (window.addEventListener) {\n      window.addEventListener('message', this.handleRequest, false);\n    } else {\n      (window as any).attachEvent('onmessage', this.handleRequest);\n    }\n    console.log('icabod is connected...');\n    this.route.queryParams\n      .filter((params) => params.instanceId)\n      .subscribe((params) => {\n        this.walletService.loadStoredWallet(params.instanceId);\n        this.currentInstanceId = params.instanceId;\n        if (this.walletService.wallet instanceof EmbeddedTorusWallet) {\n          this.origin = this.walletService.wallet.origin;\n          this.subjectService.origin.next(this.origin);\n          if (this.walletService.wallet?.implicitAccounts[0]) {\n            this.activeAccount = this.walletService.wallet.implicitAccounts[0];\n            // this.coordinatorService.startXTZ();\n            // this.coordinatorService.start(this.activeAccount.address, this.coordinatorService.defaultDelayActivity);\n            // this.subscribeToConfirmedOps();\n          }\n        }\n      });\n    window.parent.window.postMessage(JSON.stringify({ type: ResponseTypes.initComplete, failed: false }), this.origin || '*');\n  }\n  handleRequest = (evt) => {\n    try {\n      const data: RequestMessage = JSON.parse(evt.data);\n      if (this.hasPermission(null, evt.origin)) {\n        console.log(`Received ${evt.data} from ${evt.origin}`);\n        if (data && data.type) {\n          this.origin = evt.origin;\n          this.subjectService.origin.next(this.origin);\n          switch (data.type) {\n            case RequestTypes.loginRequest:\n              this.handleLoginRequest(data);\n              break;\n            case RequestTypes.operationRequest:\n              this.handleOperationRequest(data);\n              break;\n            case RequestTypes.signExprRequest:\n              this.handleSignExprRequest(data);\n              break;\n            case RequestTypes.trackRequest:\n              this.handleTrackRequest(data);\n              break;\n            case RequestTypes.logoutRequest:\n              this.handleLogoutRequest(data);\n              break;\n            case RequestTypes.authRequest:\n              this.handleAuthRequest(data);\n              break;\n            case RequestTypes.cardRequest:\n              this.handleCardRequest(data);\n              break;\n            case RequestTypes.dismissRequest:\n              this.dismiss = true;\n              break;\n            default:\n              console.warn('Unknown request', data);\n          }\n        }\n      } else if (data && data.type) {\n        console.error(`Invalid origin (${evt.origin})`);\n      }\n    } catch {}\n  };\n  private handleSignExprRequest(req: SignExprRequest) {\n    if (!this.hasPermission(Permission.MICHELINE)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.signExprResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.implicitAccounts[0] && req.expr) {\n      if (req.expr.slice(0, 2) === '0x') {\n        req.expr = req.expr.slice(2);\n      }\n      if (this.inputValidationService.isMichelineExpr(req.expr)) {\n        if (req?.ui?.silent && this.hasPermission(Permission.MICHELINE_SILENT)) {\n          this.embeddedAuthService\n            .signExprSilent(req.expr)\n            .then((signature) => {\n              this.signResponse(signature);\n            })\n            .catch((e) => {\n              this.sendResponse({\n                type: ResponseTypes.signExprResponse,\n                failed: true,\n                error: e.message ? e.message : 'UNKNOWN_ERROR'\n              });\n            });\n        } else {\n          this.signRequest = {\n            payload: req.expr,\n            ui: this.normalizeTemplate(req?.ui)\n          };\n        }\n      } else {\n        this.sendResponse({\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'INVALID_PARAMETERS'\n        });\n      }\n    } else {\n      let response: ResponseMessage;\n      if (!(this.walletService.wallet instanceof EmbeddedTorusWallet) || !this.walletService.wallet.implicitAccounts[0]) {\n        response = {\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'NO_WALLET_FOUND'\n        };\n      } else {\n        response = {\n          type: ResponseTypes.signExprResponse,\n          failed: true,\n          error: 'INVALID_PARAMETERS'\n        };\n      }\n      this.sendResponse(response);\n    }\n  }\n  public signResponse(response: any) {\n    this.signRequest = null;\n    let resp: SignExprResponse;\n    if (response && typeof response === 'string' && response.length > 95 && response.slice(0, 5) === 'spsig') {\n      resp = {\n        type: ResponseTypes.signExprResponse,\n        failed: false,\n        signature: response\n      };\n    } else {\n      resp = {\n        type: ResponseTypes.signExprResponse,\n        failed: true,\n        error: 'ABORTED_BY_USER'\n      };\n    }\n    this.sendResponse(resp);\n  }\n  private handleLoginRequest(req: LoginRequest) {\n    if (!this.hasPermission(Permission.LOGIN)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    this.queueMode = req?.config.customPrio ? req?.config.customPrio : null;\n    if (this.activeAccount || ([LoginPrio.Low, LoginPrio.LowFast].includes(this.queueMode) && this.walletService.wallet)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'ALREADY_LOGGED_IN'\n      };\n      this.sendResponse(response);\n    } else if (this.queueMode === 'high' && !this.walletService.wallet) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_WALLET_FOUND'\n      };\n      this.sendResponse(response);\n    } else {\n      if (req?.config?.customSpinnerDismissal) {\n        this.dismiss = false;\n      }\n      if (req?.config) {\n        this.loginConfig = req.config;\n      }\n      this.login = true;\n    }\n  }\n  private handleOperationRequest(req: OperationRequest) {\n    if (!this.hasPermission(Permission.OPERATIONS)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.implicitAccounts[0] && req.operations) {\n      if (this.isValidOperation(req.operations)) {\n        this.template = req.ui ? this.normalizeTemplate(req.ui) : null;\n        this.externalRequest = { operationRequest: req.operations, selectedAccount: this.activeAccount };\n      } else {\n        this.externalRequest = null;\n        this.sendResponse({\n          type: ResponseTypes.operationResponse,\n          failed: true,\n          error: 'INVALID_TRANSACTION'\n        });\n      }\n    } else {\n      this.sendResponse({\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'NO_WALLET_FOUND'\n      });\n    }\n  }\n  private async handleTrackRequest(req: TrackRequest) {\n    this.pendingOps.push(req.opHash);\n  }\n  private handleLogoutRequest(req: LogoutRequest) {\n    if (this.walletService.wallet instanceof EmbeddedTorusWallet && this.walletService.wallet.instanceId) {\n      const instanceId = this.walletService.wallet.instanceId;\n      this.logout(instanceId);\n      this.sendResponse({\n        type: ResponseTypes.logoutResponse,\n        instanceId,\n        failed: false\n      });\n    } else {\n      this.noWalletError();\n    }\n  }\n  async loginResponse(loginData: any) {\n    let response: ResponseMessage;\n    let toImport: any;\n    if (loginData === 'dismiss') {\n      this.dismiss = null;\n      response = {\n        type: ResponseTypes.dismissResponse,\n        failed: false\n      };\n    } else if (loginData) {\n      const { keyPair, userInfo } = loginData;\n      const { idToken = '', accessToken = '', long_lived_token = '', ...filteredUserInfo } = { ...userInfo };\n      let instanceId;\n      if (\n        this.walletService.wallet &&\n        this.walletService.wallet instanceof EmbeddedTorusWallet &&\n        keyPair?.pk &&\n        !this.walletService.wallet.implicitAccounts[0] &&\n        this.currentInstanceId\n      ) {\n        instanceId = this.currentInstanceId;\n      } else {\n        // 160 bits of entropy, base58 encoded\n        instanceId = this.generateInstanceId();\n      }\n      response = {\n        type: ResponseTypes.loginResponse,\n        instanceId,\n        pk: keyPair.pk,\n        pkh: keyPair.pkh,\n        userData: filteredUserInfo,\n        failed: false\n      };\n      toImport = { keyPair, userInfo, instanceId };\n      if (this.loginConfig?.authParams) {\n        try {\n          response.authResponse = await this.embeddedAuthService.authenticate(this.loginConfig.authParams, this.origin, keyPair);\n        } catch (e) {\n          console.error(e);\n          response = {\n            type: ResponseTypes.loginResponse,\n            failed: true,\n            error: e?.message\n          };\n          toImport = undefined;\n        }\n      }\n    } else {\n      this.dismiss = null;\n      response = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: loginData === null ? 'ABORTED_BY_USER' : 'BACKED_BY_USER'\n      };\n    }\n    const loginConfig = this.loginConfig;\n    if (this.dismiss === null) {\n      this.login = false;\n      this.loginConfig = null;\n    }\n    setTimeout(() => {\n      this.sendResponse(response);\n      if (toImport) {\n        if (loginConfig?.strictAuth) {\n          toImport.keyPair.sk = '';\n        }\n        this.importAccount(toImport.keyPair, toImport.userInfo, toImport.instanceId);\n      }\n    }, 10);\n  }\n  async handleAuthRequest(authReq: AuthRequest) {\n    if (!this.hasPermission(Permission.LOGIN)) {\n      const response: ResponseMessage = {\n        type: ResponseTypes.loginResponse,\n        failed: true,\n        error: 'NO_PERMISSION'\n      };\n      this.sendResponse(response);\n      return;\n    }\n    this.embeddedAuthService\n      .authenticate(authReq, this.origin)\n      .then((authResponse: any) => {\n        this.sendResponse({\n          type: ResponseTypes.authResponse,\n          failed: false,\n          message: authResponse.message,\n          signature: authResponse.signature\n        });\n      })\n      .catch((e: Error) => {\n        this.sendResponse({\n          type: ResponseTypes.authResponse,\n          failed: true,\n          error: e.message ? e.message : 'UNKNOWN_ERROR'\n        });\n      });\n  }\n  handleCardRequest(req: CardRequest) {\n    this.blockCard = !req.show;\n    const response: CardResponse = {\n      type: ResponseTypes.cardResponse,\n      failed: false\n    };\n    this.sendResponse(response);\n  }\n  noWalletError() {\n    this.sendResponse({\n      type: ResponseTypes.logoutResponse,\n      failed: true,\n      error: 'NO_WALLET_FOUND'\n    });\n  }\n  operationResponse(opHash: any) {\n    let response: OperationResponse;\n    let errorMessage = '';\n    if (opHash?.error && opHash.errorMessage) {\n      errorMessage = opHash.errorMessage;\n      opHash = opHash.error;\n    }\n    if (!opHash) {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'ABORTED_BY_USER'\n      };\n    } else if (opHash === 'exceeded_threshold') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'EXEEDED_THRESHOLD'\n      };\n    } else if (opHash === 'broadcast_error') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'BROADCAST_ERROR',\n        errorMessage\n      };\n    } else if (opHash === 'invalid_parameters') {\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'INVALID_PARAMETERS',\n        errorMessage\n      };\n    } else if (utils.validOperationHash(opHash)) {\n      response = {\n        type: ResponseTypes.operationResponse,\n        opHash,\n        failed: false\n      };\n    } else {\n      console.warn('Unknown operation response:', opHash);\n      response = {\n        type: ResponseTypes.operationResponse,\n        failed: true,\n        error: 'UNKNOWN_ERROR'\n      };\n    }\n    this.template = null;\n    this.externalRequest = null;\n    setTimeout(() => {\n      this.sendResponse(response);\n    }, 0);\n  }\n  private sendResponse(resp: ResponseMessage) {\n    window.parent.window.postMessage(JSON.stringify(resp), this.origin);\n  }\n  private async importAccount(keyPair: KeyPair, userInfo: any, instanceId: string) {\n    if (keyPair?.pk) {\n      await this.importService\n        .importWalletFromPk(\n          keyPair.pk,\n          '',\n          {\n            verifier: userInfo.typeOfLogin,\n            id: userInfo.verifierId,\n            name: userInfo.name,\n            embedded: true,\n            origin: this.origin\n          },\n          keyPair.sk,\n          instanceId\n        )\n        .then((success: boolean) => {\n          if (success) {\n            this.activeAccount = this.walletService.wallet.implicitAccounts[0];\n            // this.coordinatorService.startXTZ();\n            // this.coordinatorService.start(this.activeAccount.address, this.coordinatorService.defaultDelayActivity);\n            // this.subscribeToConfirmedOps();\n          }\n        });\n    } else if (keyPair?.pk === '') {\n      // login without keys\n      await this.importService.importWalletFromPk(\n        keyPair.pk,\n        '',\n        {\n          verifier: userInfo.typeOfLogin,\n          id: userInfo.verifierId,\n          name: userInfo.name,\n          embedded: true,\n          origin: this.origin\n        },\n        '',\n        instanceId\n      );\n    }\n    this.currentInstanceId = instanceId;\n  }\n  private isValidOperation(transactions: PartialTezosTransactionOperation[]): boolean {\n    try {\n      transactions.forEach((tx) => {\n        if (tx.kind !== 'transaction' || typeof tx.amount !== 'string' || !utils.validAddress(tx.destination)) {\n          throw new Error('Invalid transaction');\n        }\n      });\n    } catch (e) {\n      console.warn(e);\n      return false;\n    }\n    return true;\n  }\n  private generateInstanceId(): string {\n    return common.base58encode(utils.mnemonicToEntropy(utils.generateMnemonic(15)), new Uint8Array([]));\n  }\n  private logout(instanceId: string) {\n    this.subjectService.logout.next(true);\n    this.walletService.clearWallet(instanceId);\n    this.lookupService.clear();\n    this.activeAccount = null;\n    if (this.ophashSubscription) {\n      this.ophashSubscription.unsubscribe();\n    }\n    this.currentInstanceId = '';\n  }\n  subscribeToConfirmedOps() {\n    this.ophashSubscription = this.subjectService.confirmedOp.subscribe((opHash) => {\n      if (this.pendingOps.includes(opHash)) {\n        this.sendResponse({\n          type: ResponseTypes.trackResponse,\n          opHash: opHash,\n          failed: false\n        });\n        for (let i = 0; i < this.pendingOps.length; i++) {\n          if (this.pendingOps[i] === opHash) {\n            this.pendingOps.splice(i, 1);\n          }\n        }\n      }\n    });\n  }\n  private normalizeTemplate(template: any): any {\n    if (template?.descriptions) {\n      for (let i in template.descriptions) {\n        if (typeof template.descriptions[i] === 'string') {\n          template.descriptions[i] = {\n            text: template.descriptions[i]\n          };\n        }\n      }\n    }\n    return template;\n  }\n  private hasPermission(permission: Permission, origin: string = this.origin): boolean {\n    if (!CONSTANTS.MAINNET) {\n      return true;\n    }\n    try {\n      const keys = Object.keys(this.permissionMatrix);\n      for (const key of keys) {\n        for (const allowedOrigin of this.permissionMatrix[key].origins) {\n          if (allowedOrigin.startsWith('*.') ? origin.endsWith(allowedOrigin.slice(1)) : origin === allowedOrigin) {\n            return permission ? this.permissionMatrix[key].permissions[permission] : !!this.permissionMatrix[key].permissions;\n          }\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    return false;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Receive Address</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column receive\">\n      <label class=\"value\">Your account QR code</label>\n      <canvas id='canvas'></canvas>\n      <span class=\"flex-row value\">{{ activeAddress }}<img class=\"copy\" src=\"../../../assets/img/copy-icon.svg\"\n          (click)=\"copy()\" /></span>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as QRCode from 'qrcode';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\nimport copy from 'copy-to-clipboard';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-receive',\n  templateUrl: './receive.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class ReceiveComponent extends ModalComponent implements OnInit {\n  activeAddress: string;\n  showReceiveFormat = {\n    btnOutline: true,\n    dropdownItem: false\n  };\n\n  name = 'receive';\n\n  constructor(private messageService: MessageService, private translate: TranslateService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  open(data: any): void {\n    this.activeAddress = data.address;\n    setTimeout(() => {\n      this.getQR();\n    }, 100);\n    super.open(data);\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n  getQR(): void {\n    QRCode.toCanvas(\n      document.getElementById('canvas'),\n      this.activeAddress,\n      {\n        errorCorrectionLevel: 'H',\n        scaleFactor: 2,\n        color: { light: '#FCFCFC' }\n      },\n      function (err, canvas) {\n        if (err) {\n          throw err;\n        }\n      }\n    );\n  }\n  copy(): void {\n    copy(this.activeAddress);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAddress + ' ' + copyToClipboard, 5);\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\" src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Add New Account</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column new-account\">\n      <div class=\"label\">\n        ENTER YOUR PASSWORD TO CONFIRM\n      </div>\n      <input #pwdInput [(ngModel)]=\"password\" class=\"text password\" autocomplete=\"current-password\"\n        placeholder=\"Password\" type=\"password\" (input)=\"this.errorMsg = ''\" (change)=\"this.errorMsg = ''\" (keydown.enter)=\"!messageService.spinnerOn ? addPkh() : null\">\n      <span *ngIf=\"this.errorMsg\" class=\"danger margin\">{{ this.errorMsg }}</span>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? addPkh() : null\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { HdWallet } from '../../../services/wallet/wallet';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { ModalComponent } from '../modal.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-implicit',\n  templateUrl: './new-implicit.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class NewImplicitComponent extends ModalComponent implements OnInit {\n  @ViewChild('pwdInput') pwdView: ElementRef;\n  password = '';\n  errorMsg = '';\n  name = 'new-implicit';\n  constructor(\n    public walletService: WalletService,\n    private coordinatorService: CoordinatorService,\n    private messageService: MessageService,\n    private router: Router\n  ) {\n    super();\n  }\n  openModal(): void {\n    if (this.openPkhSpot()) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      this.clear();\n      setTimeout(() => {\n        const inputElem = this.pwdView.nativeElement as HTMLInputElement;\n        inputElem.focus();\n      }, 100);\n    } else {\n      this.messageService.addWarning(\"Can't create additional accounts when an unused account already exists\");\n    }\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clear();\n  }\n  ngOnInit(): void {}\n  async addPkh(): Promise<void> {\n    if (this.openPkhSpot()) {\n      this.messageService.startSpinner('Creating new account');\n      const pkh = await this.walletService.incrementAccountIndex(this.password);\n      if (pkh) {\n        this.coordinatorService.start(pkh, this.coordinatorService.defaultDelayActivity);\n        this.closeModal();\n        this.router.navigateByUrl(`/account/${pkh}`);\n      } else {\n        this.errorMsg = 'Wrong password!';\n      }\n      this.messageService.stopSpinner();\n    } else {\n      console.log('blocked!');\n      this.messageService.addError(\"Can't create additional accounts when an unused account already exists\");\n    }\n  }\n  openPkhSpot(): boolean {\n    const balance: number = this.walletService.wallet.implicitAccounts[this.walletService.wallet.implicitAccounts.length - 1].balanceXTZ;\n    const tokens = this.walletService.wallet.implicitAccounts[this.walletService.wallet.implicitAccounts.length - 1].tokens?.length;\n    return this.walletService.wallet instanceof HdWallet && ((balance && balance > 0) || (tokens && tokens > 0));\n  }\n  clear(): void {\n    this.password = '';\n    this.errorMsg = '';\n  }\n}\n","<div class=\"flex-row dropdown pr-request\" [class.expanded]=\"isOpen\" [id]=\"ecmpId\">\n  <div class=\"flex-row currentAddress\" (click)=\"toggleDropdown()\"><img\n      *ngIf=\"!!getUsername(selection?.address)\" class=\"logo\" src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span\n      class=\"address\">{{\n      getUsername(selection?.address) || \"&nbsp;&nbsp;&nbsp;&nbsp;\" + selection?.address }}</span><img\n      *ngIf=\"['', 'domain'].includes(getVerifier())\" class=\"button icon-db\"\n      src=\"../../../../assets/img/down-arrow.svg\" />\n  </div>\n  <div class=\"flex-column dropdown-content\">\n    <ng-container *ngFor=\"let account of options\">\n      <div class=\"option\" [class.selected]=\"account?.address === current?.address\"\n        (click)=\"selection = account; toggleDropdown()\">\n        <ng-container *ngIf=\"getUsername(account?.address)\">\n          <div class=\"flex-row alias\"><img class=\"logo\"\n              src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span>{{\n              getUsername(account?.address) }}</span></div>\n          <br /><span>{{\n            account?.address }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"!getUsername(account?.address)\">{{ account?.address }}</ng-container>\n      </div>\n    </ng-container>\n  </div>\n</div>","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { DropdownComponent } from '../dropdown.component';\n\n@Component({\n  selector: 'app-ui-dropdown-permission-request',\n  templateUrl: './permission-request.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/account-dropdown.component.scss']\n})\nexport class PermissionRequestDropdownComponent extends DropdownComponent implements OnInit, OnChanges {\n  constructor(public router: Router, public lookupService: LookupService, private walletService: WalletService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.selection = this.current;\n    this.list = this.options;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options && changes.options.currentValue !== changes.options.previousValue) {\n      this.list = this.options;\n    }\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({\n        address: address || this.current?.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n\n  toggleDropdown(): void {\n    this.dropdownResponse.emit(this.selection);\n    this.isOpen = !this.isOpen;\n  }\n}\n","<div *ngIf=\"permissionRequest\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"rejectPermissions()\"><img class=\"x\" src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ permissionRequest.appMetadata.name }}</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column permission-request\">\n      <ng-container *ngIf=\"cachedIcon(permissionRequest); let cachedIcon;\"><app-asset class=\"app-icon\" [assets]=\"{ displayAsset: cachedIcon }\"></app-asset></ng-container>\n      <h4>Permissions requests:</h4>\n      <div class=\"flex-row-wrap requests\">\n        <span class=\"flex-row\" *ngFor=\"let scope of permissionRequest.scopes\">{{ scopeToText(scope) }}</span>\n      </div>\n      <h6>Apply To Account:</h6>\n      <app-ui-dropdown-permission-request [options]=\"accounts\" [current]=\"preSelectedAccount\" (dropdownResponse)=\"selectedAccount = $event\" style=\"width: 100%;align-self: center;\"></app-ui-dropdown-permission-request>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"blue confirm\" (click)=\"grantPermissions()\">Approve</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, EventEmitter, Output, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Router } from '@angular/router';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport { Account } from '../../../services/wallet/wallet';\n\n@Component({\n  selector: 'app-permission-request',\n  templateUrl: './permission-request.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class PermissionRequestComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() permissionRequest: any;\n  @Input() activeAccount;\n  @Output() permissionResponse = new EventEmitter();\n  syncSub: Subscription;\n  preSelectedAccount: Account;\n  selectedAccount: Account;\n  accounts: Account[];\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    private subjectService: SubjectService,\n    private router: Router,\n    private beaconService: BeaconService\n  ) {}\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.preSelectedAccount = this.selectedAccount = this.activeAccount?.address?.startsWith('tz')\n        ? this.activeAccount\n        : this.walletService.wallet.implicitAccounts[0];\n    }\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(async () => {\n        this.accounts = this.walletService.wallet?.getImplicitAccounts();\n      })\n    );\n    this.accounts = this.walletService.wallet?.getImplicitAccounts();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.activeAccount) {\n      this.preSelectedAccount = this.selectedAccount = this.activeAccount?.address?.startsWith('tz')\n        ? this.activeAccount\n        : this.walletService.wallet.implicitAccounts[0];\n    }\n    if (this.permissionRequest) {\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.messageService.removeBeaconMsg(true);\n      this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n        if (response) {\n          this.permissionResponse.emit('silent');\n          this.reset();\n        }\n      });\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  rejectPermissions(): void {\n    this.permissionResponse.emit(null);\n    this.reset();\n  }\n  grantPermissions(): void {\n    const pk = this.selectedAccount?.pk;\n    this.permissionResponse.emit(pk);\n    this.reset();\n    this.router.navigate([`/account/${this.selectedAccount.address}`]);\n  }\n  reset(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflow = '';\n    this.permissionRequest = null;\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n  scopeToText(scope: string): string {\n    if (scope === 'sign') {\n      return 'Request other signing';\n    } else if (scope === 'operation_request') {\n      return 'Request operation signing';\n    }\n    return scope;\n  }\n  cachedIcon(permissionRequest): string {\n    if (permissionRequest) {\n      for (const app of this.beaconService.peers) {\n        if (permissionRequest.senderId === app.senderId) {\n          if (app.cachedIcon) {\n            return app.cachedIcon;\n          }\n        }\n      }\n    }\n    return '';\n  }\n}\n","<div *ngIf=\"signRequest\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"rejectSigning()\"><img class=\"x\" src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">\n        <ng-container *ngIf=\"!isDeku && isMessage\">Sign Message</ng-container>\n        <ng-container *ngIf=\"!isDeku && !isMessage\">Sign Expression</ng-container>\n        <ng-container *ngIf=\"isDeku\">Sign Deku Operation</ng-container>\n      </h1>\n    </div>\n    <div class=\"flex-column sign-expr\">\n      <p class=\"previewAttention\">An application has requested you sign a<ng-container *ngIf=\"!isDeku && isMessage\"> message</ng-container><ng-container *ngIf=\"!isDeku && !isMessage\">n expression</ng-container><ng-container *ngIf=\"isDeku\"> Deku operation</ng-container></p>\n      <p *ngIf=\"!isDeku && !isMessage\" class=\"previewAttention warning\">Warning! Only sign if you understand the expression or trust the source.</p>\n      <p *ngIf=\"isDeku\" class=\"previewAttention warning\">[Layer 2]</p>\n      <app-ui-toggle-advanced *ngIf=\"!isMessage\" style=\"width: 13rem; margin-bottom: 2rem;\" [default]=\"false\" (stateChange)=\"advancedForm = $event\"></app-ui-toggle-advanced>\n      <textarea *ngIf=\"advancedForm || isMessage\" rows=\"10\" readonly>{{ payload }}</textarea>\n      <div class=\"seperator\" style =\"left: 0\"></div>\n      <div class=\"flex-column bottom\">\n        <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n        <input *ngIf=\"walletService.isPwdWallet()\" [(ngModel)]=\"password\"\n          autocomplete=\"current-password\" placeholder=\"Password\" class=\"text password\" type=\"password\"\n          (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\" (keydown.enter)='!messageService.spinnerOn ? sign(): null'>\n        <button class=\"purple confirm\" (click)=\"!messageService.spinnerOn ? sign(): null\" [disabled]=\"walletService.isWatchWallet()\">\n          {{ walletService.isLedgerWallet() ? 'Sign with Ledger' : 'Sign'}}</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Account } from '../../../services/wallet/wallet';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { emitMicheline } from '@taquito/michel-codec';\nimport { valueDecoder } from '@taquito/local-forging/dist/lib/michelson/codec';\nimport { Uint8ArrayConsumer } from '@taquito/local-forging/dist/lib/uint8array-consumer';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-sign-expr',\n  templateUrl: './sign-expr.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class SignExprComponent extends ModalComponent implements OnInit, OnChanges {\n  @Input() signRequest: any;\n  @Input() activeAccount: Account;\n  @Output() signResponse = new EventEmitter();\n  syncSub: Subscription;\n  password = '';\n  pwdInvalid = '';\n  payload = '';\n  isMessage = false;\n  isDeku = false;\n  advancedForm = false;\n  name = 'sign-expr';\n  constructor(\n    public walletService: WalletService,\n    private messageService: MessageService,\n    public translate: TranslateService,\n    private operationService: OperationService,\n    private ledgerService: LedgerService,\n    private inputValidationService: InputValidationService,\n    private subjectService: SubjectService\n  ) {\n    super();\n  }\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.signRequest) {\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n      this.isDeku = this.signRequest.payload.slice(0, 2) === '80';\n      if (!this.isDeku) {\n        console.log('not deku');\n        this.isMessage = this.inputValidationService.isMessageSigning(this.signRequest.payload);\n        const value = valueDecoder(Uint8ArrayConsumer.fromHexString(this.signRequest.payload.slice(2)));\n        const payload = emitMicheline(value, {\n          indent: '  ',\n          newline: '\\n'\n        });\n        this.payload = this.isMessage ? value.string : payload;\n      } else {\n        console.log('pay', this.payload);\n        this.payload = `0x${this.signRequest.payload}`;\n      }\n      this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n        if (response) {\n          this.signResponse.emit('silent');\n          this.closeModal();\n        }\n      });\n    }\n  }\n  async sign(): Promise<void> {\n    if (this.walletService.isLedgerWallet()) {\n      this.requestLedgerSignature();\n    } else {\n      const pwd = this.password;\n      this.password = '';\n      await this.messageService.startSpinner(`Signing ${this.isMessage ? 'message' : 'payload'}...`);\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n      } catch (e) {\n        console.warn(e);\n        this.messageService.stopSpinner();\n      }\n      if (keys) {\n        this.pwdInvalid = '';\n        try {\n          const signature = this.operationService.sign(this.signRequest.payload, keys.sk).edsig;\n          this.acceptSigning(signature);\n        } catch (e) {\n          this.pwdInvalid = 'Signing failed';\n          console.warn(e);\n        } finally {\n          this.messageService.stopSpinner();\n        }\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.isTorusWallet()) {\n          this.pwdInvalid = `Authorization failed`;\n        } else {\n          this.pwdInvalid = this.translate.instant('SENDCOMPONENT.WRONGPASSWORD');\n        }\n      }\n    }\n  }\n  async requestLedgerSignature(): Promise<void> {\n    await this.messageService.startSpinner('Waiting for Ledger signature...');\n    try {\n      const payload = this.signRequest.payload;\n      let signature = '';\n      if (payload.length <= 2290) {\n        signature = await this.ledgerService.signOperation(payload, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } else {\n        signature = await this.ledgerService.signHash(\n          this.operationService.ledgerPreHash(payload),\n          this.walletService.wallet.implicitAccounts[0].derivationPath\n        );\n      }\n      if (signature) {\n        this.acceptSigning(this.operationService.hexsigToEdsig(signature));\n      } else {\n        this.pwdInvalid = 'Failed to sign transaction';\n      }\n    } finally {\n      this.messageService.stopSpinner();\n    }\n  }\n  rejectSigning(): void {\n    this.closeModal();\n    this.signResponse.emit(null);\n  }\n  acceptSigning(signature: string): void {\n    this.messageService.addSuccess(this.isMessage ? 'Message signed!' : 'Payload signed!');\n    this.closeModal();\n    this.signResponse.emit(signature);\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clear();\n  }\n  clear(): void {\n    this.password = '';\n    this.pwdInvalid = '';\n    this.payload = '';\n    this.isMessage = false;\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Originate</h1>\n    </div>\n    <div class=\"seperator\"></div>\n    <div class=\"flex-column originate\">\n      <div class=\"flex-column top\">\n        <span class=\"amount key\">AMOUNT:&nbsp;<span class=\"value\">{{ this.balance ? this.balance + ' ' + 'tez' : ''\n            }}</span></span>\n        <!-- <span class=\"amount-usd\"> </span> -->\n        <span class=\"section key\">From:&nbsp;<span class=\"from\">{{ externalRequest?.selectedAccount?.address }}</span></span>\n      </div>\n      <br />\n      <div class=\"flex-row attrs\">\n        <div class=\"flex-row attr\">\n          <span class=\"key\">FEE:&nbsp;</span><span class=\"value\">{{ this.getTotalFee() }} tez</span>\n        </div>\n        <div class=\"flex-row attr\">\n          <span class=\"key\">MAX STORAGE COST:&nbsp;</span><span class=\"value\">{{ getTotalBurn() }} tez</span>\n        </div>\n      </div>\n      <app-ui-toggle-advanced style=\"width: calc(100% - 1em);margin: 2em 0;\" [default]=\"false\"\n        (stateChange)=\"advancedForm = $event\">\n      </app-ui-toggle-advanced>\n      <form autocomplete=\"off\" *ngIf=\"advancedForm\" class=\"advanced-form\">\n        <div class=\"tabs-container\">\n          <div class=\"flex-row tabs\">\n            <span class=\"tab\" [class.active]=\"activeTab === 0\" (click)=\"activeTab = 0\">Code</span>\n            <span class=\"tab\" [class.active]=\"activeTab === 1\" (click)=\"activeTab = 1\">Storage</span>\n          </div>\n        </div>\n        <textarea rows=\"10\" readonly>{{ getScript() }}</textarea>\n        <ng-container *ngIf=\"!(walletService.isLedgerWallet() && !ledgerError)\">\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Gas limit</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\" placeholder={{this.defaultTransactionParams.gas.toString()}}\n                [(ngModel)]=\"customGas\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Fee</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\" (keypress)=\"keyPressNumbersDecimal($event, 'customFee')\"\n                placeholder={{this.defaultTransactionParams.fee.toString()}} [(ngModel)]=\"customFee\">\n            </div>\n          </div>\n          <div class=\"flex-row\">\n            <div class=\"flex-column\">\n              <label class=\"label\">Storage limit</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text\"\n                placeholder={{this.defaultTransactionParams?.storage.toString()}} [(ngModel)]=\"customStorage\">\n            </div>\n            <div class=\"flex-column\">\n              <label class=\"label\">Max storage cost</label>\n              <input numericinput=\"decimal\" name=\"none\" type=\"text\" class=\"text read-only\" [value]=\"burnAmount() ? burnAmount() : '0 tez'\"\n                tabindex=-1 readonly>\n            </div>\n          </div>\n        </ng-container>\n      </form>\n      <span *ngIf=\"formInvalid\" class=\"danger margin\">\n        {{ formInvalid }}\n      </span>\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <br />\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <input name=\"none\" [(ngModel)]=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdInvalid = ''\" (paste)=\"this.pwdInvalid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\" class=\"blue confirm\"\n          (click)=\"ledgerSign()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"blue confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n      <span *ngIf=\"this.pwdInvalid\" class=\"danger margin\">{{ this.pwdInvalid }}</span>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { KeyPair, DefaultTransactionParams, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { LedgerWallet, Account, TorusWallet } from '../../../services/wallet/wallet';\nimport { MessageService } from '../../../services/message/message.service';\nimport Big from 'big.js';\nimport { emitMicheline, assertMichelsonData, assertMichelsonContract } from '@taquito/michel-codec';\nimport { EstimateService } from '../../../services/estimate/estimate.service';\nimport { Subscription } from 'rxjs';\nimport { ModalComponent } from '../modal.component';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\nconst zeroTxParams: DefaultTransactionParams = {\n  gas: 0,\n  storage: 0,\n  fee: 0,\n  burn: 0\n};\n\n@Component({\n  selector: 'app-originate',\n  templateUrl: './originate.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class OriginateComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  readonly beaconMode = true;\n  @Input() externalRequest: ExternalRequest;\n  @Output() operationResponse = new EventEmitter();\n  syncSub: Subscription;\n  defaultTransactionParams: DefaultTransactionParams = zeroTxParams;\n  costPerByte: string = this.estimateService.costPerByte;\n\n  balance = '';\n  script: any;\n\n  customFee = '';\n  customGas = '';\n  customStorage = '';\n\n  pwdInvalid: string;\n  formInvalid = '';\n  sendResponse: any;\n  ledgerError = '';\n  simError = '';\n\n  password: string;\n  advancedForm = false;\n  simSemaphore = 0;\n  activeTab = 0;\n\n  name = 'originate';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private walletService: WalletService,\n    private operationService: OperationService,\n    private coordinatorService: CoordinatorService,\n    private inputValidationService: InputValidationService,\n    private ledgerService: LedgerService,\n    private messageService: MessageService,\n    private estimateService: EstimateService,\n    private subjectService: SubjectService\n  ) {\n    super();\n  }\n  ngOnInit(): void {}\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.beaconMode) {\n      if (\n        this.externalRequest?.operationRequest?.operationDetails?.length === 1 &&\n        this.externalRequest.operationRequest.operationDetails[0].kind === 'origination'\n      ) {\n        if (this.isValidOrigination()) {\n          this.openModal();\n          this.balance = Big(this.externalRequest.operationRequest.operationDetails[0].balance)\n            .div(10 ** 6)\n            .toFixed();\n          this.script = this.externalRequest.operationRequest.operationDetails[0].script;\n          const recommendations = {\n            gasRecommendation: this.externalRequest.operationRequest.operationDetails[0].gas_limit\n              ? this.externalRequest.operationRequest.operationDetails[0].gas_limit\n              : undefined,\n            storageRecommendation: this.externalRequest.operationRequest.operationDetails[0].storage_limit\n              ? this.externalRequest.operationRequest.operationDetails[0].storage_limit\n              : undefined\n          };\n          this.estimateFees(recommendations);\n          if (this.beaconMode) {\n            this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n              if (response) {\n                this.operationResponse.emit('silent');\n                this.closeModal();\n              }\n            });\n          }\n        } else {\n          console.warn('Invalid origination');\n          this.operationResponse.emit('parameters_error');\n        }\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  openModal(): void {\n    if (this.walletService.wallet) {\n      // hide body scrollbar\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflow = 'hidden';\n      this.clearForm();\n      if (this.walletService.isLedgerWallet()) {\n        this.ledgerError = '?';\n      }\n      ModalComponent.currentModel.next({ name: this.name, data: null });\n    }\n  }\n  isValidOrigination(): boolean {\n    const origination = this.externalRequest.operationRequest.operationDetails[0];\n    if (!origination.balance || !this.inputValidationService.amount(origination.balance, 0)) {\n      console.warn('invalid balance');\n      return false;\n    }\n    try {\n      assertMichelsonContract(origination.script.code);\n      assertMichelsonData(origination.script.storage);\n    } catch (e) {\n      console.warn('Invalid script');\n      return false;\n    }\n    return true;\n  }\n  async estimateFees(recommendations: any = {}): Promise<void> {\n    const callback = (res) => {\n      if (res) {\n        if (res.error) {\n          this.simError = res.error;\n          this.formInvalid = this.simError;\n        } else {\n          this.defaultTransactionParams = res;\n        }\n      }\n      this.simSemaphore--;\n    };\n    this.simSemaphore++;\n    await this.estimateService.preLoadData(this.externalRequest.selectedAccount.pkh, this.externalRequest.selectedAccount.pk);\n    this.estimateService.estimateOrigination({ ...this.getOrigination(), ...recommendations }, this.externalRequest.selectedAccount.pkh, callback);\n  }\n  getOrigination(): {\n    balance: string;\n    script: string;\n    gasLimit: number;\n    storageLimit: number;\n  } {\n    const gasLimit = this.customGas ? Number(this.customGas) : this.defaultTransactionParams.gas;\n    const storageLimit = this.customStorage ? Number(this.customStorage) : this.defaultTransactionParams.storage;\n    return JSON.parse(\n      JSON.stringify({\n        balance: this.balance,\n        script: this.script,\n        gasLimit,\n        storageLimit\n      })\n    );\n  }\n  getTotalCost(display: boolean = false): string {\n    const totalFee = Big(this.getTotalFee()).plus(Big(this.getTotalBurn())).toString();\n    if (display && totalFee === '0') {\n      return '-';\n    }\n    return totalFee;\n  }\n  getTotalFee(): number {\n    if (this.customFee !== '' && Number(this.customFee)) {\n      return Number(this.customFee);\n    }\n    return Number(this.defaultTransactionParams.fee);\n  }\n  getTotalBurn(): number {\n    if (this.customStorage !== '' && Number(this.customStorage)) {\n      return Number(Big(this.customStorage).times(this.costPerByte).div(1000000).toString());\n    }\n    return this.defaultTransactionParams.burn;\n  }\n  burnAmount(): string {\n    const burn = this.customStorage ? Number(Big(this.customStorage).times(this.costPerByte).div(1000000)) : this.defaultTransactionParams.burn;\n    if (burn) {\n      return burn + ' tez';\n    }\n    return '';\n  }\n  getScript(): string {\n    return this.activeTab\n      ? emitMicheline(this.script.storage, {\n          indent: '  ',\n          newline: '\\n'\n        })\n      : emitMicheline(this.script.code, { indent: '  ', newline: '\\n' });\n  }\n  closeModalAction(): void {\n    this.operationResponse.emit(null);\n    this.closeModal();\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clearForm();\n    this.messageService?.stopSpinner();\n  }\n  async inject(): Promise<void> {\n    this.formInvalid = this.simError;\n    const valid = this.validateOrigination();\n    if (valid) {\n      const pwd = this.password;\n      this.password = '';\n      this.messageService.startSpinner('Signing operation...');\n      let keys;\n      try {\n        keys = await this.walletService.getKeys(pwd, this.externalRequest.selectedAccount.pkh);\n      } catch {\n        this.messageService.stopSpinner();\n      }\n      if (this.walletService.isLedgerWallet()) {\n        this.broadCastLedgerTransaction();\n        this.sendResponse = null;\n      } else {\n        if (keys) {\n          this.pwdInvalid = '';\n          this.messageService.startSpinner('Sending operation...');\n          this.sendOrigination(keys);\n          this.closeModal();\n        } else {\n          this.messageService.stopSpinner();\n          if (this.walletService.wallet instanceof TorusWallet) {\n            this.pwdInvalid = `Authorization failed`;\n          } else {\n            this.pwdInvalid = 'Wrong password!';\n          }\n        }\n      }\n    }\n  }\n  validateOrigination(): boolean {\n    if (this.simSemaphore) {\n      return false;\n    } else if (this.formInvalid) {\n      return false;\n    } else if (!this.inputValidationService.gas(this.customGas)) {\n      this.formInvalid = 'Invalid gas limit';\n      return false;\n    } else if (!this.inputValidationService.storage(this.customStorage)) {\n      this.formInvalid = 'Invalid storage limit';\n      return false;\n    } else if (!this.inputValidationService.amount(this.customFee, 6)) {\n      this.formInvalid = 'Invalid fee';\n      return false;\n    }\n    return true;\n  }\n  async ledgerSign(): Promise<void> {\n    this.formInvalid = this.simError;\n    const valid = this.validateOrigination();\n    if (valid) {\n      const keys = await this.walletService.getKeys('');\n      if (keys) {\n        this.sendOrigination(keys);\n      }\n    }\n  }\n  async sendOrigination(keys: KeyPair): Promise<void> {\n    //this.fee = '';\n    this.subscriptions.add(\n      this.operationService.originate(this.getOrigination(), this.getTotalFee(), keys).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success === true) {\n            if (ans.payload.opHash) {\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                kt1: ans.payload.newPkh,\n                opHash: ans.payload.opHash,\n                origination: this.externalRequest.operationRequest.operationDetails[0]\n              };\n              this.coordinatorService.boost(this.externalRequest.selectedAccount.address, metadata);\n            } else if (this.walletService.isLedgerWallet()) {\n              this.requestLedgerSignature();\n            }\n          } else {\n            this.messageService.stopSpinner();\n            console.log('Origination error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n            if (this.walletService.isLedgerWallet) {\n              this.closeModal();\n            }\n          }\n        },\n        (err) => {\n          console.log('Error Message ', JSON.stringify(err));\n          this.ledgerError = 'Failed to create operation';\n        }\n      )\n    );\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      const op = this.sendResponse.payload.unsignedOperation;\n      this.messageService.startSpinner('Waiting for Ledger signature');\n      let signature;\n      try {\n        signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      if (signature) {\n        const signedOp = op + signature;\n        this.sendResponse.payload.signedOperation = signedOp;\n        this.ledgerError = '';\n      } else {\n        this.ledgerError = 'Failed to sign operation';\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.messageService.startSpinner('Broadcasting operation');\n    this.subscriptions.add(\n      this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(\n        (ans: any) => {\n          this.sendResponse = ans;\n          if (ans.success && this.externalRequest.selectedAccount.address) {\n            const metadata = {\n              kt1: ans.payload.newPkh,\n              opHash: ans.payload.opHash,\n              origination: this.externalRequest.operationRequest.operationDetails[0]\n            };\n            this.coordinatorService.boost(this.externalRequest.selectedAccount.address, metadata);\n          } else {\n            this.messageService.addError(this.sendResponse.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n          }\n          this.closeModal();\n          console.log('ans: ' + JSON.stringify(ans));\n        },\n        (error) => {\n          this.messageService.stopSpinner();\n          this.messageService.addError(error, 0);\n          this.operationResponse.emit('broadcast_error');\n        }\n      )\n    );\n  }\n  clearForm(): void {\n    this.defaultTransactionParams = zeroTxParams;\n    this.customFee = '';\n    this.customGas = '';\n    this.customStorage = '';\n\n    this.balance = '';\n    this.script = null;\n\n    this.advancedForm = false;\n\n    this.password = '';\n    this.pwdInvalid = '';\n    this.formInvalid = '';\n    this.simError = '';\n\n    this.sendResponse = null;\n    this.ledgerError = '';\n    this.simSemaphore = 0;\n    this.activeTab = 0;\n\n    if (this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n  }\n  // Only Numbers with Decimals\n  keyPressNumbersDecimal(event, input): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n      event.preventDefault();\n      return false;\n    } else if (charCode === 46 && this[input].length === 0) {\n      this[input] = '0' + this[input];\n    }\n    return true;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModalAction()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">Confirm Staking</h1>\n    </div>\n    <div class=\"flex-column confirm-staking\">\n      <div class=\"flex-row head\">\n        <img *ngIf=\"delegate?.logo\" [src]=\"delegate.logo\" />\n        <div class=\"flex-column data\"\n          *ngIf=\"delegate?.name ? delegate.name : toPkh; let delegateDisplayName; else undelegate\">\n          <span class=\"name\">{{ delegateDisplayName }}</span>\n          <div class=\"flex-row fee-space\"><span class=\"fee\"><span>SPLIT:</span>&nbsp;{{ delegate?.fee ?\n              toPercent(delegate.fee) : 'UNKNOWN' }}</span><span *ngIf=\"delegate?.freeSpace\"\n              class=\"space\"><span>SPACE:</span>&nbsp;{{ round(delegate.freeSpace) }}</span>\n          </div>\n        </div>\n        <ng-template #undelegate>\n          <div class=\"flex-column data\">\n            <span class=\"name\">Undelegate from baker</span>\n          </div>\n        </ng-template>\n      </div>\n      <br />\n      <app-ui-toggle-advanced style=\"width: calc(100% - 1em);\" [default]=\"false\" (stateChange)=\"advanced = $event\">\n      </app-ui-toggle-advanced>\n      <br />\n      <br />\n      <ng-container *ngIf=\"advanced\">\n        <form autocomplete=\"off\">\n          <div class=\"label\">Fee <span class=\"label\" style=\"margin: 0; text-transform: lowercase;\">(tez)</span></div>\n          <input inputmode=\"decimal\" name=\"none\" [(ngModel)]=\"fee\" class=\"text fee\" type=\"text\" placeholder=\"{{defaultFee}}\"\n            [disabled]=\"walletService.isLedgerWallet() && sendResponse?.payload?.signedOperation\" />\n        </form>\n      </ng-container>\n      <br />\n      <br />\n      <div class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <ng-container *ngIf=\"walletService.isPwdWallet()\">\n          <div class=\"label\">ENTER YOUR PASSWORD TO CONFIRM</div>\n          <span *ngIf=\"this.pwdValid\" class=\"label danger\">{{ this.pwdValid }}</span>\n          <input name=\"none\" [(ngModel)]=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\n            class=\"text password\" type=\"password\" (input)=\"this.pwdValid = ''\" (change)=\"this.pwdValid = ''\"\n            (keydown.enter)='!messageService.spinnerOn ? inject() : null'>\n        </ng-container>\n        <button class=\"confirm\" *ngIf=\"walletService.isLedgerWallet() && ledgerError; else elseBlock\"\n          (click)=\"ledgerSign()\">Sign with Ledger</button>\n        <ng-template #elseBlock>\n          <button class=\"confirm\" (click)=\"!messageService.spinnerOn ? inject() : null\"\n            [disabled]=\"(walletService.isLedgerWallet() && (!sendResponse || !sendResponse.payload || !sendResponse.payload.signedOperation)) || walletService.isWatchWallet()\">\n            {{ walletService.isLedgerWallet() ? 'Broadcast' : 'Confirm'}}</button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { KeyPair, ExternalRequest } from '../../../interfaces';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CoordinatorService } from '../../../services/coordinator/coordinator.service';\nimport { OperationService } from '../../../services/operation/operation.service';\nimport { ExportService } from '../../../services/export/export.service';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { LedgerService } from '../../../services/ledger/ledger.service';\nimport { LedgerWallet, Account, ImplicitAccount, OriginatedAccount, TorusWallet } from '../../../services/wallet/wallet';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TezosDomainsService } from '../../../services/tezos-domains/tezos-domains.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalComponent } from '../modal.component';\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport Big from 'big.js';\n\n@Component({\n  selector: 'app-delegate',\n  templateUrl: './delegate.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class DelegateComponent extends ModalComponent implements OnInit, OnChanges, OnDestroy {\n  domainPendingLookup = false;\n  defaultFee = 0.0004;\n  readonly pkhFee = 0.0004;\n  readonly ktFee = 0.0008;\n  @ViewChild('toPkhInput') toPkhView: ElementRef;\n  @Input() beaconMode = false;\n  @Input() externalRequest: ExternalRequest;\n  @Output() operationResponse = new EventEmitter();\n  activeAccount: Account;\n  toPkh: string;\n  delegate = null;\n  fee: string = '';\n  password: string;\n  pwdValid: string;\n  formInvalid = '';\n  sendResponse: any;\n  ledgerError = '';\n  syncSub: Subscription;\n  advanced = false;\n\n  name = 'delegate-confirm';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private route: ActivatedRoute,\n    public walletService: WalletService,\n    private operationService: OperationService,\n    private coordinatorService: CoordinatorService,\n    private exportService: ExportService,\n    private inputValidationService: InputValidationService,\n    private ledgerService: LedgerService,\n    private messageService: MessageService,\n    private tezosDomains: TezosDomainsService,\n    private subjectService: SubjectService,\n    private router: Router\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      let address = this.route.snapshot.paramMap.get('address');\n      if (this.walletService.addressExists(address)) {\n        this.activeAccount = this.walletService.wallet.getAccount(address);\n      }\n      this.subscriptions.add(\n        this.subjectService.activeAccount.subscribe((activeAccount) => {\n          this.activeAccount = activeAccount;\n        })\n      );\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.beaconMode) {\n      if (this.externalRequest?.operationRequest) {\n        const opReq = this.externalRequest.operationRequest.operationDetails\n          ? this.externalRequest.operationRequest.operationDetails\n          : this.externalRequest.operationRequest;\n        if (opReq[0]?.kind === 'delegation') {\n          if (opReq[0].delegate) {\n            this.activeAccount = this.externalRequest.selectedAccount;\n            ModalComponent.currentModel.next({\n              name: '',\n              data: null\n            });\n            this.clearForm();\n            ModalComponent.currentModel.next({\n              name: 'delegate-confirm',\n              data: { address: opReq[0].delegate }\n            });\n          }\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  open(data): void {\n    if (this.walletService.wallet) {\n      this.clearForm(true);\n      this.estimateDefaultFee();\n      this.toPkh = data.address;\n      this.delegate = data;\n      if (this.walletService.isLedgerWallet()) {\n        this.ledgerError = '?';\n      }\n      if (this.beaconMode) {\n        this.syncSub = this.subjectService.beaconResponse.subscribe((response) => {\n          if (response) {\n            this.operationResponse.emit('silent');\n          }\n        });\n      }\n      super.open();\n    }\n  }\n\n  async inject(): Promise<void> {\n    const pwd = this.password;\n    this.password = '';\n    this.messageService.startSpinner('Signing operation...');\n    let keys;\n    try {\n      keys = await this.walletService.getKeys(pwd, this.activeAccount.pkh);\n    } catch {\n      this.messageService.stopSpinner();\n    }\n    if (this.walletService.isLedgerWallet()) {\n      this.broadCastLedgerTransaction();\n      this.sendResponse = null;\n    } else {\n      if (keys) {\n        this.pwdValid = '';\n        this.messageService.startSpinner('Sending operation...');\n        this.sendDelegation(keys);\n      } else {\n        this.messageService.stopSpinner();\n        if (this.walletService.wallet instanceof TorusWallet) {\n          this.pwdValid = `Authorization failed`;\n        } else {\n          this.pwdValid = 'Wrong password!';\n        }\n      }\n    }\n  }\n  async ledgerSign(): Promise<void> {\n    const keys = await this.walletService.getKeys('');\n    if (keys) {\n      this.messageService.startSpinner('');\n      this.sendDelegation(keys);\n    }\n  }\n\n  async sendDelegation(keys: KeyPair): Promise<void> {\n    let fee = this.getFee();\n    this.subscriptions.add(\n      this.operationService.delegate(this.activeAccount.address, this.toPkh, Number(fee), keys).subscribe(\n        async (ans: any) => {\n          this.sendResponse = ans;\n          console.log(JSON.stringify(ans));\n          if (ans.success === true) {\n            if (ans.payload.opHash) {\n              this.operationResponse.emit(ans.payload.opHash);\n              const metadata = {\n                delegate: this.toPkh,\n                opHash: ans.payload.opHash\n              };\n              this.coordinatorService.boost(this.activeAccount.address, metadata);\n              this.closeModal();\n              this.router.navigate([`/account/${this.activeAccount.address}`]);\n            } else if (this.walletService.isLedgerWallet()) {\n              this.requestLedgerSignature();\n            }\n          } else {\n            console.log('Delegation error id ', ans.payload.msg);\n            this.messageService.addError(ans.payload.msg, 0);\n            this.operationResponse.emit('broadcast_error');\n            this.closeModal();\n          }\n        },\n        (err) => {\n          console.log('Error Message ', JSON.stringify(err));\n          this.ledgerError = 'Failed to create operation';\n        }\n      )\n    );\n  }\n  async requestLedgerSignature(): Promise<void> {\n    if (this.walletService.wallet instanceof LedgerWallet) {\n      const op = this.sendResponse.payload.unsignedOperation;\n      this.messageService.startSpinner('Waiting for Ledger signature');\n      let signature;\n      try {\n        signature = await this.ledgerService.signOperation('03' + op, this.walletService.wallet.implicitAccounts[0].derivationPath);\n      } finally {\n        this.messageService.stopSpinner();\n      }\n      if (signature) {\n        const signedOp = op + signature;\n        this.sendResponse.payload.signedOperation = signedOp;\n        this.ledgerError = '';\n      } else {\n        this.ledgerError = 'Failed to sign operation';\n      }\n    }\n  }\n  async broadCastLedgerTransaction(): Promise<void> {\n    this.messageService.startSpinner('Broadcasting operation');\n    this.operationService.broadcast(this.sendResponse.payload.signedOperation).subscribe(\n      (ans: any) => {\n        this.sendResponse = ans;\n        if (ans.success && this.activeAccount.address) {\n          this.operationResponse.emit(ans.payload.opHash);\n          const metadata = {\n            delegate: this.toPkh,\n            opHash: ans.payload.opHash\n          };\n          this.coordinatorService.boost(this.activeAccount.address, metadata);\n          this.closeModal();\n          this.router.navigate([`/account/${this.activeAccount.address}`]);\n        } else {\n          this.messageService.addError(this.sendResponse.payload.msg, 0);\n          this.operationResponse.emit('broadcast_error');\n        }\n        this.closeModal();\n        console.log('ans: ' + JSON.stringify(ans));\n      },\n      (error) => {\n        this.messageService.stopSpinner();\n        this.messageService.addError(error, 0);\n        this.operationResponse.emit('broadcast_error');\n      }\n    );\n  }\n  estimateDefaultFee(): void {\n    this.subscriptions.add(\n      this.operationService.isRevealed(this.activeAccount.pkh).subscribe((revealed: boolean) => {\n        const revealFee = revealed ? 0 : 0.0002;\n        if (this.activeAccount instanceof ImplicitAccount) {\n          this.defaultFee = Number(new Big(revealFee).plus(this.pkhFee));\n        } else if (this.activeAccount instanceof OriginatedAccount) {\n          this.defaultFee = Number(new Big(revealFee).plus(this.ktFee));\n        }\n      })\n    );\n  }\n  getFee(): string {\n    return this.fee !== '' ? this.fee : this.defaultFee.toString();\n  }\n  clearForm(init: boolean = false): void {\n    if (!init && this.syncSub) {\n      this.syncSub.unsubscribe();\n      this.syncSub = undefined;\n    }\n    this.toPkh = '';\n    this.fee = '';\n    this.defaultFee = 0.0004;\n    this.password = '';\n    this.pwdValid = '';\n    this.formInvalid = '';\n    this.sendResponse = '';\n    this.ledgerError = '';\n    this.domainPendingLookup = false;\n    this.delegate = null;\n    this.advanced = false;\n  }\n  async invalidInput(): Promise<string> {\n    // if it is a tezos-domain\n    if (this.toPkh && this.toPkh.indexOf('.') > -1) {\n      try {\n        this.domainPendingLookup = true;\n        const { pkh } = await this.tezosDomains.getAddressFromDomain(this.toPkh);\n        if (pkh) {\n          this.toPkh = pkh;\n        } else {\n          this.domainPendingLookup = false;\n          return 'Could not find the domain';\n        }\n      } catch (error) {\n        return error.message;\n      } finally {\n        this.domainPendingLookup = false;\n      }\n    }\n    if (\n      (!this.inputValidationService.address(this.toPkh) && this.toPkh !== '') ||\n      (this.toPkh.length > 1 && this.toPkh.slice(0, 2) !== 'tz') ||\n      this.walletService.wallet.getImplicitAccount(this.toPkh)\n    ) {\n      return 'invalid delegate address';\n    } else if (!this.inputValidationService.fee(this.fee)) {\n      return 'invalid fee';\n    } else {\n      return '';\n    }\n  }\n  // Only Numbers with Decimals\n  keyPressNumbersDecimal(event, input): boolean {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n      event.preventDefault();\n      return false;\n    } else if (charCode === 46 && this[input].length === 0) {\n      this[input] = '0' + this[input];\n    }\n    return true;\n  }\n  download(): void {\n    this.exportService.downloadOperationData(this.sendResponse.payload.unsignedOperation, false);\n  }\n\n  closeModalAction(): void {\n    this.operationResponse.emit(null);\n    this.closeModal();\n  }\n\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n    this.clearForm();\n    this.ledgerError = '';\n    this.messageService.stopSpinner();\n  }\n\n  round(val): string {\n    return Math.round(Number(val)).toString();\n  }\n\n  toPercent(val): string {\n    return parseFloat((Number(val) * 100).toFixed(2)).toString() + '%';\n  }\n}\n","<div #viewRef class=\"flex-column list\">\n  <a *ngFor=\"let account of list\" class=\"flex-row option\" [class.selected]=\"account?.address === current?.address\"\n    routerLink=\"/account/{{account?.address}}{{postfix}}\" (click)=\"closeModal()\">\n    <div class=\"flex-column left\">\n      <ng-container *ngIf=\"getUsername(account?.address)\">\n        <div class=\"flex-row alias\"><img class=\"logo\" src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span\n            class=\"name\">{{\n            getUsername(account?.address) }}</span><img class=\"copy\" src=\"../../../../assets/img/copy-icon.svg\"\n            (click)=\"this.copy($event, account?.address); false\" /></div>\n        <span class=\"addr\">{{\n          !isMobile ? account?.address : account?.shortAddress() }}</span>\n      </ng-container>\n      <ng-container *ngIf=\"!getUsername(account?.address)\">\n        <div class=\"flex-row\"><span class=\"addr default\">{{\n            !isMobile ? account?.address : account?.shortAddress() }}</span><img class=\"copy\"\n            src=\"../../../../assets/img/copy-icon.svg\" (click)=\"this.copy($event, account?.address); false\" /></div>\n      </ng-container>\n    </div>\n    <div class=\"flex-column balances\">\n      <div class=\"balance-tez\">{{ (getBalance(account) | number: '1.0-6' | removeComma) }} tez</div>\n      <div class=\"balance-fiat\">{{ '$' + (getBalanceFiat(account) | number:'1.2-2' | removeComma)\n        }}</div>\n    </div>\n  </a>\n  <div class=\"flex-row total-balances\">\n    <h3>TOTAL:</h3>\n    <div class=\"flex-column\">\n      <div class=\"balance-tez\">{{ (getTotalBalance() | number: '1.0-6' | removeComma) + ' tez' }}\n      </div>\n      <div class=\"balance-fiat\">{{ '$' + (getTotalFiat() | number:'1.2-2' | removeComma) }}\n      </div>\n    </div>\n  </div>\n</div>","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { ModalComponent } from '../../modal.component';\nimport { Subscription } from 'rxjs';\nimport { ListComponent } from '../../../ui/generic/list.component';\nimport copy from 'copy-to-clipboard';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport Big from 'big.js';\nimport { RemoveCommaPipe } from '../../../../pipes/remove-comma.pipe';\nimport { filter } from 'rxjs/operators';\nimport { SubjectService } from '../../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-account-list-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['../../../../../scss/components/modals/account-list.scss']\n})\nexport class AccountListBodyComponent extends ListComponent implements OnInit, AfterViewInit, OnDestroy {\n  postfix = '';\n  isMobile = false;\n  @ViewChild('viewRef') viewRef: ElementRef;\n  preSelectedAccount: string;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    public router: Router,\n    public lookupService: LookupService,\n    private walletService: WalletService,\n    public translate: TranslateService,\n    public messageService: MessageService,\n    public removeCommaPipe: RemoveCommaPipe,\n    private subjectService: SubjectService\n  ) {\n    super();\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n        this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.preSelectedAccount = this.current;\n    }\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(() => {\n        this.list = this.walletService.wallet?.getAccounts();\n      })\n    );\n    this.list = this.walletService.wallet?.getAccounts();\n\n    const e = () => {\n      this.isMobile = !!parseInt(document.documentElement.style.getPropertyValue('--is-mobile'));\n    };\n    window.addEventListener('resize', e);\n    e();\n  }\n\n  ngAfterViewInit(): void {\n    const selRef = this.viewRef.nativeElement.querySelector('.option.selected') as HTMLElement;\n    this.viewRef.nativeElement.scrollTo(0, selRef.offsetTop - 100);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({ address: address });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n  copy(e, address: string): void {\n    e.stopPropagation();\n    copy(address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(address + ' ' + copyToClipboard, 5);\n  }\n  getBalance(account): number | string {\n    return Big(account?.balanceXTZ ?? 0)\n      .div(1000000)\n      .toFixed();\n  }\n  getBalanceFiat(account): number {\n    return account?.balanceUSD ?? 0;\n  }\n\n  getTotalBalance(): number {\n    return Big(this.walletService.wallet.totalBalanceXTZ ?? 0)\n      .div(1000000)\n      .toFixed();\n  }\n\n  getTotalFiat(): number {\n    return this.walletService.wallet.totalBalanceUSD ?? 0;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LookupService } from '../../../services/lookup/lookup.service';\nimport { ModalComponent } from '../modal.component';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class AccountListComponent extends ModalComponent implements OnInit {\n  @Input() title;\n  @Input() activeAccount;\n  name = 'account-list';\n\n  constructor(public router: Router, public lookupService: LookupService, public translate: TranslateService, public messageService: MessageService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  closeModal(): void {\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n}\n","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <app-account-list-body [current]=\"activeAccount\">\n    </app-account-list-body>\n  </div>\n</div>","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-column top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../assets/img/close-btn-x.png\" /></div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <div class=\"flex-column export-mnemonic\">\n      <div *ngIf=\"!!mnemonicPhrase\" class=\"whitebox\" (mouseout)=\"mouseOut($event)\" (touchstart)=\"$event.stopPropagation(); this.hideBlur = true;\"\n        (touchend)=\"checkSelection($event)\" (click)=\"$event.stopPropagation()\" (mouseup)=\"checkSelection($event)\">\n        {{ mnemonicPhrase }}<div *ngIf=\"!hideBlur\" class=\"flex-row seed-blur\"\n          (click)=\"$event.stopPropagation(); this.hideBlur = true;\">\n          <span>CLICK HERE TO REVEAL YOUR SEED WORDS</span>\n        </div>\n      </div>\n      <p *ngIf=\"!!mnemonicPhrase\" class=\"description red\">\n        <span *ngIf=\"isSelectedMnemonic\" style=\"margin: 1rem 0\" class=\"warning red\">\n          WARNING: Copying the seed words to your clipboard can result in sensitive leakage. The clipboard is a shared\n          resource that can be monitored by other web pages or browser extensions.<br />\n        </span>\n      </p>\n      <div *ngIf=\"!mnemonicPhrase\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <div class=\"label\">\n          ENTER YOUR PASSWORD TO REVEAL \n        </div>\n        <span [style.visibility]=\"!pwdInvalid ? 'hidden' : ''\" [style.margin]=\"!pwdInvalid ? '0' : ''\"\n        class=\"label danger\">{{ this.pwdInvalid }}</span>\n        <input [(ngModel)]=\"pwd\" autocomplete=\"current-password\" placeholder=\"Password\" class=\"text password\"\n          type=\"password\" (input)=\"this.pwdInvalid = ''\" (change)=\"this.pwdInvalid = ''\" (keydown.enter)='!messageService.spinnerOn ? reveal() : null'>\n        <button class=\"button confirm\" (click)=\"!messageService.spinnerOn ? reveal() : null\">Continue</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n  selector: 'app-export-mnemonic',\n  templateUrl: './export-mnemonic.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class ExportMnemonicComponent extends ModalComponent implements OnInit {\n  title = 'Reveal Seed Words';\n  name = 'export-mnemonic';\n  mnemonicPhrase = '';\n  ledgerError = '';\n  pwdInvalid = '';\n  pwd = '';\n  hideBlur = false;\n  isSelectedMnemonic = false;\n  constructor(public walletService: WalletService, private messageService: MessageService) {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  closeModal(): void {\n    this.reset();\n    ModalComponent.currentModel.next({ name: '', data: null });\n  }\n\n  async reveal(): Promise<void> {\n    try {\n      this.messageService.startSpinner();\n      this.mnemonicPhrase = await this.walletService.revealMnemonicPhrase(this.pwd);\n      this.pwdInvalid = this.mnemonicPhrase === '' ? 'INVALID PASSWORD' : '';\n      this.messageService.stopSpinner();\n    } catch {\n      this.pwdInvalid = this.mnemonicPhrase === '' ? 'INVALID PASSWORD' : '';\n    }\n  }\n\n  mouseOut(e): void {\n    e.stopPropagation();\n    this.hideBlur = false;\n    window.getSelection()?.removeAllRanges();\n  }\n  checkSelection(ev): void {\n    ev.stopPropagation();\n    if (this.isTextSelected()) {\n      this.isSelectedMnemonic = true;\n    }\n  }\n  private isTextSelected(): boolean {\n    let selection: Selection;\n    if (window.getSelection) {\n      selection = window.getSelection();\n    } else if (document.getSelection) {\n      selection = document.getSelection();\n    } else return false;\n    return !selection?.isCollapsed;\n  }\n  reset(): void {\n    this.mnemonicPhrase = '';\n    this.ledgerError = '';\n    this.pwdInvalid = '';\n    this.pwd = '';\n    this.hideBlur = false;\n    this.isSelectedMnemonic = false;\n  }\n}\n","import { Component, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { WalletClient, BeaconMessageType, PermissionScope, PermissionResponseInput, OperationResponseInput } from '@airgap/beacon-sdk';\nimport { WalletService } from '../../../services/wallet/wallet.service';\nimport { CONSTANTS } from '../../../../environments/environment';\nimport { Account } from '../../../services/wallet/wallet';\nimport { BeaconService } from '../../../services/beacon/beacon.service';\nimport { DeeplinkService } from '../../../services/deeplink/deeplink.service';\nimport { assertMichelsonData } from '@taquito/michel-codec';\nimport { InputValidationService } from '../../../services/input-validation/input-validation.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { ExternalRequest } from '../../../interfaces';\n\n@Component({\n  selector: 'app-uri-handler',\n  templateUrl: './uri-handler.component.html'\n})\nexport class UriHandlerComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public messageService: MessageService,\n    public walletService: WalletService,\n    private beaconService: BeaconService,\n    private deeplinkService: DeeplinkService,\n    private inputValidationService: InputValidationService,\n    private subjectService: SubjectService\n  ) {\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((activeAccount) => {\n        this.activeAccount = activeAccount;\n      })\n    );\n  }\n  permissionRequest: PermissionResponseInput = null;\n  externalRequest: ExternalRequest = null;\n  signRequest: any = null;\n  activeAccount: Account;\n  selectedAccount: Account;\n  @HostListener('window:focus', ['$event'])\n  onFocus(event: FocusEvent): void {\n    this.changeFavicon();\n  }\n  ngOnInit(): void {\n    if (this.walletService.wallet) {\n      this.init();\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  async init() {\n    const pairingString = this.deeplinkService.popPairingJson();\n    if (pairingString) {\n      console.log(pairingString);\n      this.beaconService.preNotifyPairing(pairingString);\n    }\n    window.addEventListener('storage', (e) => {\n      this.handleStorageEvent(e);\n    });\n    await this.connectApp().catch((error) => console.error('connect error', error));\n    if (pairingString) {\n      await this.beaconService.client.isConnected;\n      this.beaconService.addPeer(pairingString);\n    }\n  }\n  changeFavicon(active: boolean = false): void {\n    if (active && document.hasFocus()) {\n      active = false;\n    }\n    const src: string = active ? 'favicon-attention.ico' : 'favicon.ico';\n    document.getElementById('favicon').setAttribute('href', src);\n  }\n  /* https://github.com/airgap-it/beacon-sdk/blob/master/src/clients/wallet-client/WalletClient.ts */\n  connectApp = async (): Promise<void> => {\n    if (!this.beaconService.client) {\n      this.beaconService.client = new WalletClient({\n        name: 'Kukai Wallet'\n      });\n    }\n    await this.beaconService.client.init(); // Establish P2P connection\n    this.beaconService.client\n      .connect(async (message: any) => {\n        console.log('### beacon message', message);\n        if (message.type !== BeaconMessageType.SignPayloadRequest && message.network.type.replace('edo2net', 'edonet') !== CONSTANTS.NETWORK) {\n          console.warn(`Rejecting Beacon message because of network. Expected ${CONSTANTS.NETWORK} instead of ${message.network.type}`);\n          await this.beaconService.rejectOnNetwork(message);\n        } else if (!this.permissionRequest && !this.externalRequest && !this.signRequest) {\n          switch (message.type) {\n            case BeaconMessageType.PermissionRequest:\n              await this.handlePermissionRequest(message);\n              break;\n            case BeaconMessageType.OperationRequest:\n              if (await this.isSupportedOperationRequest(message)) {\n                this.externalRequest = { operationRequest: message, selectedAccount: this.selectedAccount };\n                this.changeFavicon(true);\n              }\n              break;\n            case BeaconMessageType.SignPayloadRequest:\n              if (await this.isSupportedSignPayload(message)) {\n                this.signRequest = message;\n                this.changeFavicon(true);\n              }\n              break;\n            default:\n              await this.beaconService.rejectOnUnknown(message);\n              console.warn('Unknown message type', message);\n          }\n        } else {\n          console.log('Blocked by other Beacon request');\n        }\n      })\n      .catch((error) => console.error('connect error', error));\n  };\n  async handlePermissionRequest(message: any): Promise<void> {\n    console.log('## permission request');\n    message.scopes = message.scopes.filter((scope: PermissionScope) => [PermissionScope.OPERATION_REQUEST, PermissionScope.SIGN].includes(scope));\n    if (message.scopes.length) {\n      if (this.walletService.wallet) {\n        this.permissionRequest = message;\n        this.changeFavicon(true);\n      } else {\n        console.warn('No wallet found');\n        await this.beaconService.rejectOnSourceAddress(message);\n      }\n    } else {\n      console.warn('No valid scope');\n    }\n  }\n  async isSupportedOperationRequest(message: any): Promise<boolean> {\n    if (!this.walletService.wallet) {\n      console.log('No wallet found');\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    } else if (!this.walletService.wallet.getImplicitAccount(message.sourceAddress)) {\n      console.warn('Source address not recogized');\n      await this.beaconService.rejectOnSourceAddress(message);\n      return false;\n    } else if (message.operationDetails.length > 1) {\n      for (const op of message.operationDetails) {\n        if (op.kind !== 'transaction') {\n          console.warn('Only transaction batches supported');\n          await this.beaconService.rejectOnTooManyOps(message);\n          return false;\n        }\n      }\n    }\n    if (message.operationDetails[0].kind === 'transaction') {\n      for (let i = 0; i < message.operationDetails.length; i++) {\n        if (\n          message.operationDetails[i].destination &&\n          message.operationDetails[i].parameters &&\n          this.walletService.wallet.getAccount(message.operationDetails[i].destination)\n        ) {\n          console.warn('Invocation of user controlled contract is disabled');\n          await this.beaconService.rejectOnPermission(message);\n          return false;\n        } else if (!message.operationDetails[i].destination || !message.operationDetails[i].amount) {\n          console.warn('Missing destination or amount');\n          await this.beaconService.rejectOnUnknown(message);\n          return false;\n        } else if (this.invalidParameters(message.operationDetails[i].parameters)) {\n          await this.beaconService.rejectOnParameters(message);\n          return false;\n        } else if (this.invalidOptionals(message.operationDetails[i])) {\n          await this.beaconService.rejectOnParameters(message);\n          return false;\n        }\n      }\n    } else if (message.operationDetails[0].kind === 'delegation') {\n      if (!message.operationDetails[0].delegate) {\n        console.warn('Invalid delegate');\n        await this.beaconService.rejectOnUnknown(message);\n        return false;\n      }\n    } else if (message.operationDetails[0].kind === 'origination') {\n      if (!message.operationDetails[0].script) {\n        console.warn('No script found');\n        await this.beaconService.rejectOnParameters(message);\n        return false;\n      } else if (this.invalidOptionals(message.operationDetails[0])) {\n        await this.beaconService.rejectOnParameters(message);\n        return false;\n      }\n    } else {\n      console.warn('Unsupported operation kind');\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    }\n    this.selectedAccount = this.walletService.wallet.getImplicitAccount(message.sourceAddress);\n    return true;\n  }\n  private invalidOptionals(op: any): boolean {\n    if (typeof op.gas_limit === 'number') {\n      // normalize\n      op.gas_limit = op.gas_limit.toString();\n    }\n    if (typeof op.storage_limit === 'number') {\n      op.storage_limit = op.storage_limit.toString();\n    }\n    if (op.gas_limit && (typeof op.gas_limit !== 'string' || !this.inputValidationService.amount(op.gas_limit, 0))) {\n      return true;\n    } else if (op.storage_limit && (typeof op.storage_limit !== 'string' || !this.inputValidationService.amount(op.storage_limit, 0))) {\n      return true;\n    }\n    return false;\n  }\n  async isSupportedSignPayload(message: any): Promise<Boolean> {\n    if (!this.walletService.wallet) {\n      console.log('No wallet found');\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    } else if (!this.walletService.wallet.getImplicitAccount(message.sourceAddress)) {\n      console.warn('Source address not recogized');\n      await this.beaconService.rejectOnSourceAddress(message);\n      return false;\n    }\n    if (message.payload.slice(0, 2) === '0x') {\n      message.payload = message.payload.slice(2);\n    }\n    message.payload = message.payload.toLowerCase();\n    const hexString = message.payload;\n    console.log('hex', hexString);\n    if ((message.signingType !== 'raw' && message.signingType !== 'micheline') || !this.inputValidationService.hexString(hexString)) {\n      console.warn('Invalid sign payload');\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    } else if (!['05', '80'].includes(hexString.slice(0, 2))) {\n      console.warn('Unsupported prefix:' + hexString.slice(0, 2));\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    }\n    if (hexString.slice(0, 2) === '05' && !this.inputValidationService.isMichelineExpr(hexString)) {\n      await this.beaconService.rejectOnUnknown(message);\n      return false;\n    }\n    this.selectedAccount = this.walletService.wallet.getImplicitAccount(message.sourceAddress);\n    return true;\n  }\n  invalidParameters(parameters: any): boolean {\n    try {\n      if (parameters) {\n        if (!parameters.value || !parameters.entrypoint) {\n          throw new Error('entrypoint and value expected');\n        }\n        assertMichelsonData(parameters.value);\n      }\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n  /* operation request handling */\n  async operationResponse(opHash: any): Promise<void> {\n    if (opHash?.error) {\n      opHash = opHash.error;\n    }\n    if (!this.externalRequest) {\n      return;\n    }\n    console.log('hash', opHash);\n    console.log('externalRequest', this.externalRequest);\n    if (!opHash) {\n      await this.beaconService.rejectOnUserAbort(this.externalRequest.operationRequest);\n    } else if (opHash === 'broadcast_error') {\n      await this.beaconService.rejectOnBroadcastError(this.externalRequest.operationRequest);\n    } else if (opHash === 'invalid_parameters') {\n      await this.beaconService.rejectOnParameters(this.externalRequest.operationRequest);\n    } else if (opHash === 'parameters_error') {\n      await this.beaconService.rejectOnParameters(this.externalRequest.operationRequest);\n    } else if (opHash === 'unknown_error') {\n      await this.beaconService.rejectOnUnknown(this.externalRequest.operationRequest);\n    } else if (opHash !== 'silent') {\n      const response: OperationResponseInput = {\n        type: BeaconMessageType.OperationResponse,\n        transactionHash: opHash,\n        id: this.externalRequest.operationRequest.id\n      };\n      await this.beaconService.client.respond(response);\n    }\n    if (opHash !== 'silent') {\n      this.beaconService.responseSync();\n    }\n    this.externalRequest = null;\n  }\n  /* permission handling */\n  async permissionResponse(publicKey: string): Promise<void> {\n    if (!publicKey) {\n      await this.beaconService.rejectOnUserAbort(this.permissionRequest);\n      this.beaconService.responseSync();\n    } else if (publicKey !== 'silent') {\n      await this.beaconService.approvePermissionRequest(this.permissionRequest, publicKey);\n      this.beaconService.syncBeaconState();\n      this.beaconService.responseSync();\n    }\n    this.permissionRequest = null;\n  }\n  /* sign payload handling */\n  async signResponse(signature: string): Promise<void> {\n    if (!signature) {\n      await this.beaconService.rejectOnUserAbort(this.signRequest);\n      this.beaconService.responseSync();\n    } else if (signature !== 'silent') {\n      await this.beaconService.approveSignPayloadRequest(this.signRequest, signature);\n      this.beaconService.responseSync();\n    }\n    console.log(signature);\n    this.signRequest = null;\n  }\n  private async handleStorageEvent(ev: StorageEvent): Promise<void> {\n    switch (ev.key) {\n      case 'beacon:communication-peers-wallet':\n        const peers = JSON.parse(ev.newValue);\n        const senderIds = (await this.beaconService.client.getAppMetadataList()).map((app) => {\n          return app.senderId;\n        });\n        const newPeers = peers.length - senderIds.length;\n        if (newPeers > 0) {\n          const newPeer = peers ? peers.pop() : null;\n          if (newPeer && !senderIds.includes(newPeer.senderId)) {\n            const { senderId, ...peer } = newPeer;\n            await this.beaconService.addPeer(JSON.stringify(peer), false);\n          }\n        } else {\n          this.beaconService.syncBeaconState();\n        }\n        break;\n      case 'beacon:request-response':\n        if (ev.newValue) {\n          this.subjectService.beaconResponse.next(true);\n          this.beaconService.syncBeaconState();\n          this.changeFavicon();\n        }\n        break;\n    }\n  }\n}\n","<app-send [embedded]=\"false\" (operationResponse)=\"operationResponse($event)\"\n  [externalRequest]=\"externalRequest\"></app-send>\n<app-delegate (operationResponse)=\"operationResponse($event)\" [beaconMode]=true [externalRequest]=externalRequest>\n</app-delegate>\n<app-originate (operationResponse)=\"operationResponse($event)\" [externalRequest]=externalRequest></app-originate>\n<app-permission-request (permissionResponse)=\"permissionResponse($event)\" [permissionRequest]=\"permissionRequest\"\n  [activeAccount]=activeAccount>\n</app-permission-request>\n<app-sign-expr (signResponse)=\"signResponse($event)\" [signRequest]=\"signRequest\" [activeAccount]=selectedAccount>\n</app-sign-expr>\n<app-account-list [title]=\"'Accounts'\" [activeAccount]=\"activeAccount\"></app-account-list>\n<app-new-implicit></app-new-implicit>\n<app-receive></app-receive>\n<app-export-mnemonic></app-export-mnemonic>","<div *ngIf=\"provider\" [class.transak]=\"provider === BuyProviderType.Transak\" [class.moonpay]=\"provider === BuyProviderType.MoonPay\">\n  <div class=\"top\">\n    <a>\n      <button class=\"back secondary\" (click)=\"close()\">\n        <img src=\"../../../../../assets/img/left-arrow.svg\">Back</button>\n    </a>\n    <p>Buy XTZ (tez) with {{ BuyProviderType[provider] }}</p>\n  </div>\n  <div class=\"main\">\n    <ng-container *ngIf=\"url\">\n      <iframe allow=\"accelerometer; autoplay; camera; gyroscope; payment\" frameborder=\"0\" height=\"100%\" [src]=\"this.url\"\n        width=\"100%\" (load)=\"iframeLoaded()\" (error)=\"iframeError()\">\n        <p>Your browser does not support iframes.</p>\n      </iframe>\n    </ng-container>\n  </div>\n</div>\n<img *ngIf=\"isLoading\" class=\"loading\" src=\"../../../../../../assets/img/loader.svg\">","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { SubjectService, BuyProvider } from '../../../../../services/subject/subject.service';\nimport { generateOnRampURL } from '@coinbase/cbpay-js';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Account } from '../../../../../services/wallet/wallet';\nimport { Subscription } from 'rxjs';\nimport { CONSTANTS, environment } from '../../../../../../environments/environment';\n@Component({\n  selector: 'app-buy',\n  templateUrl: `./buy.component.html`,\n  styleUrls: ['../../../../../../scss/components/views/logged-in/account-view/buy/buy.component.scss']\n})\nexport class BuyComponent implements OnInit, OnDestroy {\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.mobile = window.innerWidth < 575;\n  }\n  public readonly BuyProviderType = BuyProvider;\n  readonly dev: boolean = !(CONSTANTS.MAINNET && environment.production);\n  readonly baseUrl: string = `https://buy${this.dev ? '-staging' : ''}.moonpay.com`;\n  mobile = false;\n  url: SafeUrl;\n  account: Account;\n  provider: BuyProvider;\n  isLoading: boolean = false;\n  private subscriptions: Subscription = new Subscription();\n  constructor(private sanitizer: DomSanitizer, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.onResize();\n    this.subscriptions.add(\n      this.subjectService.activeAccount.subscribe((a) => {\n        this.account = a;\n      })\n    );\n    this.subscriptions.add(\n      this.subjectService.buy.subscribe((o) => {\n        this.provider = o;\n        if (Number.isInteger(o)) {\n          this.open();\n        } else {\n          this.close();\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  private async open(): Promise<void> {\n    this.isLoading = true;\n    const address: string = this.account ? this.account.address : null;\n    if (!address?.startsWith('tz')) {\n      return;\n    }\n    switch (this.provider) {\n      case BuyProvider.Coinbase:\n        this.isLoading = false;\n        const newWindow = window.open(\n          generateOnRampURL({\n            appId: 'aa41d510-15f9-4426-87bd-3a506b6e22c0',\n            destinationWallets: [{ address, blockchains: ['tezos'] }]\n          }),\n          'Coinbase Pay',\n          'height=600,width=400'\n        );\n        newWindow.opener = null;\n        break;\n      case BuyProvider.Transak:\n        this.isLoading = false;\n        let walletAddressesData = {\n          coins: {\n            XTZ: { address }\n          }\n        };\n        const apiKey = CONSTANTS.MAINNET ? 'f1336570-699b-4181-9bd1-cdd57206981f' : '3b0e81f3-37dc-41f3-9837-bd8d2c350313';\n        this.url = this.sanitizer.bypassSecurityTrustResourceUrl(\n          `https://${!CONSTANTS.MAINNET ? 'staging-' : ''}global.transak.com?apiKey=${apiKey}&cryptoCurrencyCode=XTZ&walletAddressesData=${JSON.stringify(\n            walletAddressesData\n          )}&disableWalletAddressForm=true}`\n        );\n        break;\n      case BuyProvider.MoonPay:\n        this.url = await this.signUrl(address);\n        break;\n    }\n  }\n  private close(): void {\n    this.url = null;\n    this.provider = undefined;\n    this.isLoading = false;\n  }\n  private async signUrl(address: string): Promise<SafeUrl> {\n    if (address?.startsWith('tz')) {\n      const query: string = `?apiKey=${\n        this.dev ? 'pk_test_M23P0Zc5SvBORSFV63sfWKi7n5QbGZR' : 'pk_live_rP9HlBRO54nY4QKLxc6ONl4Prrm6vymK'\n      }&colorCode=%237178E3&currencyCode=xtz&walletAddress=${encodeURIComponent(address)}`;\n      const sig = await this.post({ dev: this.dev, url: query });\n      if (sig) {\n        const url = this.sanitizer.bypassSecurityTrustResourceUrl(`${this.baseUrl}${query}&signature=${encodeURIComponent(sig)}`);\n        return url;\n      }\n    }\n    return null;\n  }\n  private async post(data: any = {}): Promise<string> {\n    return fetch('https://utils.kukai.network/moonpay/sign', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(async (d) => {\n        return d.text();\n      })\n      .catch((e) => {\n        return '';\n      });\n  }\n  iframeLoaded() {\n    this.isLoading = false;\n  }\n  iframeError() {\n    this.isLoading = false;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"closeModal()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <div class=\"flex-column text\">\n        <h1 class=\"title\">{{ title }}</h1>\n        <h2 class=\"secondary\">Choose a provider</h2>\n      </div>\n    </div>\n    <div class=\"flex-column buy\">\n      <div class=\"flex-row option\" (click)=\"buyTez(BuyProviderType.Coinbase)\">\n        <img src=\"assets/img/coinbase.png\" />\n        <div class=\"text\">\n          <h3>Coinbase</h3>\n          <h4>Transfer from Coinbase</h4>\n        </div>\n      </div>\n      <div class=\"flex-row option\" (click)=\"buyTez(BuyProviderType.Transak)\">\n        <img src=\"assets/img/transak.png\" />\n        <div class=\"text\">\n          <h3>Transak</h3>\n          <h4>Bank transfers &amp; local payment methods in 120+ countries</h4>\n        </div>\n      </div>\n      <div class=\"flex-row option\" (click)=\"buyTez(BuyProviderType.MoonPay)\">\n        <img src=\"assets/img/moonpay.svg\" />\n        <div class=\"text\">\n          <h3>Moonpay</h3>\n          <h4>Cards &amp; bank transfers</h4>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ModalComponent } from '../modal.component';\nimport { SubjectService, BuyProvider } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-buy-modal',\n  templateUrl: './buy.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class BuyModalComponent extends ModalComponent implements OnInit {\n  title = 'Get Tez (XTZ)';\n  name = 'buy';\n  address = '';\n  onrampInstance = null;\n  public readonly BuyProviderType = BuyProvider;\n  constructor(private subjectService: SubjectService) {\n    super();\n  }\n\n  ngOnInit() {}\n  open() {\n    super.open();\n  }\n\n  closeModal(): void {\n    super.close();\n  }\n  buyTez(provider: BuyProvider) {\n    this.subjectService.buy.next(provider);\n    this.closeModal();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StartComponent } from './components/views/start/start.component';\nimport { NewWalletComponent } from './components/views/start/login-types/new-wallet/new-wallet.component';\nimport { MnemonicImportComponent } from './components/views/start/login-types/mnemonic-import/mnemonic-import.component';\nimport { ConnectLedgerComponent } from './components/views/start/login-types/connect-ledger/connect-ledger.component';\nimport { P404Component } from './components/views/error/404.component';\nimport { P500Component } from './components/views/error/500.component';\nimport { PrivacyPolicyComponent } from './components/views/start/agreement/privacy-policy/privacy-policy.component';\nimport { TermsOfUseComponent } from './components/views/start/agreement/terms-of-use/terms-of-use.component';\nimport { EmbeddedComponent } from './components/views/embedded/embedded.component';\nimport { LoggedInComponent } from './components/views/logged-in/logged-in.component';\nimport { ActivateComponent } from './components/views/start/activate/activate.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', component: StartComponent },\n      { path: 'new-wallet', component: NewWalletComponent },\n      { path: 'import', component: MnemonicImportComponent },\n      { path: 'connect-ledger', component: ConnectLedgerComponent },\n      {\n        path: 'account',\n        component: LoggedInComponent,\n        loadChildren: () => import(`./components/views/logged-in/logged-in.module`).then((module) => module.LoggedInModule)\n      },\n      { path: 'activate', component: ActivateComponent },\n      { path: 'serviceworker', component: TermsOfUseComponent },\n      { path: 'embedded', component: EmbeddedComponent }\n    ]\n  },\n  { path: 'privacy-policy', component: PrivacyPolicyComponent },\n  { path: 'terms-of-use', component: TermsOfUseComponent },\n  { path: '404', component: P404Component, data: { title: 'Page 404' } },\n  { path: '500', component: P500Component, data: { title: 'Page 500' } },\n  { path: '**', redirectTo: '404' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logged-in',\n  templateUrl: './logged-in.component.html'\n})\nexport class LoggedInComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-uri-handler></app-uri-handler>\n<router-outlet></router-outlet>\n<app-buy></app-buy>\n<app-buy-modal></app-buy-modal>","<div [style.display]=\"!isOpen ? 'none' : ''\" class=\"flex-column kukai-modal\">\n  <div class=\"content\">\n    <div class=\"flex-row top\">\n      <div class=\"flex-row button close\" (click)=\"close()\"><img class=\"x\"\n          src=\"../../../../../assets/img/close-btn-x.png\" />\n      </div>\n      <h1 class=\"title\">{{ title }}</h1>\n    </div>\n    <div class=\"flex-column info\">\n      <div class=\"message\">\n        {{ message }}\n      </div>\n      <div *ngIf=\"action\" class=\"flex-column bottom\">\n        <div class=\"seperator\"></div>\n        <button class=\"button confirm\" (click)=\"proceed()\">{{ action }}</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalComponent } from '../modal.component';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['../../../../scss/components/modals/modal.scss']\n})\nexport class InfoComponent extends ModalComponent implements OnInit {\n  action = '';\n  message = '';\n  href = '';\n  title = 'Info';\n  name = 'info';\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n\n  open(data: any): void {\n    this.action = data?.action;\n    this.message = data?.message;\n    this.href = data?.href;\n    this.title = data?.title || this.title;\n    super.open();\n  }\n\n  closeModal(): void {\n    super.close();\n  }\n  proceed(): void {\n    if (!!this.href) {\n      const newTab = window.open(this.href, '_blank');\n      newTab.focus();\n      newTab.opener = null;\n    }\n    this.closeModal();\n  }\n}\n","<ng-container *ngIf=\"!message?.timeout && message?.msg\">\n  <span *ngIf=\"!message?.email && !message?.username && !message?.twitterId && message?.msg\">{{ message.msg }}</span>\n  <span *ngIf=\"message?.email || message?.username || message?.twitterId\">Click <a target=\"_blank\"\n      href=\"{{ notifyFormat(message) }}\">here to notify</a> {{ getAlias(message) }} via {{ message.msg }}: <b>{{\n      message.amount }}</b> sent</span>\n  <svg version=\"1.2\" baseProfile=\"tiny-ps\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 14\" width=\"14\" height=\"14\"\n    class=\"flex-row button close\" (click)=\"removeMessage(index)\">\n    <title>Popups</title>\n    <g id=\"Popups\">\n      <g id=\"Confirmation TEZ\">\n        <g id=\"Close Button\">\n          <path id=\"Rectangle 13\" class=\"shp0\"\n            d=\"M13.46 0.54C14.18 1.25 14.18 2.41 13.46 3.12L3.12 13.46C2.41 14.18 1.25 14.18 0.54 13.46C-0.18 12.75 -0.18 11.59 0.54 10.88L10.88 0.54C11.59 -0.18 12.75 -0.18 13.46 0.54ZM3.12 0.54L13.46 10.88C14.18 11.59 14.18 12.75 13.46 13.46C12.75 14.18 11.59 14.18 10.88 13.46L0.54 3.12C-0.18 2.41 -0.18 1.25 0.54 0.54C1.25 -0.18 2.41 -0.18 3.12 0.54Z\" />\n        </g>\n      </g>\n    </g>\n  </svg>\n</ng-container>\n<ng-container *ngIf=\"message?.timeout && message?.msg\">\n  <span *ngIf=\"message?.msg\">{{ message.msg }}</span><img *ngIf=\"message?.loader\" class=\"loader\"\n    src=\"../../../../assets/img/wait.svg\">\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['../../../../scss/components/modals/alert/alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n  @Input() public message;\n  @Input() index;\n\n  constructor(public messageService: MessageService) {}\n  readonly subject = 'Sent you Tezos tokens';\n  ngOnInit(): void {\n    if (this.message?.timeout) {\n      setTimeout(() => {\n        this.removeMessage(this.index);\n        this.message = null;\n      }, this.message?.timeout);\n    }\n  }\n\n  removeMessage(index: number): void {\n    this.messageService.messages.splice(index, 1);\n  }\n  getHostName(): string {\n    return location.hostname;\n  }\n  notifyFormat(message: any): string | Error {\n    if (message.email) {\n      return this.mailtoFormat(message);\n    } else if (message.username) {\n      return this.redditPmFormat(message);\n    } else if (message.twitterId) {\n      return this.twitterPmFormat(message);\n    } else {\n      throw new Error('Invalid message');\n    }\n  }\n  mailtoFormat(message: any): string {\n    const subject = encodeURI(this.subject);\n    const body = this.encodedBody(message.amount, 'Google', `https://${this.getHostName()}\\n\\n`);\n    return `mailto:${message.email}?subject=${subject}&body=${body}`;\n  }\n  redditPmFormat(message: any): string {\n    // https://www.reddit.com/message/compose?to=USERNAME&subject=SUBJECT&message=MESSAGE\n    const subject = encodeURI(this.subject);\n    const body = this.encodedBody(`${message.amount}`, 'Reddit', `[kukai.app](https://${this.getHostName()})`);\n    return `https://www.reddit.com/message/compose?to=${message.username}&subject=${subject}&message=${body}`;\n  }\n  twitterPmFormat(message: any): string {\n    // https://twitter.com/messages/compose?recipient_id=USER_ID&text=MESSAGE\n    const body = this.encodedBody(message.amount, 'Twitter', `https://${this.getHostName()}`);\n    return `https://twitter.com/messages/compose?recipient_id=${message.twitterId}&text=${body}`;\n  }\n  encodedBody(amount: string, accountType: string, url: string): string {\n    const s = accountType === 'Reddit' ? '  ' : '';\n    const b = accountType === 'Reddit' ? '**' : '';\n    const t = accountType === 'Twitter' ? 'Tezos ' : '';\n    return encodeURI(\n      `Hi,${s}\\nI sent you ${b}${amount}${b} using the Kukai wallet.\\n\\nYou can access your ${t}wallet with your ${accountType} account at: ${url}`\n    );\n  }\n  getAlias(message: any): string {\n    return message.email ? message.email : message.username ? message.username : message.handler ? message.handler : 'recipient';\n  }\n}\n","<div class='msg-container'>\n  <div *ngFor=\"let message of messageService.messages ; let i = index\">\n    <app-alert [message]=\"message\" [index]=\"i\" class=\"flex-row alert\" [class]=\"'alert alert-'+message.type\">\n    </app-alert>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../../services/message/message.service';\nimport { TorusService } from '../../../services/torus/torus.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['../../../../scss/components/ui/messages/messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n  constructor(public messageService: MessageService, public torusService: TorusService) {}\n  ngOnInit(): void {}\n}\n","<div *ngIf=\"router.url.indexOf('/account/') > -1\" class=\"flex-row dropdown\" [class.expanded]=\"isOpen\"\n  [style.cursor]=\"['', 'domain'].includes(getVerifier()) ? '' : 'text'\" [id]=\"ecmpId\">\n  <div class=\"flex-row currentAddress\" (click)=\"['', 'domain'].includes(getVerifier()) ? toggleDropdown() : ''\"><img\n      *ngIf=\"!!getUsername(current?.address)\" class=\"logo\"\n      src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span class=\"address\">{{\n      getUsername(current?.address) || \"&nbsp;&nbsp;&nbsp;&nbsp;\" + current?.shortAddress() }}</span><img\n      *ngIf=\"['', 'domain'].includes(getVerifier())\" class=\"button icon-db\"\n      src=\"../../../../assets/img/down-arrow.svg\" />\n  </div>\n  <div class=\"flex-column dropdown-content\">\n    <div class=\"flex-column body\">\n      <ng-container *ngFor=\"let account of list; trackBy: trackAccount\">\n        <a class=\"option\" routerLink=\"/account/{{account?.address}}{{postfix}}\"\n          [class.selected]=\"account?.address === current?.address\"\n          [style.padding]=\"!getUsername(current?.address) ? '0.75rem 1.125rem 0.75rem calc(2.5rem - var(--border-width))' : ''\"\n          (click)=\"toggleDropdown()\">\n          <ng-container *ngIf=\"getUsername(account?.address)\">\n            <div class=\"flex-row alias\"><img class=\"logo\"\n                src=\"../../../../assets/img/{{ getVerifier() }}-logo.svg\" /><span>{{\n                getUsername(account?.address) }}</span></div>\n          </ng-container>\n          <ng-container *ngIf=\"!getUsername(account?.address)\">{{ account?.shortAddress() }}</ng-container>\n        </a>\n      </ng-container>\n    </div>\n    <div *ngIf=\"list?.length > 1\" class=\"option show-all\" [style.padding]=\"!getUsername(current?.address) ? '0.75rem 1.125rem 0.75rem calc(2.5rem - var(--border-width))' : ''\" (click)=\"showAll()\">\n      <span>Show All</span>\n    </div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { TorusWallet } from '../../../../services/wallet/wallet';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { DropdownComponent } from '../dropdown.component';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-ui-dropdown-account',\n  templateUrl: './account-dropdown.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/account-dropdown.component.scss']\n})\nexport class AccountDropdownComponent extends DropdownComponent implements OnInit, OnChanges, OnDestroy {\n  postfix = '';\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(public router: Router, public lookupService: LookupService, private walletService: WalletService) {\n    super();\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n        this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.list = this.options;\n    let accountAddress = this.router.url.substr(this.router.url.indexOf('/account/') + 9);\n    this.postfix = !!accountAddress.substring(36) ? accountAddress.substring(36) : '';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options && changes.options.currentValue !== changes.options.previousValue) {\n      this.list = this.options;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  getUsername(address: string): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.displayName();\n    } else {\n      const party = this.lookupService.resolve({\n        address: address || this.current?.address\n      });\n      if (party?.name) {\n        return party.name;\n      }\n    }\n    return '';\n  }\n  getVerifier(): string {\n    if (this.walletService.wallet instanceof TorusWallet) {\n      return this.walletService.wallet.verifier;\n    } else {\n      return 'domain';\n    }\n  }\n  showAll(): void {\n    ModalComponent.currentModel.next({ name: 'account-list', data: null });\n  }\n  trackAccount(index: number, account: any) {\n    return account?.address ? account.address : index;\n  }\n}\n","<div class=\"hamburger-dropdown\" [class.expanded]=\"isOpen\" [id]=\"ecmpId\">\n  <img class=\"button icon-db\" src=\"../../../../assets/img/hamburger.svg\" (click)=\"toggleDropdown()\" />\n  <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-column mobile dropdown-content\">\n    <div class=\"flex-row-wrap account-content\">\n      <div class=\"flex-column button\" (click)=\"unlockableService.toggleFeature('theme', 'dark');toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" [src]=\"this.unlockableService?.unlockables?.theme === 'dark' ? 'assets/img/light_mode_blue.svg' : 'assets/img/dark_mode_blue.svg'\" />\n        </div>\n        <span>THEME</span>\n      </div>\n      <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-column button\" (click)=\"copy();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/copy-blue.svg\" />\n        </div>\n        <span>COPY</span>\n      </div>\n      <div class=\"flex-column button\" (click)=\"receive();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/qr-blue.svg\" />\n        </div>\n        <span>QR</span>\n      </div>\n      <div *ngIf=\"walletService.isHdWallet()\" class=\"flex-column button\" (click)=\"newAccount();toggleDropdown()\">\n        <div class=\"wrapper\">\n          <img class=\"icon\" src=\"../../../../assets/img/add-blue.svg\" />\n        </div>\n        <span>ADD</span>\n      </div>\n    </div>\n    <div class=\"flex-row button delegation\" routerLink=\"/account/{{activeAccount?.address}}/stakers\"\n      (click)=\"toggleDropdown()\">\n      <div *ngIf=\"!activeAccount?.delegate\" class=\"flex-row\">\n        <span class=\"flex-row\">STAKING:</span><span class=\"choose\">NOT\n          STAKING</span>\n      </div>\n      <div *ngIf=\"activeAccount?.delegate\" class=\"flex-row\">\n        <span>STAKING</span>\n        <span class=\"flex-row address\">{{ delegateName\n          }}</span>\n      </div>\n    </div>\n\n    <div class=\"flex-row button\" [routerLink]=\"'/account/' + activeAccount?.address + '/settings'\" (click)=\"toggleDropdown()\">\n      <span>SETTINGS</span><img class=\"icon settings\" src=\"../../../../assets/img/cog.svg\" style=\"width: 2.75rem\" />\n    </div>\n    <div class=\"flex-row button\" (click)=\"logout();toggleDropdown()\">\n      <span>LOGOUT</span><img class=\"icon\" src=\"../../../../assets/img/sign-out-alt.svg\" style=\"width: 2.5rem\" />\n    </div>\n  </div>\n  <div *ngIf=\"router.url.indexOf('/account/') !== 0\" class=\"flex-column mobile dropdown-content\">\n    <div routerLink=\"/import/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Import Wallet</span>\n    </div>\n    <div routerLink=\"/new-wallet/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Create New Wallet</span>\n    </div>\n    <div routerLink=\"/connect-ledger/\" class=\"flex-row button\" (click)=\"toggleDropdown()\">\n      <span>Connect Ledger</span>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { DropdownComponent } from '../dropdown.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport copy from 'copy-to-clipboard';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\nimport { take } from 'rxjs/operators';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\n\n@Component({\n  selector: 'app-ui-mobile-menu',\n  templateUrl: './mobile-menu.component.html',\n  styleUrls: ['../../../../../scss/components/ui/dropdown/mobile-menu.component.scss']\n})\nexport class MobileMenuDropdownComponent extends DropdownComponent implements OnInit {\n  @Input() activeAccount: Account;\n  @Input() delegateName;\n  @Input() newAccount;\n  @Input() receive;\n\n  constructor(\n    public router: Router,\n    public walletService: WalletService,\n    public lookupService: LookupService,\n    private messageService: MessageService,\n    private translate: TranslateService,\n    private subjectService: SubjectService,\n    public unlockableService: UnlockableService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {}\n  toggleDropdown(): void {\n    if (window.innerHeight < document.body.scrollHeight) {\n      document.body.style.overflow = 'hidden';\n    }\n    this.isOpen = !this.isOpen;\n  }\n  copy(): void {\n    copy(this.activeAccount.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAccount.address + ' ' + copyToClipboard, 5);\n  }\n  openSwap() {\n    this.messageService.startSpinner();\n    ModalComponent.currentModel.next({ name: 'swap-liquidity', data: null });\n  }\n  logout(): void {\n    this.subjectService.logout.next(true);\n    this.messageService.clear();\n    this.walletService.clearWallet();\n    this.lookupService.clear();\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"flex-row top-container desktop\" [class]=\"router.url.indexOf('/account') === 0 ? 'default' : ''\">\n  <a routerLink=\"/\" class=\"flex-row brand-logo\">\n    <img class=\"icon\" src=\"../../../assets/img/header-logo.svg\" />\n  </a>\n  <div *ngIf=\"router.url.indexOf('/account/') === 0\" class=\"flex-row right\">\n    <div class=\"button icon\" (click)=\"unlockableService.toggleFeature('theme', 'dark')\">\n      <img [src]=\"this.unlockableService?.unlockables?.theme === 'dark' ? 'assets/img/light_mode.svg' : 'assets/img/dark_mode.svg'\" />\n      <div class=\"tooltip\">\n        <div class=\"description\">THEME</div>\n      </div>\n    </div>\n    <div class=\"flex-column left\">\n      <app-ui-dropdown-account [options]=\"accounts\" [current]=\"activeAccount\"></app-ui-dropdown-account>\n      <div class=\"delegation\">\n        <div class=\"flex-row outside-container\" *ngIf=\"!beaconMode\">\n          <div class=\"flex-row button\" routerLink=\"/account/{{activeAccount?.address}}/stakers\">\n            <span *ngIf=\"!activeAccount?.delegate\">STAKING: <span class=\"choose\">NOT\n                STAKED</span></span>\n            <span *ngIf=\"activeAccount?.delegate\" class=\"address\">STAKING: <span>{{ delegateName }}</span></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"flex-row right\">\n      <div class=\"button icon\" (click)=\"copy()\">\n        <img src=\"../../../assets/img/copy.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">COPY ADDRESS</div>\n        </div>\n      </div>\n      <div class=\"button icon receive\" (click)=\"receive()\">\n        <img src=\"../../../assets/img/qr.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">ADDRESS QR</div>\n        </div>\n      </div>\n      <div *ngIf=\"walletService.isHdWallet()\" class=\"button icon\" (click)=\"newAccount()\">\n        <img src=\"../../../assets/img/add.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">ADD ACCOUNT</div>\n        </div>\n      </div>\n      <div class=\"button icon settings\" [routerLink]=\"'/account/' + activeAccount?.address + '/settings'\">\n        <img src=\"../../../assets/img/settings.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">SETTINGS</div>\n        </div>\n      </div>\n      <div class=\"button icon\" (click)=\"logout()\">\n        <img src=\"../../../assets/img/logout.svg\" />\n        <div class=\"tooltip\">\n          <div class=\"description\">SIGN OUT</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"router?.url?.indexOf('/account/') !== 0\" class=\"flex-row right\">\n    <div class=\"right\">\n      <span *ngIf=\"router.url.indexOf('/import') === 0 || router.url === '/' || router.url.startsWith('/?type')\" routerLink=\"/import/\" class=\"button\"\n        [class.selected]=\"router.url.indexOf('/import') === 0\">Import Wallet</span>\n      <span *ngIf=\"router.url.indexOf('/new-wallet') === 0 || router.url === '/' || router.url.startsWith('/?type')\" routerLink=\"/new-wallet/\"\n        class=\"button\" [class.selected]=\"router.url.indexOf('/new-wallet') === 0\">Create New Wallet</span>\n      <span *ngIf=\"router.url.indexOf('/connect-ledger') === 0 || router.url === '/' || router.url.startsWith('/?type')\" routerLink=\"/connect-ledger/\"\n        class=\"button\" [class.selected]=\"router.url.indexOf('/connect-ledger') === 0\">Connect Ledger</span>\n      <span *ngIf=\"router.url.indexOf('/activate') === 0\" routerLink=\"/activate/\" class=\"button\"\n        [class.selected]=\"router.url.indexOf('/activate') === 0\">Activate</span>\n    </div>\n  </div>\n</div>\n<div class=\"flex-row top-container mobile\" [class]=\"router.url.indexOf('/account') === 0 ? 'default' : ''\">\n  <a routerLink=\"/\" class=\"flex-row brand-logo\">\n    <img class=\"icon\" src=\"../../../assets/img/header-logo.svg\" />\n  </a>\n  <div *ngIf=\"router.url.indexOf('/account/') > -1\" class=\"flex-row center\">\n    <app-ui-dropdown-account [options]=\"accounts\" [current]=\"activeAccount\" style=\"width: 100%;\">\n    </app-ui-dropdown-account>\n  </div>\n  <app-ui-mobile-menu [activeAccount]=\"activeAccount\" [delegateName]=\"delegateName\" [newAccount]=\"newAccount\" [receive]=\"receive\"></app-ui-mobile-menu>\n</div>","import { Component, OnInit, Input, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { WalletService } from '../../../../services/wallet/wallet.service';\nimport { Account } from '../../../../services/wallet/wallet';\nimport { LookupService } from '../../../../services/lookup/lookup.service';\nimport { MessageService } from '../../../../services/message/message.service';\nimport { CONSTANTS as _CONSTANTS } from '../../../../../environments/environment';\nimport { filter } from 'rxjs/operators';\nimport copy from 'copy-to-clipboard';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalComponent } from '../../../modals/modal.component';\nimport { DelegateService } from '../../../../services/delegate/delegate.service';\nimport { SubjectService } from '../../../../services/subject/subject.service';\nimport { Subscription } from 'rxjs';\nimport { DeeplinkService } from '../../../../services/deeplink/deeplink.service';\nimport { UnlockableService } from '../../../../services/unlockable/unlockable.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['../../../../../scss/components/views/layouts/header/header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnChanges, OnDestroy {\n  window = window;\n  document = document;\n  @Input() activeAccount: Account;\n  accounts: Account[];\n  delegateName = '';\n  readonly CONSTANTS = _CONSTANTS;\n  private subscriptions: Subscription = new Subscription();\n  constructor(\n    public router: Router,\n    private route: ActivatedRoute,\n    private deeplinkService: DeeplinkService,\n    public walletService: WalletService,\n    public lookupService: LookupService,\n    private messageService: MessageService,\n    private translate: TranslateService,\n    private delegateService: DelegateService,\n    private subjectService: SubjectService,\n    public unlockableService: UnlockableService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.subjectService.walletUpdated.subscribe(async () => {\n        this.accounts = this.walletService.wallet?.getAccounts();\n        this.delegateName = await this.getDelegateName(this.activeAccount?.delegate);\n      })\n    );\n    this.accounts = this.walletService.wallet?.getAccounts();\n    this.subscriptions.add(\n      this.route.queryParams.subscribe(async (params) => {\n        if (params?.type) {\n          this.deeplinkService.set(params);\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.router.events.pipe(filter((evt) => evt instanceof NavigationEnd)).subscribe(async (r: NavigationEnd) => {\n        document.body.scrollTop = 0;\n        if (!(this.accounts?.length > 0) && r.url.indexOf('/account/') === 0) {\n          this.router.navigateByUrl('/');\n        } else if (this.accounts?.length > 0 && !r.url.match(/terms\\-of\\-use|privacy\\-policy/g)) {\n          let accountAddress = r.url.substr(r.url.indexOf('/account/') + 9);\n          accountAddress = accountAddress.indexOf('/') !== -1 ? accountAddress.substring(0, accountAddress.indexOf('/')) : accountAddress;\n          if (!this.walletService.addressExists(accountAddress)) {\n            this.router.navigateByUrl(`/account/${this.accounts[0].address}`);\n            this.activeAccount = this.accounts[0];\n            this.subjectService.activeAccount.next(this.accounts[0]);\n          } else {\n            this.activeAccount = this.walletService.wallet?.getAccount(accountAddress);\n            this.subjectService.activeAccount.next(this.activeAccount);\n          }\n          this.delegateName = await this.getDelegateName(this.activeAccount?.delegate);\n        }\n      })\n    );\n  }\n\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\n    if (changes?.activeAccount?.currentValue) {\n      this.delegateName = await this.getDelegateName(changes?.activeAccount?.currentValue.delegate);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  logout(): void {\n    this.subjectService.logout.next(true);\n    this.messageService.clear();\n    this.walletService.clearWallet();\n    this.lookupService.clear();\n    this.router.navigate(['']);\n  }\n  copy(): void {\n    copy(this.activeAccount.address);\n    const copyToClipboard = this.translate.instant('OVERVIEWCOMPONENT.COPIEDTOCLIPBOARD');\n    this.messageService.add(this.activeAccount.address + ' ' + copyToClipboard, 5);\n  }\n\n  toggleDropdown(sel): void {\n    document.querySelector(sel).parentNode.classList.toggle('expanded');\n  }\n  newAccount(): void {\n    ModalComponent.currentModel.next({ name: 'new-implicit', data: null });\n  }\n  receive(): void {\n    ModalComponent.currentModel.next({\n      name: 'receive',\n      data: { address: this.activeAccount.address }\n    });\n  }\n\n  async getDelegateName(address: string): Promise<string> {\n    return address\n      ? (await this.delegateService.resolveDelegateByAddress(address))?.name ??\n          address.substring(0, 7) + '...' + address.substring(address.length - 4, address.length)\n      : address;\n  }\n}\n","<div *ngIf=\"this.path !== '/embedded'\" class=\"foot-container\" [class.dark]=\"true\">\n  <div class=\"flex-row links\">\n    <div class=\"flex-row left low\">\n      <a href=\"./terms-of-use\" target=\"_blank\">Terms of Use</a>\n      <a href=\"./privacy-policy\" target=\"_blank\">Privacy</a>\n      <a class=\"desktop\" target=\"_blank\" href=\"mailto:contact@kukai.app\">Contact</a>\n    </div>\n    <div class=\"flex-column since low\">\n      <div class=\"flex-row-wrap\" id=\"follow\">\n        <span>follow kukai on</span>\n        <a href=\"https://github.com/kukai-wallet/kukai\" target=\"_blank\"><img src=\"../../../assets/img/logo-github.svg\"></a>\n        <a (click)=\"promptTelegramDialog($event)\" id=\"tg\"><img src=\"../../../assets/img/logo-telegram.svg\"></a>\n        <a href=\"https://twitter.com/KukaiWallet/\" target=\"_blank\"><img src=\"../../../assets/img/logo-twitter.svg\"></a>\n        <a id=\"since\">Since 2018 &trade;</a>\n      </div>\n    </div>\n    <div class=\"flex-row low\">\n      <a class=\"mobile\" target=\"_blank\" href=\"mailto:contact@kukai.app\">Contact</a>\n        <a class=\"docs\" href=\"https://docs.kukai.app\" target=\"_blank\">\n          Help</a>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ModalComponent } from '../../../../components/modals/modal.component';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['../../../../../scss/components/views/layouts/footer/footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  darkText = false;\n  path = '';\n  ModalComponent = ModalComponent;\n  constructor() {}\n\n  ngOnInit(): void {}\n  promptTelegramDialog(ev) {\n    ev.preventDefault();\n    ModalComponent.currentModel.next({\n      name: 'info',\n      data: {\n        href: 'https://t.me/KukaiWallet',\n        message: `Social engineering attacks are currently a high threat on Telegram.\n\n• Do not answer anyone that sends you private messages or calls you\n\n• Do not click on any links in a private message, or share your seed words with anyone`,\n        title: 'Security Notice',\n        action: 'I understand'\n      }\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner-new',\n  templateUrl: './spinner-new.component.html',\n  styleUrls: ['./spinner-new.component.scss']\n})\nexport class SpinnerNewComponent implements OnInit {\n  @Input() logo: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<img class=\"spinner\" src=\"../../../../assets/img/spinner/gradientSpiral.svg\">\n<img class=\"logo\" src=\"../../../../assets/img/spinner/{{logo}}.svg\">","<ng-container *ngIf=\"messageService && messageService.spinnerOn\">\n  <app-spinner-new [logo]=\"logo\"></app-spinner-new>\n  <!-- <app-spinner-legacy *ngIf=\"!embedded\"></app-spinner-legacy> -->\n</ng-container>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MessageService } from '../../../services/message/message.service';\nimport { SubjectService } from '../../../services/subject/subject.service';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit, OnDestroy {\n  @Input() embedded: boolean;\n  logo = 'default';\n  private subscriptions: Subscription = new Subscription();\n  constructor(public messageService: MessageService, private subjectService: SubjectService) {}\n\n  ngOnInit(): void {\n    this.subjectService.origin.subscribe((o) => {\n      if (o?.endsWith('gap.com')) {\n        this.logo = 'gap';\n      } else if (o?.endsWith('truesy.com')) {\n        this.logo = 'truesy';\n      } else if (o?.endsWith('playwithbrio.com')) {\n        this.logo = 'brio';\n      } else if (o && o?.indexOf('interpop') !== -1) {\n        this.logo = 'minterPop';\n      } else {\n        this.logo = 'default';\n      }\n    });\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div *ngIf=\"displayAgreement\" class=\"agreement-wrapper fade-in\">\n  <div class=\"agreement-body\">\n    <div class=\"agreement-footer fade-in\">\n      <p>By Accessing, Continuing to Use & Browse this Website including its Services provided therein (“Kukai Wallet”),\n        you agree that you have read and reviewed our <a href=\"./terms-of-use\" target=\"_blank\">Terms of Use</a> and <a\n          href=\"./privacy-policy\" target=\"_blank\">Privacy Policy</a>.</p>\n      <div>\n        <div class=\"flex-column accept\">\n          <button class=\"fade-in\" (click)=\"accept()\">Accept</button>\n          <p>I have reviewed the Terms of Use and Privacy Policy, I hereby Accept and Agree to the Terms of Use and\n            Privacy Policy.</p>\n        </div>\n        <div class=\"flex-column decline\">\n          <a class=\"flex-column\" href=\"about:blank\"><button>Decline</button></a>\n          <p>I have reviewed the Terms of Use and Privacy Policy, I hereby DO NOT Accept and Agree to the Terms of Use\n            and Privacy Policy.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-agreement',\n  templateUrl: './agreement.component.html',\n  styleUrls: ['../../../../../scss/components/views/start/agreement/agreement.component.scss']\n})\nexport class AgreementComponent implements OnInit {\n  displayAgreement = false;\n  key = 'accepted-terms';\n  constructor(private location: Location) {}\n  ngOnInit(): void {\n    // localStorage.removeItem(this.key);\n    const accepted = localStorage.getItem(this.key);\n    const path = this.location.path();\n    if (!accepted && path !== '/terms-of-use' && path !== '/privacy-policy') {\n      this.displayAgreement = true;\n      const scrollBarWidth = window.innerWidth - document.body.offsetWidth;\n      document.body.style.marginRight = scrollBarWidth.toString();\n      document.body.style.overflowY = 'hidden';\n    }\n  }\n  accept(): void {\n    localStorage.setItem(this.key, '1');\n    this.displayAgreement = false;\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n  }\n  reject(): void {\n    document.body.style.marginRight = '';\n    document.body.style.overflowY = '';\n    window.open('', '_self');\n  }\n}\n","<div *ngIf=\"!CONSTANTS.MAINNET && !embedded\" class=\"network\"\n  [style.boxShadow]=\"document?.body.scrollTop !== 0 ? '0 2px 10px #3333' : ''\">\n  WARNING: TEST ONLY {{ CONSTANTS.NETWORK.toUpperCase() }}\n</div>\n<app-header *ngIf=\"!embedded\"></app-header>\n<router-outlet></router-outlet>\n<app-messages *ngIf=\"!embedded\"></app-messages>\n<app-spinner [embedded]=\"embedded\"></app-spinner>\n<app-agreement *ngIf=\"!embedded\"></app-agreement>\n<app-info></app-info>\n<app-footer *ngIf=\"!embedded\" [class.initial]=\"router.url !== '/'\"></app-footer>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { WalletService } from './services/wallet/wallet.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Location } from '@angular/common';\nimport { CONSTANTS as _CONSTANTS } from '../environments/environment';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  readonly CONSTANTS = _CONSTANTS;\n  embedded = false;\n  isMobile = false;\n  previous = 0;\n  current = 0;\n  diff = 0;\n  container = null;\n  post = false;\n  private subscriptions: Subscription = new Subscription();\n  constructor(private walletService: WalletService, public router: Router, public translate: TranslateService, private location: Location) {\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang('en');\n\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\n    const languagePreference = window.localStorage.getItem('languagePreference');\n    const browserLang = translate.getBrowserLang();\n    translate.use('en');\n  }\n\n  ngOnInit() {\n    this.checkEmbedded();\n    if (!this.embedded) {\n      this.walletService.loadStoredWallet();\n    }\n    this.subscriptions.add(\n      this.router.events.subscribe((event: Event) => {\n        if (event instanceof NavigationEnd) {\n          this.checkEmbedded();\n          window.scrollTo(0, 0);\n        }\n      })\n    );\n    if (!this.embedded) {\n      window.addEventListener('storage', (e) => {\n        this.handleStorageEvent(e);\n      });\n    }\n\n    const e = () => {\n      const brk = getComputedStyle(document.documentElement).getPropertyValue('--layout-break-5');\n      if (parseFloat(brk.replace(/[a-zA-Z]/g, '')) * 16 > document.documentElement.clientWidth) {\n        document.documentElement.style.setProperty('--is-mobile', '1');\n      } else {\n        document.documentElement.style.setProperty('--is-mobile', '0');\n      }\n    };\n    window.addEventListener('resize', e);\n    window.addEventListener('load', e);\n    e();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n  private handleStorageEvent(e: StorageEvent) {\n    if (e.key === 'kukai-wallet' && !this.embedded) {\n      if (e.oldValue && !e.newValue) {\n        window.location.reload();\n      } else if (!e.oldValue && e.newValue) {\n        setTimeout(async () => {\n          await this.router.navigate(['']);\n          window.location.reload();\n        }, 10000);\n      }\n    }\n  }\n  returnLanguage(lang: string) {\n    // this.translate.use(lang);\n    // console.log('lang ', lang);\n\n    const map: Map<string, string> = new Map([\n      ['en', 'English'],\n      ['cn', '中国'],\n      ['es', 'Español'],\n      ['fr', 'Français'],\n      ['ru', 'Pусский'],\n      ['jp', '日本語'],\n      ['kor', '한국어'],\n      ['por', 'Português'],\n      ['swe', 'Svenska']\n    ]);\n\n    const language = map.get(lang);\n\n    return language;\n  }\n  checkEmbedded() {\n    const path = this.location.path();\n    this.embedded = path.startsWith('/embedded');\n    const bg = this.embedded ? 'none' : '#f8f9fa';\n    if (!!this.embedded) {\n      document.documentElement.style.setProperty('--base-background-color', bg); // recheck\n      const resize = () => {\n        if (document.body.clientWidth < 540) {\n          document.documentElement.style.fontSize = '75%';\n        } else if (document.body.clientWidth < 650) {\n          document.documentElement.style.fontSize = '87.5%';\n        } else {\n          document.documentElement.style.fontSize = '100%';\n        }\n      };\n      window.addEventListener('resize', resize);\n      window.addEventListener('load', resize);\n      resize();\n    }\n  }\n  setLanguage(lang) {\n    window.localStorage.setItem('languagePreference', lang);\n    this.translate.use(lang);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value?: string, args?: number, endTrail?: boolean): string {\n    const limit = args ? args : 3;\n    const trail = '...';\n\n    let returnString;\n\n    if (endTrail && value.length > limit) {\n      const endTrailstring = value.slice(-limit);\n      returnString = value.substring(0, limit) + trail + endTrailstring;\n\n      return returnString;\n    } else {\n      return value.length > limit ? value.substring(0, limit) + trail : value;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\n// From Angular Material\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// For translation\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n// External libraries\nimport { AppComponent } from './app.component';\n\n// Services\nimport { MessageService } from './services/message/message.service';\nimport { WalletService } from './services/wallet/wallet.service';\nimport { ActivityService } from './services/activity/activity.service';\nimport { BalanceService } from './services/balance/balance.service';\nimport { EncryptionService } from './services/encryption/encryption.service';\nimport { ImportService } from './services/import/import.service';\nimport { TzrateService } from './services/tzrate/tzrate.service';\nimport { ExportService } from './services/export/export.service';\nimport { DelegateService } from './services/delegate/delegate.service';\nimport { InputValidationService } from './services/input-validation/input-validation.service';\nimport { LedgerService } from './services/ledger/ledger.service';\nimport { BeaconService } from './services/beacon/beacon.service';\nimport { TorusService } from './services/torus/torus.service';\nimport { EmbeddedAuthService } from './services/embedded-auth/embedded-auth.service';\nimport { TokenBalancesService } from './services/token-balances/token-balances.service';\nimport { SubjectService } from './services/subject/subject.service';\nimport { UnlockableService } from './services/unlockable/unlockable.service';\nimport { CoordinatorService } from './services/coordinator/coordinator.service';\nimport { OperationService } from './services/operation/operation.service';\n\n// View components\nimport { StartComponent } from './components/views/start/start.component';\nimport { NewWalletComponent } from './components/views/start/login-types/new-wallet/new-wallet.component';\nimport { MnemonicImportComponent } from './components/views/start/login-types/mnemonic-import/mnemonic-import.component';\nimport { MessagesComponent } from './components/ui/messages/messages.component';\nimport { ModalComponent } from './components/modals/modal.component';\nimport { HeaderComponent } from './components/views/layouts/header/header.component';\nimport { ConnectLedgerComponent } from './components/views/start/login-types/connect-ledger/connect-ledger.component';\nimport { FooterComponent } from './components/views/layouts/footer/footer.component';\nimport { AccountViewComponent } from './components/views/logged-in/account-view/account-view.component';\nimport { ActivityComponent } from './components/views/logged-in/account-view/activity/activity.component';\nimport { EventComponent } from './components/views/logged-in/account-view/activity/event/event.component';\nimport { NftsComponent } from './components/views/logged-in/account-view/nfts/nfts.component';\nimport { PendingComponent } from './components/views/logged-in/account-view/pending/pending.component';\nimport { BalancesComponent } from './components/views/logged-in/account-view/balances/balances.component';\nimport { BalanceTokenComponent } from './components/views/logged-in/account-view/balances/token/balance-token.component';\nimport { SpinnerComponent } from './components/ui/spinner/spinner.component';\nimport { AgreementComponent } from './components/views/start/agreement/agreement.component';\nimport { TermsOfUseComponent } from './components/views/start/agreement/terms-of-use/terms-of-use.component';\nimport { PrivacyPolicyComponent } from './components/views/start/agreement/privacy-policy/privacy-policy.component';\nimport { EmbeddedComponent } from './components/views/embedded/embedded.component';\nimport { SigninComponent } from './components/views/embedded/signin/signin.component';\nimport { CardComponent } from './components/views/embedded/card/card.component';\nimport { SendButtonComponent } from './components/ui/button/basic/send/send-button.component';\nimport { TokenDetail } from './components/modals/send/detail/token-detail.component';\nimport { AlertComponent } from './components/modals/alert/alert.component';\nimport { SpinnerLegacyComponent } from './components/ui/spinner/legacy/spinner-legacy.component';\nimport { SpinnerNewComponent } from './components/ui/spinner/new/spinner-new.component';\nimport { AccountDropdownComponent } from './components/ui/dropdown/account/account-dropdown.component';\nimport { MobileMenuDropdownComponent } from './components/ui/dropdown/mobile-menu/mobile-menu.component';\nimport { P404Component } from './components/views/error/404.component';\nimport { P500Component } from './components/views/error/500.component';\n\n// Modules\nimport { LoggedInModule } from './components/views/logged-in/logged-in.module';\n\n// Pipes\nimport { ErrorHandlingPipe } from './pipes/error-handling.pipe';\nimport { TruncatePipe } from './pipes/truncate.pipe';\nimport { TimeAgoPipe } from './pipes/time-ago.pipe';\nimport { DeeplinkService } from './services/deeplink/deeplink.service';\nimport { RemoveCommaPipe } from './pipes/remove-comma.pipe';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    // View components\n    NewWalletComponent,\n    StartComponent,\n    MnemonicImportComponent,\n    MessagesComponent,\n    ModalComponent,\n    HeaderComponent,\n    P404Component,\n    P500Component,\n    SendButtonComponent,\n    ConnectLedgerComponent,\n    FooterComponent,\n    AccountViewComponent,\n    ActivityComponent,\n    EventComponent,\n    NftsComponent,\n    PendingComponent,\n    BalancesComponent,\n    BalanceTokenComponent,\n    SpinnerComponent,\n    AgreementComponent,\n    TermsOfUseComponent,\n    PrivacyPolicyComponent,\n    EmbeddedComponent,\n    SigninComponent,\n    CardComponent,\n    TokenDetail,\n    SpinnerLegacyComponent,\n    SpinnerNewComponent,\n    AccountDropdownComponent,\n    MobileMenuDropdownComponent,\n    SpinnerLegacyComponent,\n\n    // Modals\n    ModalComponent,\n    AlertComponent,\n\n    // Pipes\n    ErrorHandlingPipe,\n    TruncatePipe,\n    TimeAgoPipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    LoggedInModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }) // lazy loading will need TranslateModule.forChild() in the lazy loaded modules\n  ],\n  providers: [\n    // Services\n    MessageService,\n    WalletService,\n    ActivityService,\n    EncryptionService,\n    BalanceService,\n    ImportService,\n    TzrateService,\n    CoordinatorService,\n    OperationService,\n    ExportService,\n    DelegateService,\n    InputValidationService,\n    LedgerService,\n    BeaconService,\n    TorusService,\n    EmbeddedAuthService,\n    SubjectService,\n    TokenBalancesService,\n    DeeplinkService,\n    UnlockableService,\n    // Pipes\n    ErrorHandlingPipe,\n    TruncatePipe,\n    TimeAgoPipe,\n    RemoveCommaPipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n  window.console.log = function () {};\n  window.console.dir = function () {};\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err));\n","var map = {\n\t\"./af\": 58685,\n\t\"./af.js\": 58685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 32614,\n\t\"./ar-kw.js\": 32614,\n\t\"./ar-ly\": 18630,\n\t\"./ar-ly.js\": 18630,\n\t\"./ar-ma\": 28674,\n\t\"./ar-ma.js\": 28674,\n\t\"./ar-sa\": 49032,\n\t\"./ar-sa.js\": 49032,\n\t\"./ar-tn\": 24730,\n\t\"./ar-tn.js\": 24730,\n\t\"./ar.js\": 254,\n\t\"./az\": 53052,\n\t\"./az.js\": 53052,\n\t\"./be\": 60150,\n\t\"./be.js\": 60150,\n\t\"./bg\": 63069,\n\t\"./bg.js\": 63069,\n\t\"./bm\": 13466,\n\t\"./bm.js\": 13466,\n\t\"./bn\": 18516,\n\t\"./bn-bd\": 90557,\n\t\"./bn-bd.js\": 90557,\n\t\"./bn.js\": 18516,\n\t\"./bo\": 26273,\n\t\"./bo.js\": 26273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 19815,\n\t\"./bs.js\": 19815,\n\t\"./ca\": 83331,\n\t\"./ca.js\": 83331,\n\t\"./cs\": 21320,\n\t\"./cs.js\": 21320,\n\t\"./cv\": 72219,\n\t\"./cv.js\": 72219,\n\t\"./cy\": 68266,\n\t\"./cy.js\": 68266,\n\t\"./da\": 66427,\n\t\"./da.js\": 66427,\n\t\"./de\": 67435,\n\t\"./de-at\": 52871,\n\t\"./de-at.js\": 52871,\n\t\"./de-ch\": 12994,\n\t\"./de-ch.js\": 12994,\n\t\"./de.js\": 67435,\n\t\"./dv\": 82357,\n\t\"./dv.js\": 82357,\n\t\"./el\": 95649,\n\t\"./el.js\": 95649,\n\t\"./en-au\": 59961,\n\t\"./en-au.js\": 59961,\n\t\"./en-ca\": 10860,\n\t\"./en-ca.js\": 10860,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 70864,\n\t\"./en-ie.js\": 70864,\n\t\"./en-il\": 91579,\n\t\"./en-il.js\": 91579,\n\t\"./en-in\": 30940,\n\t\"./en-in.js\": 30940,\n\t\"./en-nz\": 16181,\n\t\"./en-nz.js\": 16181,\n\t\"./en-sg\": 44301,\n\t\"./en-sg.js\": 44301,\n\t\"./eo\": 85291,\n\t\"./eo.js\": 85291,\n\t\"./es\": 54529,\n\t\"./es-do\": 53764,\n\t\"./es-do.js\": 53764,\n\t\"./es-mx\": 12584,\n\t\"./es-mx.js\": 12584,\n\t\"./es-us\": 63425,\n\t\"./es-us.js\": 63425,\n\t\"./es.js\": 54529,\n\t\"./et\": 35203,\n\t\"./et.js\": 35203,\n\t\"./eu\": 70678,\n\t\"./eu.js\": 70678,\n\t\"./fa\": 83483,\n\t\"./fa.js\": 83483,\n\t\"./fi\": 96262,\n\t\"./fi.js\": 96262,\n\t\"./fil\": 52521,\n\t\"./fil.js\": 52521,\n\t\"./fo\": 34555,\n\t\"./fo.js\": 34555,\n\t\"./fr\": 63131,\n\t\"./fr-ca\": 88239,\n\t\"./fr-ca.js\": 88239,\n\t\"./fr-ch\": 21702,\n\t\"./fr-ch.js\": 21702,\n\t\"./fr.js\": 63131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 23821,\n\t\"./ga.js\": 23821,\n\t\"./gd\": 71753,\n\t\"./gd.js\": 71753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 92762,\n\t\"./gom-deva.js\": 92762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 82809,\n\t\"./gu.js\": 82809,\n\t\"./he\": 45402,\n\t\"./he.js\": 45402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 10410,\n\t\"./hr.js\": 10410,\n\t\"./hu\": 38288,\n\t\"./hu.js\": 38288,\n\t\"./hy-am\": 67928,\n\t\"./hy-am.js\": 67928,\n\t\"./id\": 71334,\n\t\"./id.js\": 71334,\n\t\"./is\": 86959,\n\t\"./is.js\": 86959,\n\t\"./it\": 34864,\n\t\"./it-ch\": 51124,\n\t\"./it-ch.js\": 51124,\n\t\"./it.js\": 34864,\n\t\"./ja\": 36141,\n\t\"./ja.js\": 36141,\n\t\"./jv\": 29187,\n\t\"./jv.js\": 29187,\n\t\"./ka\": 42136,\n\t\"./ka.js\": 42136,\n\t\"./kk\": 94332,\n\t\"./kk.js\": 94332,\n\t\"./km\": 18607,\n\t\"./km.js\": 18607,\n\t\"./kn\": 84305,\n\t\"./kn.js\": 84305,\n\t\"./ko\": 70234,\n\t\"./ko.js\": 70234,\n\t\"./ku\": 16003,\n\t\"./ku.js\": 16003,\n\t\"./ky\": 75061,\n\t\"./ky.js\": 75061,\n\t\"./lb\": 32786,\n\t\"./lb.js\": 32786,\n\t\"./lo\": 66183,\n\t\"./lo.js\": 66183,\n\t\"./lt\": 50029,\n\t\"./lt.js\": 50029,\n\t\"./lv\": 24169,\n\t\"./lv.js\": 24169,\n\t\"./me\": 68577,\n\t\"./me.js\": 68577,\n\t\"./mi\": 68177,\n\t\"./mi.js\": 68177,\n\t\"./mk\": 50337,\n\t\"./mk.js\": 50337,\n\t\"./ml\": 65260,\n\t\"./ml.js\": 65260,\n\t\"./mn\": 52325,\n\t\"./mn.js\": 52325,\n\t\"./mr\": 14695,\n\t\"./mr.js\": 14695,\n\t\"./ms\": 75334,\n\t\"./ms-my\": 37151,\n\t\"./ms-my.js\": 37151,\n\t\"./ms.js\": 75334,\n\t\"./mt\": 63570,\n\t\"./mt.js\": 63570,\n\t\"./my\": 97963,\n\t\"./my.js\": 97963,\n\t\"./nb\": 88028,\n\t\"./nb.js\": 88028,\n\t\"./ne\": 86638,\n\t\"./ne.js\": 86638,\n\t\"./nl\": 50302,\n\t\"./nl-be\": 66782,\n\t\"./nl-be.js\": 66782,\n\t\"./nl.js\": 50302,\n\t\"./nn\": 33501,\n\t\"./nn.js\": 33501,\n\t\"./oc-lnc\": 50563,\n\t\"./oc-lnc.js\": 50563,\n\t\"./pa-in\": 50869,\n\t\"./pa-in.js\": 50869,\n\t\"./pl\": 65302,\n\t\"./pl.js\": 65302,\n\t\"./pt\": 49687,\n\t\"./pt-br\": 74884,\n\t\"./pt-br.js\": 74884,\n\t\"./pt.js\": 49687,\n\t\"./ro\": 79107,\n\t\"./ro.js\": 79107,\n\t\"./ru\": 33627,\n\t\"./ru.js\": 33627,\n\t\"./sd\": 30355,\n\t\"./sd.js\": 30355,\n\t\"./se\": 83427,\n\t\"./se.js\": 83427,\n\t\"./si\": 43906,\n\t\"./si.js\": 43906,\n\t\"./sk\": 54590,\n\t\"./sk.js\": 54590,\n\t\"./sl\": 20184,\n\t\"./sl.js\": 20184,\n\t\"./sq\": 56361,\n\t\"./sq.js\": 56361,\n\t\"./sr\": 78965,\n\t\"./sr-cyrl\": 81287,\n\t\"./sr-cyrl.js\": 81287,\n\t\"./sr.js\": 78965,\n\t\"./ss\": 25456,\n\t\"./ss.js\": 25456,\n\t\"./sv\": 70451,\n\t\"./sv.js\": 70451,\n\t\"./sw\": 77558,\n\t\"./sw.js\": 77558,\n\t\"./ta\": 51356,\n\t\"./ta.js\": 51356,\n\t\"./te\": 73693,\n\t\"./te.js\": 73693,\n\t\"./tet\": 21243,\n\t\"./tet.js\": 21243,\n\t\"./tg\": 42500,\n\t\"./tg.js\": 42500,\n\t\"./th\": 55768,\n\t\"./th.js\": 55768,\n\t\"./tk\": 77761,\n\t\"./tk.js\": 77761,\n\t\"./tl-ph\": 35780,\n\t\"./tl-ph.js\": 35780,\n\t\"./tlh\": 29590,\n\t\"./tlh.js\": 29590,\n\t\"./tr\": 33807,\n\t\"./tr.js\": 33807,\n\t\"./tzl\": 93857,\n\t\"./tzl.js\": 93857,\n\t\"./tzm\": 60654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 60654,\n\t\"./ug-cn\": 30845,\n\t\"./ug-cn.js\": 30845,\n\t\"./uk\": 19232,\n\t\"./uk.js\": 19232,\n\t\"./ur\": 47052,\n\t\"./ur.js\": 47052,\n\t\"./uz\": 77967,\n\t\"./uz-latn\": 32233,\n\t\"./uz-latn.js\": 32233,\n\t\"./uz.js\": 77967,\n\t\"./vi\": 98615,\n\t\"./vi.js\": 98615,\n\t\"./x-pseudo\": 12320,\n\t\"./x-pseudo.js\": 12320,\n\t\"./yo\": 31313,\n\t\"./yo.js\": 31313,\n\t\"./zh-cn\": 64490,\n\t\"./zh-cn.js\": 64490,\n\t\"./zh-hk\": 55910,\n\t\"./zh-hk.js\": 55910,\n\t\"./zh-mo\": 98262,\n\t\"./zh-mo.js\": 98262,\n\t\"./zh-tw\": 44223,\n\t\"./zh-tw.js\": 44223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["ModalComponent","constructor","cd","isOpen","name","modalSub","Subscription","this","currentModel","subscribe","load","forceClose","undefined","willOpen","open","data","close","detectChanges","ngOnInit","ngOnDestroy","unsubscribe","window","innerHeight","document","body","scrollHeight","style","marginRight","overflowY","Number","documentElement","getPropertyValue","setTimeout","scrollTo","top","BehaviorSubject","i0","selectors","decls","vars","template","encapsulation","QrScannerComponent","beaconService","deeplinkService","messageService","super","CONSTANTS","_CONSTANTS","env","environment","scanResponse","EventEmitter","override","manualInput","loadingCam","errorMessage","openModal","scan","QrScanner","videoplayer","_a","nativeElement","qrScanner","_b","result","handleQrCode","start","stop","destroy","e","console","warn","scanResult","qrString","log","pairingInfo","QRtoPairingJson","preNotifyPairing","addPeer","emit","pkh","closeModal","addError","handlePaste","ev","clipboardString","clipboardData","getData","viewQuery","ctx_r1","ctx_r2","Display","Size","AssetComponent","elRef","tokenService","display","image","size","medium","priorityList","controlsList","controls","requires","hideSpinner","muted","autoplay","loop","playsinline","inView","loaderUrl","unknownUrl","dataSrc","preSrc","postSrc","mimeType","errors","none","ngOnChanges","changes","assets","previousValue","currentValue","JSON","stringify","_c","_d","p0","assetToUrl","pickAsset","_e","p1","_f","from","to","reload","ngAfterViewInit","lazyLoad","updateDisplay","isImage","includes","isAudio","audio","isVideo","video","is3D","threeD","startsWith","onLoad","target","id","onLoadData","volume","onError","evaluateInvalid","type","uri","evaluate","poster","asset","determineMime","error","setSrc","obs","IntersectionObserver","entries","_","forEach","entry","isIntersecting","unobserve","observe","url","Error","MODEL_3D_WHITELIST","getContractAddressFromAsset","response","i","ok","fetch","method","headers","get","contractAddress","raw","slice","ToggleComponent","text","default","stateChange","state","toggle","inputs","outputs","AdvancedToggleComponent","features","consts","ctx","ctx_r7","width","height","gradient","getGradientBackground","chartArea","theme","getComputedStyle","replace","chartWidth","right","left","chartHeight","bottom","createLinearGradient","addColorStop","Chart","registerables","ChartSeries","ChartComponent","Object","attributes","datasets","labels","datas","options","ddSets","sets","set","units","layout","tooltipValue","drawn","chart","series","day","ddExpanded","chartExpanded","afterTooltipDraw","args","x","tooltip","dataPoints","element","yAxis","scales","y","save","beginPath","moveTo","lineTo","lineWidth","setLineDash","strokeStyle","stroke","textAlign","font","fillStyle","fillText","title","restore","toggleChartExpand","chartRef","parentElement","classList","refreshDDSets","sort","a","b","nameA","toLowerCase","nameB","draw","ChartTitle","find","ds","label","parseFloat","length","toString","toFixed","toLocaleString","_g","_h","getContext","_j","_k","map","plugins","toggleSeries","overrideDatasetConfig","getChartOptions","toggleSet","reset","key","keys","hidden","pointHoverBorderWidth","design","pointHitRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointBackgroundColor","backgroundColor","context","yTickPadding","padding","beginAtZero","position","ticks","maxTicksLimit","align","weight","family","textStrokeColor","z","callback","index","grid","drawBorder","responsive","maintainAspectRatio","legend","hover","mode","axis","intersect","tooltips","interaction","elements","line","tension","point","radius","enabled","titleColor","bodyColor","footerColor","displayColors","callbacks","item","dataset","dataIndex","DropdownComponent","ListComponent","dropdownResponse","ecmpId","closeDropdown","closest","toggleDropdown","hostBindings","current","list","_r12","_r15","EventComponent","translate","timeAgoPipe","activityService","subjectService","OpStatus","LookupType","fresh","subscriptions","trigger","setInterval","add","confirmedOp","opHash","activity","hash","getType","destination","address","operationType","source","account","explorerURL","getCounterparty","transaction","c","trim","getEventIcon","lookupType","getEventStatusIcon","status","printAmount","formatAmount","tokenId","amount","sentKind","entrypoint","zeroSent","receivedKind","split","getAddressPrefix","copy","copyToClipboard","instant","tmp_b_0","_r1","ctx_r5","_r2","ActivityComponent","trackEvent","block","NftsTokenComponent","tokenBalancesService","DisplayLinkOption","isNew","contractAliases","token","balance","viewToken","balanceChangeTimer","formatBalance","Big","div","Math","parseInt","decimals","SearchBarComponent","onInput","itemCount","matchCount","inputUpdated","Subject","filter","isActive","hasValue","placeholder","placeholderText","searchText","pipe","debounceTime","value","activeAccount","onKeydown","next","onFocus","searchButtonClicked","input","focus","onBlur","NftsBodyComponent","searchable","tokensToDisplay","loaded","filtered","chunkSize","sliceEnd","refresh","isDisplaying","tokens","search","cb","scrollTop","clientHeight","addEventListener","t","match","RegExp","isNaN","updateFilter","prevFilter","trackToken","ctx_r9","contract_r8","ctx_r0","NftsComponent","walletService","nfts","nftsArray","isDiscover","isInitLoad","activeAddress","nftsUpdated","p","getValue","flat","logout","o","displayTokenCard","sel","querySelector","innerWidth","scroll","offsetTop","shouldDisplayLink","option","wallet","TorusWallet","sanitizeKey","trackContract","contract","getContractAlias","category","join","BasicButtonComponent","SendButtonComponent","getAsset","tokenTransfer","prepareTransaction","prepareTokenTransfer","symbol","BalanceTokenComponent","removeCommaPipe","getBalance","balanceXTZ","getBalanceFiat","balanceUSD","price","buy","balance_r5","BalancesComponent","totalBalances","isFiat","balances","calcTotalBalances","walletUpdated","wrap","remove","ngAfterViewChecked","thumbnailAsset","toggleTotalBalances","reduce","prev","XTZrate","openSwap","startSpinner","ctx_r22","ctx_r11","ctx_r12","TokenDetail","unlockableService","tokenFiltered","moreInfo","imageExpanded","autoOverflow","descOverflow","isNFT","assetLoaded","blacklistMeta","feat","contains","description","expand","expandImage","toggleFeature","AccountViewComponent","moreThan15","ImplicitAccount","SettingsComponent","router","coordinatorService","implicitAccounts","wideAccounts","getImplicitAccounts","syncBeaconState","onResize","accountAvailable","findIndex","impAcc","formatAddress","rescan","resetCounters","update","navigate","rescanAll","resetAllMetadata","revealMnemonic","canRevealMnomonic","HdWallet","LegacyWalletV3","routes","path","component","DelegatePageComponent","delegateService","inputValidationService","messageServcie","customAddress","isShowingCustom","delegates","take","d","delegate","ceil","freeSpace","estimatedRoi","openForDelegation","minDelegation","obj","stake","round","val","toPercent","toggleCustom","ActivateComponent","LoggedInRoutingModule","RouterModule","LoggedInModule","SwapLiquidityService","ChartService","EstimateService","RemoveCommaPipe","imports","CommonModule","HttpClientModule","FormsModule","operationService","formInvalid","activate","checkInput","secret","ans","success","payload","res","addSuccess","addWarning","msg","err","activateFailed","code","WalletType","ErrorHandlingPipe","ERROR_LIST","transform","errorId","withObj","location","protocol","s","string","int","jsonWith","indexOf","lines","pure","TimeAgoPipe","timestamp","now","sec","secs","mn","mns","hr","hrs","days","month","months","year","years","timeNow","Date","getTime","diff","timediff","count","output","minutes","seconds","ActivityService","lookupService","indexerService","maxTransactions","tokenBalanceUpdated","updateTransactions","getAccount","getTransactonsCounter","flatMap","of","knownTokenIds","fromPromise","accountInfo","counter","unknownTokenIds","searchAllMetadata","recheckMetadata","updateTokenBalances","getAllTransactions","activities","storeWallet","upToDate","Array","isArray","idsWithBalance","push","updateTokenBalance","currentTokenIds","getTokenBalances","getOperations","resp","operations","oldActivities","unconfirmedOps","op","opNew","concat","oldState","promptNewActivities","counterParty","check","newActivities","shortAddress","ref","metadataUpdated","takeUntil","delay","modify","withLookup","resolve","factory","BalanceService","tzrateService","getBalanceAll","getAccounts","getAccountBalance","updateAccountBalance","newBalance","updateTotalBalance","updateFiatBalances","change","totalBalanceXTZ","BeaconService","tzktService","client","peers","permissions","pairInfoJson","pairInfo","parse","isNewPairingRequest","addBeaconWait","peersJson","localStorage","getItem","newPublicKey","publicKey","peer","force","removeBeaconMsg","icon","cacheIcon","json","cachedIcon","setItem","getPeers","getPermissions","removePeers","removePeer","senderId","getSenderId","peerResponse","removeAppMetadata","removePermissions","removeAllPermissions","removePermission","accountIdentifier","getAppMetadataList","rejectOnPermission","message","respondWithError","BeaconErrorType","rejectOnNetwork","rejectOnUserAbort","rejectOnSourceAddress","rejectOnTooManyOps","rejectOnUnknown","rejectOnParameters","rejectOnBroadcastError","errorType","requestMessage","BeaconMessageType","version","BEACON_VERSION","beaconId","respond","approvePermissionRequest","network","scopes","approveSignPayloadRequest","signature","signingType","responseSync","removeItem","providedIn","swapLiquidityService","stats","fetchLBGraphData","tzbtc","fetchHistoricalQuotesByContract","tzBTCContract","fetchHistoricalStatsByContract","lqdContract","interval","reverse","tvlUsd","getDate","getHours","defaultDatasetValues","borderColor","borderRadius","borderWidth","pointBorderWidth","pointBorderColor","pointRadius","pointHoverColor","fill","XTZtzBTC","tzBTCXTZ","totalValueLocked","offset","req","query","quotes1h","quotes1d","stats1d","SignalService","balanceService","connection","init","HubConnectionBuilder","withUrl","build","on","sender","invoke","parameter","confirmStatus","onclose","__awaiter","updateAccountData","acc","handleDelegateResponse","subscribeToAccount","types","State","CoordinatorService","dipdupService","signalService","scheduler","Map","defaultDelayActivity","shortDelayActivity","longDelayActivity","defaultDelayPrice","stopAll","accounts","startXTZ","tzrateInterval","getTzrate","fetchTokensMidPrice","recheckWalletAddresses","restoreFeatures","scheduleData","UpToDate","stateCounter","setDelay","boost","metadata","addressExists","addUnconfirmedOperations","Wait","changeState","Updating","latestActivity","shift","newState","time","delete","transactions","times","fee","parameters","unshift","delegation","origination","kt1","DeeplinkService","pairingJson","params","extractPairingJson","b58cdecode","popPairingJson","qrPayload","DelegateService","bb","getDelegates","getDelegate","then","resolveDelegateByAddress","Promise","EncryptionService","encrypt","plaintext","password","salt","encrypt_v2","decrypt","chiphertext","decrypt_v1","decrypt_v2","encrypt_v1","pbkdf2","AES","salty","Buffer","cryptob","scrypt","cipher","forge","iv","byteStringBuffer","finish","toHex","tag","chipher","parts","decipher","shiftIV","isInteger","buf","http","imputValidationService","costPerByte","revealGasLimit","queue","nodeURL","contractsOverride","chainId","manager","pk","preLoadData","head","all","getHeader","toPromise","getCounter","getManager","chain_id","estimateTransactions","estimate","estimateOrigination","isOrigination","retry","_estimate","catch","simulation","gasLimit","min","floor","storageLimit","tx","createOriginationObject","createTransactionObject","simulate","contents","reveal","limits","kind","operation_result","opObj","gas","storage","getOpUsage","localForge","fop","bytes","totalGasLimit","totalStorageLimit","dtp","customLimits","recommendFee","burn","burnFee","content","gasUsage","minus","plus","balance_updates","balanceUpdate","consumed_milligas","internal_operation_results","internalResult","storageUsage","getOpLimits","gasUnits","numberOfOperations","postRpc","operation","checkApplied","catchError","errHandler","limit","contractOverride","gasRecommendation","relativeLimit","percentage","max","gasEstimation","storageRecommendation","storageEstimation","getRpc","DipDupService","storeKey","maxTokensReturned","rehydrate","exchange","exchanges","sharesTotal","Boolean","midPrice","store","fromEntries","midPrices","refreshTokens","parsed","IndexerService","isUsedAccount","getContractAddresses","getTokenMetadata","skipTzkt","TzktService","tokenBalanceCache","TZKT_TOKEN_QUERY_SIZE","Tezos","TezosToolkit","customHandlers","IpfsHttpHandler","TezosStorageHandler","customMetadataProvider","MetadataProvider","addExtension","Tzip12Module","originatedContract","getHashAndBlockByIds","transactionIds","tokenBalances","getAllTokenBalances","digest","tokenBalancesCount","ops","hasInternals","opId","extractEntrypoint","newDelegate","contractBalance","tokenTxs","tokenArr","opIds","transactionId","extra","substring","meta","tokenType","standard","normalizeMetadata","filterMetadata","getTokenMetadataWithTaquito","at","tzip12","parsed_uri","token_metadata_uri","fetchToken","tzktTokensResponse","toAsset","formats","charAt","aryCamelKey","char","toUpperCase","camelKey","hasOwnProperty","mutableConvertObjectPropertiesSnakeToCamel","handleMetadataExceptions","isTransferable","shouldPreferSymbol","isBooleanAmount","displayUri","thumbnailUri","artifactUri","f","getEntrypointMicheline","michelineParameters","InputValidationService","mnemonics","validMnemonic","zxcvbn","score","passwordStrengthDisplay","validAddress","torusAccount","verifierId","loginType","email","redditAccount","twitterAccount","tezosDomain","username","test","domain","sub","twitterId","passphrase","expr","endsWith","derivationPath","hexString","hex","isMessageSigning","isMichelineExpr","parsedPayload","valueDecoder","Uint8ArrayConsumer","invalidMnemonic","words","utils","wordCount","w","word","bip39","LookupService","torusService","tezosDomainsService","records","pendingLookups","initCheck","lookups","TezosDomains","clear","mark","indexTop","getDomainFromAddress","torusLookup","torusKeyLookup","Verifiers","verifierMap","verifier","Google","Reddit","verifierArray","twitterLookup","Twitter","noReveal","torusEntryExist","record","j","party","alias","Alias","MessageService","spinnerOn","spinnerText","messages","defaultTime","beaconResponse","pairingCompleteMsg","timeout","newMessage","emailNotify","redditNotify","twitterNotify","handler","loader","splice","stopSpinner","httpOptions","OperationService","errorHandlingPipe","prefix","tz1","Uint8Array","tz2","tz3","edpk","sppk","edsk","spsk","edsig","spsig","sig","B","TZ","KT","microTez","feeHardCap","header","branch","opbytes","sopbytes","preApplyResult","final","opCheck","newPkh","originate","actions","gas_limit","storage_limit","public_key","script","transfer","currentFee","invocation","txAmount","mod","eq","getFA12Transaction","getFA2Transaction","transactionOp","managerTransaction","getContractPkhTransaction","getContractKtTransaction","delegationOp","getContractDelegation","getContractUnDelegation","localOpbytes","sk","signed","sign","sbytes","applied","originated_contracts","unsignedOperation","broadcast","sig2edsig","localForger","tz2address","decompress","torusReq","jsonrpc","pub_key_X","X","pub_key_Y","Y","post","PublicKey","failed","ior","n","with","statusText","localForgedBytes","getVotingRights","listings","isRevealed","getVerifiedOpBytes","operationLevel","operationHash","opHashes","opIndex","managerPubkey","manager_pubkey","opBytes","pk2pkh","verify","buf2hex","getConstants","seed2keyPair","seed","keyPair","naclSign","b58cencode","secretKey","blake2b","mnemonic2seed","mnemonic","mnemonic2entropy","pkDecoded","spPrivKeyToKeyPair","hex2buf","elliptic","keyFromPrivate","yArray","getPublic","getY","toArray","prefixVal","pad","getX","isInvertedPk","invertSpsk","inv","remainder","spPointsToPkh","pubX","pubY","keyFromPublic","decodedPk","hexPk","secp256k1","instantiateSecp256k1","compressed","hexToBin","uncompressed","uncompressPublicKey","xy","binToHex","hex2pk","h","buffer","byteArray","hexParts","paddedHex","prefixx","Bs58check","enc","ledgerPreHash","canonical","r","hexsigToEdsig","decodeString","zarithDecode","byte","zarithDecodeInt","prim","getManagerScript","pkHex","annots","getApproveAmountParameters","getRevokeAmountParameters","getXTZToTokenParameters","minimum","expirationTime","getTokenToXTZParameters","minimumToken","minimumXTZ","getAddLiquidityParameters","minimumLqt","getRemoveLiquidityParameters","lqtBurn","minXtzWithdrawn","minTokensWithdrawn","getTezToTokenPaymentParameters","getTokenToTezPaymentParameters","minimumXtz","parseTokenTransfer","opJson","addresses","amounts","fa12ref","isEqual","fa2ref","String","retryPipeline","retries","retryWhen","concatMap","iif","throwError","delayOperator","retryWithWarning","BuyProvider","SubjectService","origin","Amount","decimalPlaces","internalBigInt","internalNormalised","rpcAmount","normalisedAmount","multiplierIntValue","pow","lqdTokenContract","dipdupContracts","fetchContracts","dipdupContract","fetchStorage","total_pool","tez_pool","token_pool","settings","dex","includeSubsidy","createPoolAmounts","xtzPool","tokenPool","calculateXtzToToken","xtzToSell","maxSlippage","expected","xtzToTokenExpectedReturn","xtzToTokenMinimumReturn","rate","xtzToTokenExchangeRateDisplay","priceImpact","xtzToTokenPriceImpact","impactDouble","calculateXtzToTokenFromToken","tokenToSell","calculateTokenToXTZ","xtz","tokenToXtzExpectedReturn","tokenToXtzMinimumReturn","tokenToXtzExchangeRateDisplay","tokenToXtzPriceImpact","calculateTokenToXTZFromXTZ","calculateAddLiquidityXTZ","totalLiquidity","tokenRequired","addLiquidityTokenRequired","liquidityReturned","addLiquidityReturn","exchangeRate","liquidityExpected","liquidityMinimum","calculateAddLiquidityToken","xtzRequired","addLiquidityXtzRequired","calculateRemoveLiquidity","liquidityBurned","xtzOut","removeLiquidityXtzReceived","tokenOut","removeLiquidityTokenReceived","xtzExpected","xtzMinimum","tokenExpected","tokenMinimum","xPool","tPool","dexterCalculations","includeSibsidy","tokenAmount","slippage","xtzToTokenRequiredXtzFor","xtzPoolRpc","tokenPoolRpc","xtzToTokenExchangeRate","xtzAmount","tokenToXtzRequiredTokenFor","tokenToXtzExchangeRate","tokenToXtzMarketRate","xtzToDeposit","xtzIn","totalLqt","tokenToDeposit","tokenIn","lqtBurned","tLqt","estimateLiquidityBakingAPY","TezosDomainsService","pending","tezosToolkit","Tzip16Module","caching","TaquitoTezosDomainsClient","tezos","getAddressFromDomain","resolver","resolveNameToAddress","collect","reject","q","items","getDomainFromAddresses","promise","baseUrl","reverseRecords","TokenBalancesService","_thumbnailsToCreate","combineLatest","resolveAsset","contractAlias","CONTRACT_ALIASES","thumbnailUrl","getContractName","getContractLogo","link","visitUrl","getPlaceholderToken","orderedNfts","mergeMarket","getThumbnailUrl","_nfts","aliases","pixels","decode","canvas","createElement","imageData","createImageData","putImageData","toDataURL","ObjktService","resolveToken","resolveCollection","sleep","resolveCollections","contractAddresses","_objkts","fa","objkts","objkt","logo","ms","TokenService","objktService","AUTO_DISCOVER","contracts","exploredIds","pendingSave","unlockablesKey","workers","loadMetadata","saveMetadata","events","evt","NavigationEnd","className","tokenIdArray","ids","idx","span","first","last","gte","lte","displayAsset","artifactAsset","isKnownTokenId","tokenIds","contractKeys","contractKey","tokenKeys","tokenKey","isCategoryType","regex","isKnownTokenContract","addAsset","currentKeys","newKeys","checkObjktData","updated","_objkt","_saveMetadata","searchMetadata","tokenObject","ttl","exp","lastCheck","explore","startWorker","recentDay","firstCheck","handleMetadata","tokenCategory","TRUSTED_TOKEN_CONTRACTS","t1","searchTimeMs","isUnknownToken","metadataJson","BLACKLISTED_TOKEN_CONTRACTS","baseUnit","GOOGLE","REDDIT","TWITTER","FACEBOOK","EMAIL","AUTH_DOMAIN","AUTH_DOMAIN_MAINNET","TorusService","torus","nodeDetails","verifierMaps","testnet","typeOfLogin","clientId","subVerifier","caseSensitiveVerifierID","aggregated","mainnet","_loginToConnectionMap","scope","verifierIdField","isVerifierIdCaseSensitive","isVerifierCaseSensitive","proxy","verifierMapKeys","initTorus","torusdirectsdk","DirectWebSdk","redirectToOpener","enableLogging","proxyContractAddress","skipSw","lookupPkh","selectedVerifier","fetchNodeDetails","FetchNodeDetails","proxyAddress","TorusUtils","torusNodeEndpoints","torusNodePub","torusIndexes","getNodeDetails","sanitizedVerifierId","toLocaleLowerCase","getPublicAddress","referrerPolicy","loginTorus","skipTorusKey","checkIfNewKey","host","mockLogin","jwtParams","login_hint","loginDetails","triggerAggregateLogin","aggregateVerifierType","verifierIdentifier","subVerifierDetailsArray","triggerLogin","userInfo","accessToken","privateKey","existingPk","preexistingPkh","isNewKey","getTorusKeyPair","TzrateService","apiUrl","usd","tot","totalBalanceUSD","UnlockableService","settingsKey","unlockables","WalletService","encryptionService","storageId","createNewWallet","createEncryptedWallet","hdSeed","entropy","hd","encrypted","encryptedSeed","iv2","encryptedEntropy","exportKeyStoreInit","getKeys","pwd","LegacyWalletV1","LegacyWalletV2","IV","LedgerWallet","EmbeddedTorusWallet","getImplicitAccount","revealMnemonicPhrase","addImplicitAccount","addOriginatedAccount","kt","implicitAccount","origAcc","OriginatedAccount","originatedAccounts","incrementAccountIndex","clearWallet","instanceId","sessionStorage","isFullWallet","FullWallet","isViewOnlyWallet","isObserverWallet","isLedgerWallet","isHdWallet","isTorusWallet","isEmbeddedTorusWallet","isWatchWallet","WatchWallet","isPwdWallet","walletType","provider","initStorage","localStorageId","getLocalStorageId","getStorage","walletData","loadStoredWallet","parsedWalletData","wd","deserializeStoredWallet","implicit","originated","Wallet","originatedAccount","encrypedSeed","displayName","Account","getTokenBalance","isImplicit","ktAddress","managerPkh","managerPk","NETWORK","NAME","TEZOS_DOMAIN","TOP_DOMAINS","MAINNET","NODE_URL","API_URL","BLOCK_EXPLORER_URL","HARD_LIMITS","hard_gas_limit_per_operation","hard_gas_limit_per_block","hard_storage_limit_per_operation","ASSETS","NFT_CONTRACT_OVERRIDES","CONTRACT_OVERRIDES","FEATURE_CONTRACTS","production","_TTC","_BLTC","_M3DW","ImportService","pwdRequired","importWalletFromJson","importWalletFromObject","findContracts","importWalletFromPk","verifierDetails","ledgerImport","torusImport","watch","embedded","updateTwitterName","StartComponent","importService","route","isMobile","queryParams","devtool","prompt","torusLogin","ExportService","downloadWallet","blob","Blob","filename","saveAs","downloadOperationData","$event","stopPropagation","NewWalletComponent","exportService","showTacos","pwd1","pwd2","userMnemonic","hideBlur","isSelectedMnemonic","pwdStrength","ekfDownloaded","activePanel","longClickTs","generateSeed","MNEMONIC","array","wordsToVerify","mnemonicLength","random","checkWord","wordInput","getElementById","blur","formatVerifyDescription","indexFormat","valueFormat","verifyView","pwdView","mnemonicMatch","encryptWallet","preventDefault","validPwd","offsetWidth","calcStrength","done","export","getPkh","download","mouseOut","getSelection","removeAllRanges","checkSelection","isTextSelected","selection","isCollapsed","hostVars","_r5","ctx_r15","ctx_r41","ctx_r43","ctx_r44","MnemonicImportComponent","MIN_PWD_LENGTH","importOption","hdImport","Downloaded","fileName","browser","advancedForm","bip39Wordlist","navigation","getCurrentNavigation","extras","allowDrop","bind","handleFileDragAndDrop","clickPassword","removeAttribute","blurPassword","setAttribute","retrieve","setPwd","showPkh","importPreCheck","keyFile","typeCheckFile","walletJson","checkImportPwd","import","handleFileInput","dataTransfer","files","fileToUpload","validateFile","fileNotSupported","reader","FileReader","readAsText","onload","ext","lastIndexOf","seedWordKeydown","keyCode","selectionStart","selectionEnd","wordPos","charPos","metaKey","ctrlKey","second","firstSplit","pop","selStart","getAttribute","selEnd","LedgerService","setTransport","transport","TransportWebHID","TransportU2F","transportCheck","getAddress","sanitize","signOperation","signHash","getPk","ConnectLedgerComponent","ledgerService","defaultPath","defaultText","pendingLedgerConfirmation","isHDDerivationPathCustom","checkBrowser","navigator","userAgent","userAgentData","brands","some","brand","platform","importFromPk","setDefaultPath","v","P404Component","P500Component","PrivacyPolicyComponent","getHostName","hostname","TermsOfUseComponent","EmbeddedAuthService","authenticate","authReq","authMessage","createAuthMessage","nonce","signMessage","signExprSilent","hexExpr","requestId","authPayload","purpose","currentTime","_network","Parser","parseMichelineExpression","hexMessage","valueEncoder","LqdEntrypoints","ctx_r40","ctx_r42","Mode","zeroTxParams","SwapLiquidityComponent","estimateService","tezosDomainService","tezosDomains","chartService","prepareResponse","swap","xtzToToken","defaultTransactionParams","latestSimError","customFee","customGasLimit","customStorageLimit","minimumLqd","qty","qtyRaw","qtyOut","qtyRawOut","xtzBalance","lqdBalance","tzBTCBalance","simSemaphore","chartDatas","chartOptions","chartInit","setTokenBalances","initChartsMobile","arr","leftChart","miniChart","tokenToXtz","addLiquidity","removeLiquidity","initChartsDesktop","initCharts","birthExchangeRate","expectedRate","hydratePools","APY","_super","call","xtzToBuy","tokenToBuy","calcSwap","calcAddLiquidity","toSell","calcRemoveLiquidity","lqtToBurn","estimateFees","preview","getFullyPreparedTxs","toggleMode","chartToggle","liquidity","toggleDirection","dir","evalAmount","getTotalFee","getTotalBurn","mul","burnAmount","customSlippage","customSlippageFocus","customSlippageBlur","getMaxAmount","accountBalance","tez","lqd","tzBTC","prevSimError","txs","getMinimalPreparedTxs","checkBalances","updateMaxAmount","assert","minimalTxs","opsWithCustomLimits","extraGas","extraStorage","extraGasPerOp","extraStoragePerOp","fullyTx","maxTez","maxLQD","maxtzBTC","gt","sanitizeNumberInput","openInfoModal","ctx_r8","ctx_r50","ctx_r32","ctx_r72","ctx_r75","_r16","ConfirmSendComponent","tokenBalanceService","confirmRequest","operationResponse","externalReq","schema","batchParamIndex","micheline","batchParameters","parametersFormat","parametersDisplay","transformedParameters","extractedSchema","showAll","showFullBatch","sendResponse","ledgerError","pwdInvalid","syncSub","closeModalAction","loadParameters","num","updateParameters","parametersToMicheline","sc","Schema","Execute","parametersToTabular","children","setParametersFormat","beaconTokenTransfer","assertMichelsonData","emitMicheline","indent","newline","traverse","level","isObject","valueOf","getTotalAmount","totalSent","getTotalCost","totalFee","totalActiveStorageLimit","getTotalDefaultStorage","getTotalDefaultGas","totalGas","totalStorage","getQuantity","totalAmount","ledgerRetry","sendTransaction","inject","broadCastLedgerTransaction","torusNotification","requestLedgerSignature","signedOp","signedOperation","getUsername","getVerifier","previewAttention","recipientKind","tmp","toggleTab","elem","tagName","ctx_r3","PrepareSendDropdownComponent","torusVerifierName","torusVerifier","ctx_r18","ctx_r19","ctx_r45","ctx_r47","ctx_r48","PrepareSendComponent","prepareRequest","active","isMultipleDestinations","hideAmount","accountDropdownIsOpen","torusLookupId","torusLookupAddress","torusTwitterId","torusPendingLookup","toMultipleDestinationsString","prevEquiClass","sendMax","toPkh","clearTorus","getTitle","getAssetName","short","amountChange","equiClass","checkBalance","updateDefaultValues","toPkhChange","finalCheck","getBatch","invalidTorusAccount","torusReady","checkTx","row","cols","col","torusError","google","reddit","twitter","sendEntireBalance","event","checkMaxAmount","toggleDestination","maxToSend","maxKt","maxTz","maxAmount","verifierChange","batchSpace","numberOfTxs","txsLimit","numberWithCommas","dynSize","pasteToPkh","clipboard","readText","clipText","handleScanResponse","_r8","_r19","_r27","ctx_r25","_r31","ConfirmSendEmbedComponent","templateRequest","isApproved","showMore","descriptions","hideScrollbar","cancel","approve","resetScrollbar","scrollBarWidth","overflow","_r13","SwapLiquidityConfirmComponent","semaphore","confirmTitle","parseTransactions","csr","hasTrailingZeroApproval","values","expectedXtz","expectedToken","expectedLqd","SendComponent","confirmSwapLiquidityRequest","thresholdUSD","swapLiquidityEntrypoints","externalRequest","selectedAccount","checkOpReq","operationRequest","opReq","operationDetails","silent","validParameters","simulateRequest","tokenTransferObj","getTokenTransferObj","partialOps","fullyPrepared","getTemplateFee","total","silentInject","confirmTransactions","isLbReq","Set","_l","_m","_o","_p","_q","_r","_s","_t","handlePrepareResponse","preparedTransactions","handleConfirmResponse","handleTemplateApproval","_r10","ExprTemplateComponent","SignExprEmbedComponent","signResponse","isMessage","signRequest","ui","acceptSigning","rejectSigning","QueueEmbedComponent","queueTime","hours","updateTime","key_r9","SigninComponent","loginResponse","loginOptions","queueTimeVisible","queueLen","statusCounter","queueEndpoint","viewportCheck","loginConfig","customPrio","LoginPrio","queueLenInterval","getQueueLen","dismiss","startQueue","loginOption","screen","setHighPrio","queueInterval","timeBetweenChecks","checkQueue","stopQueue","clearInterval","abort","animation","back","login","loginData","len","setLowPrio","skipQueue","action","identity","groups","updateQueue","EstimatedTimeSeconds","Status","triesLeft","CardComponent","Permission","EmbeddedComponent","embeddedAuthService","permissionMatrix","brio","origins","minterpop","interpop","humanMachine","ubisoft","gap","micheline_silent","manutd","lexus","blockspace","evian","souvie","tzstaging","studioexception","cleantree","vitality","kanvas","proofof","emergents","thegoodsociety","circa","mooncakes","truename","verticalcrypto","playrecord","pendingOps","blockCard","queueMode","currentInstanceId","handleRequest","hasPermission","RequestTypes","handleLoginRequest","handleOperationRequest","handleSignExprRequest","handleTrackRequest","handleLogoutRequest","handleAuthRequest","handleCardRequest","background","attachEvent","parent","postMessage","ResponseTypes","MICHELINE","MICHELINE_SILENT","normalizeTemplate","LOGIN","config","customSpinnerDismissal","OPERATIONS","isValidOperation","noWalletError","toImport","idToken","long_lived_token","filteredUserInfo","generateInstanceId","userData","authParams","authResponse","strictAuth","importAccount","show","common","ophashSubscription","subscribeToConfirmedOps","permission","allowedOrigin","ReceiveComponent","showReceiveFormat","btnOutline","dropdownItem","getQR","QRCode","errorCorrectionLevel","scaleFactor","color","light","NewImplicitComponent","errorMsg","openPkhSpot","addPkh","navigateByUrl","PermissionRequestDropdownComponent","PermissionRequestComponent","permissionResponse","preSelectedAccount","permissionRequest","rejectPermissions","grantPermissions","scopeToText","app","SignExprComponent","isDeku","ctx_r21","ctx_r24","OriginateComponent","beaconMode","customGas","customStorage","simError","activeTab","isValidOrigination","recommendations","clearForm","assertMichelsonContract","getOrigination","getScript","validateOrigination","sendOrigination","ledgerSign","keyPressNumbersDecimal","charCode","which","_r3","DelegateComponent","domainPendingLookup","defaultFee","pkhFee","ktFee","advanced","snapshot","paramMap","estimateDefaultFee","pwdValid","sendDelegation","getFee","revealed","revealFee","invalidInput","AccountListBodyComponent","postfix","accountAddress","substr","selRef","viewRef","getTotalBalance","getTotalFiat","AccountListComponent","ctx_r17","ExportMnemonicComponent","mnemonicPhrase","UriHandlerComponent","connectApp","WalletClient","connect","handlePermissionRequest","isSupportedOperationRequest","changeFavicon","isSupportedSignPayload","pairingString","handleStorageEvent","isConnected","hasFocus","src","PermissionScope","sourceAddress","invalidParameters","invalidOptionals","transactionHash","newValue","senderIds","newPeer","BuyComponent","sanitizer","BuyProviderType","dev","mobile","isLoading","generateOnRampURL","appId","destinationWallets","blockchains","opener","walletAddressesData","coins","XTZ","apiKey","bypassSecurityTrustResourceUrl","signUrl","encodeURIComponent","iframeLoaded","iframeError","BuyModalComponent","onrampInstance","buyTez","LoggedInComponent","loadChildren","module","redirectTo","AppRoutingModule","relativeLinkResolution","InfoComponent","href","proceed","newTab","AlertComponent","subject","removeMessage","notifyFormat","mailtoFormat","redditPmFormat","twitterPmFormat","encodeURI","encodedBody","accountType","getAlias","i_r2","MessagesComponent","ctx_r14","AccountDropdownComponent","trackAccount","ctx_r6","ctx_r10","MobileMenuDropdownComponent","delegateName","newAccount","receive","HeaderComponent","getDelegateName","parentNode","FooterComponent","darkText","promptTelegramDialog","SpinnerNewComponent","SpinnerComponent","AgreementComponent","displayAgreement","accepted","accept","AppComponent","previous","container","setDefaultLang","getBrowserLang","use","checkEmbedded","brk","clientWidth","setProperty","oldValue","returnLanguage","lang","bg","resize","fontSize","setLanguage","TruncatePipe","endTrail","returnString","endTrailstring","HttpLoaderFactory","TranslateHttpLoader","AppModule","bootstrap","BrowserModule","BrowserAnimationsModule","TranslateModule","provide","TranslateLoader","useFactory","deps","HttpClient","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","webpackContext","webpackContextResolve","__webpack_require__","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[179]}